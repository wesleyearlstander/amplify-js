{"version":3,"sources":["webpack:///./node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-federated-sign-in.entry.js"],"names":["logger","AmplifyFederatedSignIn","registerInstance","AuthState","Auth","_a","oauth","Object","h","authState","federated"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,IAAIA,MAAM,GAAG,oEAAb,2BAAa,CAAb;;AACA,IAAIC,sBAAsB;AAAG;AAAe,YAAY;AACpD,2CAAyC;AACrCC,gEAAgB,OAAhBA,OAAgB,CAAhBA;AACA;;AACA,qBAAiBC,yDAAS,CAA1B;AACA;;AACA;AACH;;AACDF,wBAAsB,CAAtBA,8BAAqD,YAAY;AAC7D,QAAI,2DAAS,OAAOG,sDAAI,CAAX,cAAb,YAAmD;AAC/C,YAAM,UAAN,wDAAM,CAAN;AACH;;AACD,QAAIC,EAAE,GAAGD,sDAAI,CAAJA,YAAT;AAAA,QAAiCE,KAAK,GAAGD,EAAE,KAAK,KAAPA,SAJoB,EAI7D,CAJ6D,CAK7D;;AACA,QAAIC,KAAK,CAAT,QAAS,CAAT,EAAqB;AACjB,oCAA8BC,MAAM,CAANA,OAAcA,MAAM,CAANA,WAAkB,eAAhCA,YAAcA,CAAdA,EAA9B,KAA8BA,CAA9B;AADJ,WAGK,IAAID,KAAK,CAAT,YAAS,CAAT,EAAyB;AAC1B,oCAA8BC,MAAM,CAANA,OAAcA,MAAM,CAANA,WAAkB,eAAhCA,YAAcA,CAAdA,EAA8DD,KAAK,CAAjG,YAAiG,CAAnEC,CAA9B;AACH;;AACD,QAAID,KAAK,CAAT,OAAS,CAAT,EAAoB;AAChB,6BAAuBC,MAAM,CAANA,OAAcA,MAAM,CAANA,WAAkB,eAAhCA,KAAcA,CAAdA,EAAuDD,KAAK,CAAnF,OAAmF,CAA5DC,CAAvB;AACH;AAdLN;;AAgBAA,wBAAsB,CAAtBA,mBAA0C,YAAY;AAClD,QAAI,CAAC,KAAL,WAAqB;AACjBD,YAAM,CAANA;AACAA,YAAM,CAANA;AACA;AACH;;AACD,QAAI,CAACO,MAAM,CAANA,2EAAkC,KAAvC,SAAKA,CAAL,EAAwD;AACpD;AACH;;AACDP,UAAM,CAANA,6BAAoC,KAApCA;AACA,WAAQQ,4DAAC,yBAAyB;AAAE,mBAAa;AAAf,KAAzB,EAAuEA,4DAAC,oBAAoB;AAAE,mBAAa;AAAf,KAApB,EAAuEA,4DAAC,8BAA8B;AAAEC,eAAS,EAAE,KAAb;AAA6B,mBAA7B;AAAuEC,eAAS,EAAE,KAAKA;AAAvF,KAA9B,CAAxE,CAAxE,CAAT;AAVJT;;AAYA;AApCJ,CAA4C,EAA5C","file":"20.js","sourcesContent":["import { r as registerInstance, h } from './index-83f2275b.js';\r\nimport { ConsoleLogger } from '@aws-amplify/core';\r\nimport { A as AuthState } from './auth-types-caf635db.js';\r\nimport { Auth } from '@aws-amplify/auth';\r\nimport { N as NO_AUTH_MODULE_FOUND } from './constants-727dee2c.js';\r\nvar logger = new ConsoleLogger('amplify-federated-sign-in');\r\nvar AmplifyFederatedSignIn = /** @class */ (function () {\r\n    function AmplifyFederatedSignIn(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /** The current authentication state. */\r\n        this.authState = AuthState.SignIn;\r\n        /** Federated credentials & configuration. */\r\n        this.federated = {};\r\n    }\r\n    AmplifyFederatedSignIn.prototype.componentWillLoad = function () {\r\n        if (!Auth || typeof Auth.configure !== 'function') {\r\n            throw new Error(NO_AUTH_MODULE_FOUND);\r\n        }\r\n        var _a = Auth.configure().oauth, oauth = _a === void 0 ? {} : _a;\r\n        // backward compatibility\r\n        if (oauth['domain']) {\r\n            this.federated.oauth_config = Object.assign(Object.assign({}, this.federated.oauth_config), oauth);\r\n        }\r\n        else if (oauth['awsCognito']) {\r\n            this.federated.oauth_config = Object.assign(Object.assign({}, this.federated.oauth_config), oauth['awsCognito']);\r\n        }\r\n        if (oauth['auth0']) {\r\n            this.federated.auth0 = Object.assign(Object.assign({}, this.federated.auth0), oauth['auth0']);\r\n        }\r\n    };\r\n    AmplifyFederatedSignIn.prototype.render = function () {\r\n        if (!this.federated) {\r\n            logger.debug('federated prop is empty. show nothing');\r\n            logger.debug('federated={google_client_id: , facebook_app_id: , amazon_client_id}');\r\n            return null;\r\n        }\r\n        if (!Object.values(AuthState).includes(this.authState)) {\r\n            return null;\r\n        }\r\n        logger.debug('federated Config is', this.federated);\r\n        return (h(\"amplify-form-section\", { \"data-test\": \"federated-sign-in-section\" }, h(\"amplify-section\", { \"data-test\": \"federated-sign-in-body-section\" }, h(\"amplify-federated-buttons\", { authState: this.authState, \"data-test\": \"federated-sign-in-buttons\", federated: this.federated }))));\r\n    };\r\n    return AmplifyFederatedSignIn;\r\n}());\r\nexport { AmplifyFederatedSignIn as amplify_federated_sign_in };\r\n"],"sourceRoot":""}