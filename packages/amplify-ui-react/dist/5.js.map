{"version":3,"sources":["webpack:///./node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-radio-button_2.entry.js","webpack:///./node_modules/@aws-amplify/ui-components/dist/esm-es5/auth-helpers-4b2fd555.js","webpack:///util (ignored)","webpack://aws_amplify_react/util (ignored)?226b"],"names":["__awaiter","value","resolve","P","step","generator","reject","result","adopt","_arguments","__generator","_","label","sent","t","trys","ops","next","verb","g","Symbol","f","y","op","done","body","amplifyRadioButtonCss","AmplifyRadioButton","registerInstance","h","type","name","onInput","placeholder","id","checked","disabled","htmlFor","fieldId","toString","C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_qrcode_node_modules_isarray","Array","arr","__proto__","Uint8Array","foo","Buffer$1","typedArraySupport","K_MAX_LENGTH","allocUnsafe","from","Object","configurable","enumerable","writable","length","val","buf","createBuffer","size","i","byteLength","actual","array","byteOffset","fromArrayLike","len","obj","isnan","units","string","leadSurrogate","bytes","codePoint","ArrayBuffer","utf8ToBytes","dst","src","blitBuffer","fromArrayBuffer","fromString","fromObject","offset","isFinite","remaining","utf8Write","start","end","newBuf","sliceLen","targetStart","target","code","list","buffer","pos","b","path","exports","require","commonjsRequire","fn","module","errorCorrectionLevel","createCommonjsModule","bit","lcStr","level","Buffer$2","typedArraySupport$1","K_MAX_LENGTH$1","allocUnsafe$1","from$1","createBuffer$1","checked$1","byteLength$1","fromArrayLike$1","isnan$1","utf8ToBytes$1","blitBuffer$1","fromArrayBuffer$1","fromString$1","fromObject$1","utf8Write$1","alloc","from_1","typedarrayBuffer","CODEWORDS_COUNT","getSymbolSize","version","getSymbolTotalCodewords","getBCHDigit","digit","data","setToSJISFunction","toSJISFunction","isKanjiModeEnabled","toSJIS","utils","alignmentPattern","posCount","Math","intervals","positions","coords","posLength","j","maskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PenaltyScores","N1","N2","N3","N4","mask","isNaN","parseInt","points","sameCountCol","sameCountRow","lastCol","lastRow","row","col","last","bitsCol","bitsRow","darkCount","modulesCount","k","getMaskAt","numPatterns","bestPattern","lowerPenalty","p","setupFormatFunc","penalty","errorCorrectionLevel$1","EXP_TABLE","LOG_TABLE","x","hasFullSupport","Buffer","hasFullSupport$1","fillWithNumber","encoding","isSingleByte","fillWithBuffer","C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_bufferFill","C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_bufferAllocUnsafe","isModern","C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_bufferAlloc","fill","toString$1","isModern$1","maxLength","isArrayBuffer","fromArrayBuffer$2","fromString$2","C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_bufferFrom","alloc$1","from_1$1","EXP_TABLE$1","LOG_TABLE$1","log","n","exp","mul","galoisField","polynomial","coeff","p1","p2","divisor","poly","polynomial$1","kanji","isValid","versionCheck","numeric","alphanumeric","kanji$1","byte","KANJI","BYTE_KANJI","BYTE","NUMERIC","ALPHANUMERIC","TEST_KANJI","TEST_NUMERIC","TEST_ALPHANUMERIC","testKanji","testNumeric","testAlphanumeric","regex","mode","ccBits","EC_BLOCKS_TABLE","EC_CODEWORDS_TABLE","getBlocksCount","getTotalCodewordsCount","errorCorrectionCode","mode$1","G18","G18_BCH","currentVersion","totalBits","segments","reservedBits","getReservedBitsCount","getTotalBitsFromDataArray","totalCodewords","ecTotalCodewords","dataTotalCodewordsBits","usableBits","ecl","getBestVersionForMixedData","seg","getBestVersionForDataLength","d","G15","G15_BCH","NumericData","group","bitBuffer","remainingNum","ALPHA_NUM_CHARS","AlphanumericData","ByteData","l","KanjiData","dijkstra_1","dijkstra","single_source_shortest_paths","predecessors","costs","open","closest","u","cost_of_s_to_u","adjacent_nodes","graph","cost_of_e","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","first_visit","msg","extract_shortest_path_from_predecessor_list","nodes","find_path","PriorityQueue","make","T","opts","default_sorter","a","push","item","cost","pop","empty","NumericData$1","numericData","ALPHA_NUM_CHARS$1","AlphanumericData$1","alphanumericData","ByteData$1","byteData","KanjiData$1","kanjiData","dijkstra_1$1","unescape","encodeURIComponent","index","numSegs","getSegments","alphaNumSegs","byteSegs","kanjiSegs","segs","s1","s2","prevSeg","acc","curr","getStringByteLength","table","prevNodeIds","nodeGroup","currentNodeIds","node","key","lastCount","prevNodeId","getSegmentBitsLength","map","bestMode","buildSingleSegment","getSegmentsFromString","buildNodes","buildGraph","optimizedSegs","mergeSegments","BitBuffer","get","bufIndex","put","num","getLengthInBits","putBit","BitMatrix","bitMatrix","alignmentPattern$1","getSymbolSize$1","FINDER_PATTERN_SIZE","getPositions","finderPattern","maskPattern$1","Buffer$3","buffer$1","ReedSolomonEncoder","pad","paddedData","remainder","buff","reedSolomonEncoder","version$1","G15$1","G15_MASK","G15_BCH$1","getEncodedBits","formatInfo","segments$1","chunkstream","ChunkStream","stream","util","allowLess","func","callback","process","dataBuffer","smallerBuf","read","count","imagePasses","getImagePasses","images","xLeftOver","width","yLeftOver","height","xRepeats","yRepeats","pass","passWidth","passHeight","getInterlaceIterator","outerXLeftOver","outerX","outerYLeftOver","outerY","interlace","paethPredictor","paeth","left","pLeft","pAbove","pUpLeft","filterParse","byteWidth","depth","Filter","bitmapInfo","interlace$1","bpp","dependencies","passes","getByteWidth","lineIndex","xComparison","xBiggerThan","rawByte","rawData","f1Left","unfilteredLine","lastLine","f2Up","f3Up","f3Left","f3Add","f4Up","f4Left","f4UpLeft","f4Add","filter","currentImage","chunkstream$1","filterParse$1","filterParseAsync","FilterAsync","buffers","that","write","complete","crc","crcTable","currentCrc","CrcCalculator","constants","PNG_SIGNATURE","TYPE_IHDR","TYPE_IEND","TYPE_IDAT","TYPE_PLTE","TYPE_tRNS","TYPE_gAMA","COLORTYPE_GRAYSCALE","COLORTYPE_PALETTE","COLORTYPE_COLOR","COLORTYPE_ALPHA","COLORTYPE_PALETTE_COLOR","COLORTYPE_COLOR_ALPHA","COLORTYPE_TO_BPP_MAP","GAMMA_DIVISION","crc$1","parser","Parser","options","signature","String","ancillary","Boolean","fileCrc","calcCrc","colorType","compr","palette","color","alpha","entries","leftOverLength","filterParseAsync$1","parser$1","pixelBppMapper","rawPos","pixel","pxData","pxPos","pixelBppCustomMapper","pixelData","leftOver","byte2","byte1","byte4","byte3","byte8","byte7","byte6","byte5","split","returner","resetAfterLine","imageWidth","image","imageHeight","imagePass","getPxPos","bits","dataToBitMap","bitRetriever","maxBit","nonInterlacedPxPos","imageIndex","mapImage8Bit","mapImageCustomBit","bitmapper","indata","outdata","makeTrans","transColor","maxOutSample","maxInSample","formatNormaliser","imageData","dePalette","replaceTransparentColor","scaleDepth","parserAsync","ParserAsync","error","metadata","gamma","finished","inflateData","simpleTransparency","headersFinished","zlib","rowSize","imageSize","chunkSize","leftToInflate","emitError","filterWrite","chunk","bitmapData","normalisedBitmapData","bitpacker","outHasAlpha","bigEndian","dataIn","maxValue","inBpp","outBpp","outData","inIndex","outIndex","bgColor","red","green","blue","rgba","getRGBA","grayscale","sum","up","upleft","filters","filterPaeth","filterSums","filterSumPaeth","filterPack","filterTypes","sel","min","packer","Packer","strategy","deflateStrategy","packedData","filteredData","packer$1","packerAsync","PackerAsync","opt","syncInflate","assert$1","assert","kMaxLength","engine","Inflate","self","availInBefore","availOutBefore","inOff","nread","have","out","availOutAfter","res","handleChunk","_close","flushFlag","zlibBufferSync","syncReader","SyncReader","syncReader$1","syncInflate$1","process_1","outBuffers","reader","filterParseSync","hasSyncZlib","parserSync","err","metaData","inflateDataList","handleSimpleTransparency","inflatedData","unfilteredData","hasSyncZlib$1","packerSync","chunks","compressedData","parserAsync$1","packerAsync$1","pngSync","png","PNG","onParsed","onError","srcX","srcY","deltaX","deltaY","idx","sample","utils$1","hex","hexCode","hexValue","r","margin","scale","dark","hex2rgba","light","rendererOpts","qrSize","qr","symbolSize","scaledMargin","posDst","pxColor","iSrc","jSrc","imgData","png$1","utils$2","png$2","pngOpts","qrData","pngImage","cb","url","output","fs","utf8","BLOCK_CHAR","WW","WB","BB","BW","INVERTED_BLOCK_CHAR","top","blocks","hMargin","vMargin","topModule","bottomModule","getBlockChar","fs$1","str","attrib","cmd","moveBy","newRow","lineLength","svgCmd","render","qrcodesize","bg","getColorAttrib","qrToPath","viewBox","svgTag","svg","xmlStr","canvas","ctx","document","canvasEl","getCanvasElement","clearCanvas","canPromise","Promise","matrix","c","mod","inc","bitIndex","byteIndex","remainingByte","createCodewords","dataTotalCodewords","ecTotalBlocks","blocksInGroup2","blocksInGroup1","totalCodewordsInGroup1","dataCodewordsInGroup1","dataCodewordsInGroup2","ecCount","rs","dcData","ecData","maxDataSize","dataSize","estimatedVersion","rawSegments","bestVersion","dataBits","createData","moduleCount","modules","setupFinderPattern","setupTimingPattern","setupAlignmentPattern","setupFormatInfo","setupVersionInfo","setupData","create","createSymbol","qrcode","canvas$1","args","argsNum","isLastArgCb","text","renderFunc","toCanvas","renderCanvas","toDataURL","toString_1","png$3","utf8$1","render$1","black","white","terminal","svg$1","create$1","toCanvas$1","renderCanvas$1","toDataURL$1","toString_1$1","browser","params","create$2","toCanvas$2","toString_1$2","checkParams","renderer","getStringRendererFromType","render$2","toDataURL$2","getRendererFromType","toBuffer","toFile","arguments","getTypeFromFilename","renderToFile","toFileStream","renderToFileStream","server","lib","amplifyTotpSetupCss","logger","AmplifyTOTPSetup","autoFocus","Translations","class_1","_this","_a","onAuthUIStateChange","authState","AuthState","user","event","checkContact","_b","error_1","dispatchToastHubEvent","encodedIssuer","encodeURI","I18n","Auth","secretKey","error_2","MfaOption","error_3","headerText","submitButtonText","handleSubmit","loading","alt","inputProps","handleInputChange","isCognitoUser","handleAuthStateChange","isEmpty","newUser","handleSignIn","ChallengeName","username","password"],"mappings":"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","file":"5.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { r as registerInstance, h, H as Host } from './index-83f2275b.js';\r\nimport { Logger, I18n } from '@aws-amplify/core';\r\nimport { M as MfaOption, A as AuthState } from './auth-types-caf635db.js';\r\nimport { Auth } from '@aws-amplify/auth';\r\nimport { T as Translations } from './Translations-97eed81d.js';\r\nimport { S as SETUP_TOTP, i as SUCCESS, N as NO_AUTH_MODULE_FOUND } from './constants-727dee2c.js';\r\nimport { d as dispatchAuthStateChangeEvent, o as onAuthUIStateChange, a as dispatchToastHubEvent } from './helpers-ff1bbc26.js';\r\nimport { c as checkContact } from './auth-helpers-4b2fd555.js';\r\nimport buffer$1 from 'buffer';\r\nimport fs from 'fs';\r\nimport util from 'util';\r\nimport stream from 'stream';\r\nimport zlib from 'zlib';\r\nimport assert from 'assert';\r\nvar amplifyRadioButtonCss = \":host{--font-family:var(--amplify-font-family)}.radio-button{display:block;width:100%;padding:16px;font-size:var(--amplify-text-sm);font-family:var(--font-family)}.radio-button input{margin-right:12px}\";\r\nvar AmplifyRadioButton = /** @class */ (function () {\r\n    function AmplifyRadioButton(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /** (Optional) The placeholder for the input element.  Using hints is recommended, but placeholders can also be useful to convey information to users. */\r\n        this.placeholder = '';\r\n        /** If `true`, the radio button is selected. */\r\n        this.checked = false;\r\n        /** If `true`, the checkbox is disabled */\r\n        this.disabled = false;\r\n    }\r\n    AmplifyRadioButton.prototype.render = function () {\r\n        return (h(\"span\", { class: \"radio-button\" }, h(\"input\", Object.assign({ type: \"radio\", name: this.name, value: this.value, onInput: this.handleInputChange, placeholder: this.placeholder, id: this.fieldId, checked: this.checked, disabled: this.disabled }, this.inputProps)), h(\"amplify-label\", { htmlFor: this.fieldId }, this.label)));\r\n    };\r\n    return AmplifyRadioButton;\r\n}());\r\nAmplifyRadioButton.style = amplifyRadioButtonCss;\r\nvar toString = {}.toString;\r\nvar C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_qrcode_node_modules_isarray = Array.isArray || function (arr) {\r\n    return toString.call(arr) == '[object Array]';\r\n};\r\nfunction typedArraySupport() {\r\n    // Can typed array instances be augmented?\r\n    try {\r\n        var arr = new Uint8Array(1);\r\n        arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42; } };\r\n        return arr.foo() === 42;\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\nBuffer$1.TYPED_ARRAY_SUPPORT = typedArraySupport();\r\nvar K_MAX_LENGTH = Buffer$1.TYPED_ARRAY_SUPPORT\r\n    ? 0x7fffffff\r\n    : 0x3fffffff;\r\nfunction Buffer$1(arg, offset, length) {\r\n    if (!Buffer$1.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer$1)) {\r\n        return new Buffer$1(arg, offset, length);\r\n    }\r\n    if (typeof arg === 'number') {\r\n        return allocUnsafe(this, arg);\r\n    }\r\n    return from(this, arg, offset, length);\r\n}\r\nif (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n    Buffer$1.prototype.__proto__ = Uint8Array.prototype;\r\n    Buffer$1.__proto__ = Uint8Array;\r\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\r\n    if (typeof Symbol !== 'undefined' && Symbol.species &&\r\n        Buffer$1[Symbol.species] === Buffer$1) {\r\n        Object.defineProperty(Buffer$1, Symbol.species, {\r\n            value: null,\r\n            configurable: true,\r\n            enumerable: false,\r\n            writable: false\r\n        });\r\n    }\r\n}\r\nfunction checked(length) {\r\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\r\n    // length is NaN (which is otherwise coerced to zero.)\r\n    if (length >= K_MAX_LENGTH) {\r\n        throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\r\n            'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\r\n    }\r\n    return length | 0;\r\n}\r\nfunction isnan(val) {\r\n    return val !== val; // eslint-disable-line no-self-compare\r\n}\r\nfunction createBuffer(that, length) {\r\n    var buf;\r\n    if (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n        buf = new Uint8Array(length);\r\n        buf.__proto__ = Buffer$1.prototype;\r\n    }\r\n    else {\r\n        // Fallback: Return an object instance of the Buffer class\r\n        buf = that;\r\n        if (buf === null) {\r\n            buf = new Buffer$1(length);\r\n        }\r\n        buf.length = length;\r\n    }\r\n    return buf;\r\n}\r\nfunction allocUnsafe(that, size) {\r\n    var buf = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\r\n    if (!Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n        for (var i = 0; i < size; ++i) {\r\n            buf[i] = 0;\r\n        }\r\n    }\r\n    return buf;\r\n}\r\nfunction fromString(that, string) {\r\n    var length = byteLength(string) | 0;\r\n    var buf = createBuffer(that, length);\r\n    var actual = buf.write(string);\r\n    if (actual !== length) {\r\n        // Writing a hex string, for example, that contains invalid characters will\r\n        // cause everything after the first invalid character to be ignored. (e.g.\r\n        // 'abxxcd' will be treated as 'ab')\r\n        buf = buf.slice(0, actual);\r\n    }\r\n    return buf;\r\n}\r\nfunction fromArrayLike(that, array) {\r\n    var length = array.length < 0 ? 0 : checked(array.length) | 0;\r\n    var buf = createBuffer(that, length);\r\n    for (var i = 0; i < length; i += 1) {\r\n        buf[i] = array[i] & 255;\r\n    }\r\n    return buf;\r\n}\r\nfunction fromArrayBuffer(that, array, byteOffset, length) {\r\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\r\n        throw new RangeError('\\'offset\\' is out of bounds');\r\n    }\r\n    if (array.byteLength < byteOffset + (length || 0)) {\r\n        throw new RangeError('\\'length\\' is out of bounds');\r\n    }\r\n    var buf;\r\n    if (byteOffset === undefined && length === undefined) {\r\n        buf = new Uint8Array(array);\r\n    }\r\n    else if (length === undefined) {\r\n        buf = new Uint8Array(array, byteOffset);\r\n    }\r\n    else {\r\n        buf = new Uint8Array(array, byteOffset, length);\r\n    }\r\n    if (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n        // Return an augmented `Uint8Array` instance, for best performance\r\n        buf.__proto__ = Buffer$1.prototype;\r\n    }\r\n    else {\r\n        // Fallback: Return an object instance of the Buffer class\r\n        buf = fromArrayLike(that, buf);\r\n    }\r\n    return buf;\r\n}\r\nfunction fromObject(that, obj) {\r\n    if (Buffer$1.isBuffer(obj)) {\r\n        var len = checked(obj.length) | 0;\r\n        var buf = createBuffer(that, len);\r\n        if (buf.length === 0) {\r\n            return buf;\r\n        }\r\n        obj.copy(buf, 0, 0, len);\r\n        return buf;\r\n    }\r\n    if (obj) {\r\n        if ((typeof ArrayBuffer !== 'undefined' &&\r\n            obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\r\n            if (typeof obj.length !== 'number' || isnan(obj.length)) {\r\n                return createBuffer(that, 0);\r\n            }\r\n            return fromArrayLike(that, obj);\r\n        }\r\n        if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\r\n            return fromArrayLike(that, obj.data);\r\n        }\r\n    }\r\n    throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\r\n}\r\nfunction utf8ToBytes(string, units) {\r\n    units = units || Infinity;\r\n    var codePoint;\r\n    var length = string.length;\r\n    var leadSurrogate = null;\r\n    var bytes = [];\r\n    for (var i = 0; i < length; ++i) {\r\n        codePoint = string.charCodeAt(i);\r\n        // is surrogate component\r\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\r\n            // last char was a lead\r\n            if (!leadSurrogate) {\r\n                // no lead yet\r\n                if (codePoint > 0xDBFF) {\r\n                    // unexpected trail\r\n                    if ((units -= 3) > -1)\r\n                        bytes.push(0xEF, 0xBF, 0xBD);\r\n                    continue;\r\n                }\r\n                else if (i + 1 === length) {\r\n                    // unpaired lead\r\n                    if ((units -= 3) > -1)\r\n                        bytes.push(0xEF, 0xBF, 0xBD);\r\n                    continue;\r\n                }\r\n                // valid lead\r\n                leadSurrogate = codePoint;\r\n                continue;\r\n            }\r\n            // 2 leads in a row\r\n            if (codePoint < 0xDC00) {\r\n                if ((units -= 3) > -1)\r\n                    bytes.push(0xEF, 0xBF, 0xBD);\r\n                leadSurrogate = codePoint;\r\n                continue;\r\n            }\r\n            // valid surrogate pair\r\n            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\r\n        }\r\n        else if (leadSurrogate) {\r\n            // valid bmp char, but last char was a lead\r\n            if ((units -= 3) > -1)\r\n                bytes.push(0xEF, 0xBF, 0xBD);\r\n        }\r\n        leadSurrogate = null;\r\n        // encode utf8\r\n        if (codePoint < 0x80) {\r\n            if ((units -= 1) < 0)\r\n                break;\r\n            bytes.push(codePoint);\r\n        }\r\n        else if (codePoint < 0x800) {\r\n            if ((units -= 2) < 0)\r\n                break;\r\n            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\r\n        }\r\n        else if (codePoint < 0x10000) {\r\n            if ((units -= 3) < 0)\r\n                break;\r\n            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\r\n        }\r\n        else if (codePoint < 0x110000) {\r\n            if ((units -= 4) < 0)\r\n                break;\r\n            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\r\n        }\r\n        else {\r\n            throw new Error('Invalid code point');\r\n        }\r\n    }\r\n    return bytes;\r\n}\r\nfunction byteLength(string) {\r\n    if (Buffer$1.isBuffer(string)) {\r\n        return string.length;\r\n    }\r\n    if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\r\n        (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\r\n        return string.byteLength;\r\n    }\r\n    if (typeof string !== 'string') {\r\n        string = '' + string;\r\n    }\r\n    var len = string.length;\r\n    if (len === 0)\r\n        return 0;\r\n    return utf8ToBytes(string).length;\r\n}\r\nfunction blitBuffer(src, dst, offset, length) {\r\n    for (var i = 0; i < length; ++i) {\r\n        if ((i + offset >= dst.length) || (i >= src.length))\r\n            break;\r\n        dst[i + offset] = src[i];\r\n    }\r\n    return i;\r\n}\r\nfunction utf8Write(buf, string, offset, length) {\r\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\r\n}\r\nfunction from(that, value, offset, length) {\r\n    if (typeof value === 'number') {\r\n        throw new TypeError('\"value\" argument must not be a number');\r\n    }\r\n    if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\r\n        return fromArrayBuffer(that, value, offset, length);\r\n    }\r\n    if (typeof value === 'string') {\r\n        return fromString(that, value);\r\n    }\r\n    return fromObject(that, value);\r\n}\r\nBuffer$1.prototype.write = function write(string, offset, length) {\r\n    // Buffer#write(string)\r\n    if (offset === undefined) {\r\n        length = this.length;\r\n        offset = 0;\r\n        // Buffer#write(string, encoding)\r\n    }\r\n    else if (length === undefined && typeof offset === 'string') {\r\n        length = this.length;\r\n        offset = 0;\r\n        // Buffer#write(string, offset[, length])\r\n    }\r\n    else if (isFinite(offset)) {\r\n        offset = offset | 0;\r\n        if (isFinite(length)) {\r\n            length = length | 0;\r\n        }\r\n        else {\r\n            length = undefined;\r\n        }\r\n    }\r\n    var remaining = this.length - offset;\r\n    if (length === undefined || length > remaining)\r\n        length = remaining;\r\n    if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\r\n        throw new RangeError('Attempt to write outside buffer bounds');\r\n    }\r\n    return utf8Write(this, string, offset, length);\r\n};\r\nBuffer$1.prototype.slice = function slice(start, end) {\r\n    var len = this.length;\r\n    start = ~~start;\r\n    end = end === undefined ? len : ~~end;\r\n    if (start < 0) {\r\n        start += len;\r\n        if (start < 0)\r\n            start = 0;\r\n    }\r\n    else if (start > len) {\r\n        start = len;\r\n    }\r\n    if (end < 0) {\r\n        end += len;\r\n        if (end < 0)\r\n            end = 0;\r\n    }\r\n    else if (end > len) {\r\n        end = len;\r\n    }\r\n    if (end < start)\r\n        end = start;\r\n    var newBuf;\r\n    if (Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n        newBuf = this.subarray(start, end);\r\n        // Return an augmented `Uint8Array` instance\r\n        newBuf.__proto__ = Buffer$1.prototype;\r\n    }\r\n    else {\r\n        var sliceLen = end - start;\r\n        newBuf = new Buffer$1(sliceLen, undefined);\r\n        for (var i = 0; i < sliceLen; ++i) {\r\n            newBuf[i] = this[i + start];\r\n        }\r\n    }\r\n    return newBuf;\r\n};\r\nBuffer$1.prototype.copy = function copy(target, targetStart, start, end) {\r\n    if (!start)\r\n        start = 0;\r\n    if (!end && end !== 0)\r\n        end = this.length;\r\n    if (targetStart >= target.length)\r\n        targetStart = target.length;\r\n    if (!targetStart)\r\n        targetStart = 0;\r\n    if (end > 0 && end < start)\r\n        end = start;\r\n    // Copy 0 bytes; we're done\r\n    if (end === start)\r\n        return 0;\r\n    if (target.length === 0 || this.length === 0)\r\n        return 0;\r\n    // Fatal error conditions\r\n    if (targetStart < 0) {\r\n        throw new RangeError('targetStart out of bounds');\r\n    }\r\n    if (start < 0 || start >= this.length)\r\n        throw new RangeError('sourceStart out of bounds');\r\n    if (end < 0)\r\n        throw new RangeError('sourceEnd out of bounds');\r\n    // Are we oob?\r\n    if (end > this.length)\r\n        end = this.length;\r\n    if (target.length - targetStart < end - start) {\r\n        end = target.length - targetStart + start;\r\n    }\r\n    var len = end - start;\r\n    var i;\r\n    if (this === target && start < targetStart && targetStart < end) {\r\n        // descending copy from end\r\n        for (i = len - 1; i >= 0; --i) {\r\n            target[i + targetStart] = this[i + start];\r\n        }\r\n    }\r\n    else if (len < 1000 || !Buffer$1.TYPED_ARRAY_SUPPORT) {\r\n        // ascending copy from start\r\n        for (i = 0; i < len; ++i) {\r\n            target[i + targetStart] = this[i + start];\r\n        }\r\n    }\r\n    else {\r\n        Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\r\n    }\r\n    return len;\r\n};\r\nBuffer$1.prototype.fill = function fill(val, start, end) {\r\n    // Handle string cases:\r\n    if (typeof val === 'string') {\r\n        if (typeof start === 'string') {\r\n            start = 0;\r\n            end = this.length;\r\n        }\r\n        else if (typeof end === 'string') {\r\n            end = this.length;\r\n        }\r\n        if (val.length === 1) {\r\n            var code = val.charCodeAt(0);\r\n            if (code < 256) {\r\n                val = code;\r\n            }\r\n        }\r\n    }\r\n    else if (typeof val === 'number') {\r\n        val = val & 255;\r\n    }\r\n    // Invalid ranges are not set to a default, so can range check early.\r\n    if (start < 0 || this.length < start || this.length < end) {\r\n        throw new RangeError('Out of range index');\r\n    }\r\n    if (end <= start) {\r\n        return this;\r\n    }\r\n    start = start >>> 0;\r\n    end = end === undefined ? this.length : end >>> 0;\r\n    if (!val)\r\n        val = 0;\r\n    var i;\r\n    if (typeof val === 'number') {\r\n        for (i = start; i < end; ++i) {\r\n            this[i] = val;\r\n        }\r\n    }\r\n    else {\r\n        var bytes = Buffer$1.isBuffer(val)\r\n            ? val\r\n            : new Buffer$1(val);\r\n        var len = bytes.length;\r\n        for (i = 0; i < end - start; ++i) {\r\n            this[i + start] = bytes[i % len];\r\n        }\r\n    }\r\n    return this;\r\n};\r\nBuffer$1.concat = function concat(list, length) {\r\n    if (!C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_qrcode_node_modules_isarray(list)) {\r\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\r\n    }\r\n    if (list.length === 0) {\r\n        return createBuffer(null, 0);\r\n    }\r\n    var i;\r\n    if (length === undefined) {\r\n        length = 0;\r\n        for (i = 0; i < list.length; ++i) {\r\n            length += list[i].length;\r\n        }\r\n    }\r\n    var buffer = allocUnsafe(null, length);\r\n    var pos = 0;\r\n    for (i = 0; i < list.length; ++i) {\r\n        var buf = list[i];\r\n        if (!Buffer$1.isBuffer(buf)) {\r\n            throw new TypeError('\"list\" argument must be an Array of Buffers');\r\n        }\r\n        buf.copy(buffer, pos);\r\n        pos += buf.length;\r\n    }\r\n    return buffer;\r\n};\r\nBuffer$1.byteLength = byteLength;\r\nBuffer$1.prototype._isBuffer = true;\r\nBuffer$1.isBuffer = function isBuffer(b) {\r\n    return !!(b != null && b._isBuffer);\r\n};\r\nfunction createCommonjsModule(fn, basedir, module) {\r\n    return module = {\r\n        path: basedir,\r\n        exports: {},\r\n        require: function (path, base) {\r\n            return commonjsRequire();\r\n        }\r\n    }, fn(module, module.exports), module.exports;\r\n}\r\nfunction commonjsRequire() {\r\n    throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\r\n}\r\nvar errorCorrectionLevel = createCommonjsModule(function (module, exports) {\r\n    exports.L = { bit: 1 };\r\n    exports.M = { bit: 0 };\r\n    exports.Q = { bit: 3 };\r\n    exports.H = { bit: 2 };\r\n    function fromString(string) {\r\n        if (typeof string !== 'string') {\r\n            throw new Error('Param is not a string');\r\n        }\r\n        var lcStr = string.toLowerCase();\r\n        switch (lcStr) {\r\n            case 'l':\r\n            case 'low':\r\n                return exports.L;\r\n            case 'm':\r\n            case 'medium':\r\n                return exports.M;\r\n            case 'q':\r\n            case 'quartile':\r\n                return exports.Q;\r\n            case 'h':\r\n            case 'high':\r\n                return exports.H;\r\n            default:\r\n                throw new Error('Unknown EC Level: ' + string);\r\n        }\r\n    }\r\n    exports.isValid = function isValid(level) {\r\n        return level && typeof level.bit !== 'undefined' &&\r\n            level.bit >= 0 && level.bit < 4;\r\n    };\r\n    exports.from = function from(value, defaultValue) {\r\n        if (exports.isValid(value)) {\r\n            return value;\r\n        }\r\n        try {\r\n            return fromString(value);\r\n        }\r\n        catch (e) {\r\n            return defaultValue;\r\n        }\r\n    };\r\n});\r\nfunction typedArraySupport$1() {\r\n    // Can typed array instances be augmented?\r\n    try {\r\n        var arr = new Uint8Array(1);\r\n        arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42; } };\r\n        return arr.foo() === 42;\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\nBuffer$2.TYPED_ARRAY_SUPPORT = typedArraySupport$1();\r\nvar K_MAX_LENGTH$1 = Buffer$2.TYPED_ARRAY_SUPPORT\r\n    ? 0x7fffffff\r\n    : 0x3fffffff;\r\nfunction Buffer$2(arg, offset, length) {\r\n    if (!Buffer$2.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer$2)) {\r\n        return new Buffer$2(arg, offset, length);\r\n    }\r\n    if (typeof arg === 'number') {\r\n        return allocUnsafe$1(this, arg);\r\n    }\r\n    return from$1(this, arg, offset, length);\r\n}\r\nif (Buffer$2.TYPED_ARRAY_SUPPORT) {\r\n    Buffer$2.prototype.__proto__ = Uint8Array.prototype;\r\n    Buffer$2.__proto__ = Uint8Array;\r\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\r\n    if (typeof Symbol !== 'undefined' && Symbol.species &&\r\n        Buffer$2[Symbol.species] === Buffer$2) {\r\n        Object.defineProperty(Buffer$2, Symbol.species, {\r\n            value: null,\r\n            configurable: true,\r\n            enumerable: false,\r\n            writable: false\r\n        });\r\n    }\r\n}\r\nfunction checked$1(length) {\r\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\r\n    // length is NaN (which is otherwise coerced to zero.)\r\n    if (length >= K_MAX_LENGTH$1) {\r\n        throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\r\n            'size: 0x' + K_MAX_LENGTH$1.toString(16) + ' bytes');\r\n    }\r\n    return length | 0;\r\n}\r\nfunction isnan$1(val) {\r\n    return val !== val; // eslint-disable-line no-self-compare\r\n}\r\nfunction createBuffer$1(that, length) {\r\n    var buf;\r\n    if (Buffer$2.TYPED_ARRAY_SUPPORT) {\r\n        buf = new Uint8Array(length);\r\n        buf.__proto__ = Buffer$2.prototype;\r\n    }\r\n    else {\r\n        // Fallback: Return an object instance of the Buffer class\r\n        buf = that;\r\n        if (buf === null) {\r\n            buf = new Buffer$2(length);\r\n        }\r\n        buf.length = length;\r\n    }\r\n    return buf;\r\n}\r\nfunction allocUnsafe$1(that, size) {\r\n    var buf = createBuffer$1(that, size < 0 ? 0 : checked$1(size) | 0);\r\n    if (!Buffer$2.TYPED_ARRAY_SUPPORT) {\r\n        for (var i = 0; i < size; ++i) {\r\n            buf[i] = 0;\r\n        }\r\n    }\r\n    return buf;\r\n}\r\nfunction fromString$1(that, string) {\r\n    var length = byteLength$1(string) | 0;\r\n    var buf = createBuffer$1(that, length);\r\n    var actual = buf.write(string);\r\n    if (actual !== length) {\r\n        // Writing a hex string, for example, that contains invalid characters will\r\n        // cause everything after the first invalid character to be ignored. (e.g.\r\n        // 'abxxcd' will be treated as 'ab')\r\n        buf = buf.slice(0, actual);\r\n    }\r\n    return buf;\r\n}\r\nfunction fromArrayLike$1(that, array) {\r\n    var length = array.length < 0 ? 0 : checked$1(array.length) | 0;\r\n    var buf = createBuffer$1(that, length);\r\n    for (var i = 0; i < length; i += 1) {\r\n        buf[i] = array[i] & 255;\r\n    }\r\n    return buf;\r\n}\r\nfunction fromArrayBuffer$1(that, array, byteOffset, length) {\r\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\r\n        throw new RangeError('\\'offset\\' is out of bounds');\r\n    }\r\n    if (array.byteLength < byteOffset + (length || 0)) {\r\n        throw new RangeError('\\'length\\' is out of bounds');\r\n    }\r\n    var buf;\r\n    if (byteOffset === undefined && length === undefined) {\r\n        buf = new Uint8Array(array);\r\n    }\r\n    else if (length === undefined) {\r\n        buf = new Uint8Array(array, byteOffset);\r\n    }\r\n    else {\r\n        buf = new Uint8Array(array, byteOffset, length);\r\n    }\r\n    if (Buffer$2.TYPED_ARRAY_SUPPORT) {\r\n        // Return an augmented `Uint8Array` instance, for best performance\r\n        buf.__proto__ = Buffer$2.prototype;\r\n    }\r\n    else {\r\n        // Fallback: Return an object instance of the Buffer class\r\n        buf = fromArrayLike$1(that, buf);\r\n    }\r\n    return buf;\r\n}\r\nfunction fromObject$1(that, obj) {\r\n    if (Buffer$2.isBuffer(obj)) {\r\n        var len = checked$1(obj.length) | 0;\r\n        var buf = createBuffer$1(that, len);\r\n        if (buf.length === 0) {\r\n            return buf;\r\n        }\r\n        obj.copy(buf, 0, 0, len);\r\n        return buf;\r\n    }\r\n    if (obj) {\r\n        if ((typeof ArrayBuffer !== 'undefined' &&\r\n            obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\r\n            if (typeof obj.length !== 'number' || isnan$1(obj.length)) {\r\n                return createBuffer$1(that, 0);\r\n            }\r\n            return fromArrayLike$1(that, obj);\r\n        }\r\n        if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\r\n            return fromArrayLike$1(that, obj.data);\r\n        }\r\n    }\r\n    throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\r\n}\r\nfunction utf8ToBytes$1(string, units) {\r\n    units = units || Infinity;\r\n    var codePoint;\r\n    var length = string.length;\r\n    var leadSurrogate = null;\r\n    var bytes = [];\r\n    for (var i = 0; i < length; ++i) {\r\n        codePoint = string.charCodeAt(i);\r\n        // is surrogate component\r\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\r\n            // last char was a lead\r\n            if (!leadSurrogate) {\r\n                // no lead yet\r\n                if (codePoint > 0xDBFF) {\r\n                    // unexpected trail\r\n                    if ((units -= 3) > -1)\r\n                        bytes.push(0xEF, 0xBF, 0xBD);\r\n                    continue;\r\n                }\r\n                else if (i + 1 === length) {\r\n                    // unpaired lead\r\n                    if ((units -= 3) > -1)\r\n                        bytes.push(0xEF, 0xBF, 0xBD);\r\n                    continue;\r\n                }\r\n                // valid lead\r\n                leadSurrogate = codePoint;\r\n                continue;\r\n            }\r\n            // 2 leads in a row\r\n            if (codePoint < 0xDC00) {\r\n                if ((units -= 3) > -1)\r\n                    bytes.push(0xEF, 0xBF, 0xBD);\r\n                leadSurrogate = codePoint;\r\n                continue;\r\n            }\r\n            // valid surrogate pair\r\n            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\r\n        }\r\n        else if (leadSurrogate) {\r\n            // valid bmp char, but last char was a lead\r\n            if ((units -= 3) > -1)\r\n                bytes.push(0xEF, 0xBF, 0xBD);\r\n        }\r\n        leadSurrogate = null;\r\n        // encode utf8\r\n        if (codePoint < 0x80) {\r\n            if ((units -= 1) < 0)\r\n                break;\r\n            bytes.push(codePoint);\r\n        }\r\n        else if (codePoint < 0x800) {\r\n            if ((units -= 2) < 0)\r\n                break;\r\n            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\r\n        }\r\n        else if (codePoint < 0x10000) {\r\n            if ((units -= 3) < 0)\r\n                break;\r\n            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\r\n        }\r\n        else if (codePoint < 0x110000) {\r\n            if ((units -= 4) < 0)\r\n                break;\r\n            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\r\n        }\r\n        else {\r\n            throw new Error('Invalid code point');\r\n        }\r\n    }\r\n    return bytes;\r\n}\r\nfunction byteLength$1(string) {\r\n    if (Buffer$2.isBuffer(string)) {\r\n        return string.length;\r\n    }\r\n    if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\r\n        (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\r\n        return string.byteLength;\r\n    }\r\n    if (typeof string !== 'string') {\r\n        string = '' + string;\r\n    }\r\n    var len = string.length;\r\n    if (len === 0)\r\n        return 0;\r\n    return utf8ToBytes$1(string).length;\r\n}\r\nfunction blitBuffer$1(src, dst, offset, length) {\r\n    for (var i = 0; i < length; ++i) {\r\n        if ((i + offset >= dst.length) || (i >= src.length))\r\n            break;\r\n        dst[i + offset] = src[i];\r\n    }\r\n    return i;\r\n}\r\nfunction utf8Write$1(buf, string, offset, length) {\r\n    return blitBuffer$1(utf8ToBytes$1(string, buf.length - offset), buf, offset, length);\r\n}\r\nfunction from$1(that, value, offset, length) {\r\n    if (typeof value === 'number') {\r\n        throw new TypeError('\"value\" argument must not be a number');\r\n    }\r\n    if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\r\n        return fromArrayBuffer$1(that, value, offset, length);\r\n    }\r\n    if (typeof value === 'string') {\r\n        return fromString$1(that, value);\r\n    }\r\n    return fromObject$1(that, value);\r\n}\r\nBuffer$2.prototype.write = function write(string, offset, length) {\r\n    // Buffer#write(string)\r\n    if (offset === undefined) {\r\n        length = this.length;\r\n        offset = 0;\r\n        // Buffer#write(string, encoding)\r\n    }\r\n    else if (length === undefined && typeof offset === 'string') {\r\n        length = this.length;\r\n        offset = 0;\r\n        // Buffer#write(string, offset[, length])\r\n    }\r\n    else if (isFinite(offset)) {\r\n        offset = offset | 0;\r\n        if (isFinite(length)) {\r\n            length = length | 0;\r\n        }\r\n        else {\r\n            length = undefined;\r\n        }\r\n    }\r\n    var remaining = this.length - offset;\r\n    if (length === undefined || length > remaining)\r\n        length = remaining;\r\n    if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\r\n        throw new RangeError('Attempt to write outside buffer bounds');\r\n    }\r\n    return utf8Write$1(this, string, offset, length);\r\n};\r\nBuffer$2.prototype.slice = function slice(start, end) {\r\n    var len = this.length;\r\n    start = ~~start;\r\n    end = end === undefined ? len : ~~end;\r\n    if (start < 0) {\r\n        start += len;\r\n        if (start < 0)\r\n            start = 0;\r\n    }\r\n    else if (start > len) {\r\n        start = len;\r\n    }\r\n    if (end < 0) {\r\n        end += len;\r\n        if (end < 0)\r\n            end = 0;\r\n    }\r\n    else if (end > len) {\r\n        end = len;\r\n    }\r\n    if (end < start)\r\n        end = start;\r\n    var newBuf;\r\n    if (Buffer$2.TYPED_ARRAY_SUPPORT) {\r\n        newBuf = this.subarray(start, end);\r\n        // Return an augmented `Uint8Array` instance\r\n        newBuf.__proto__ = Buffer$2.prototype;\r\n    }\r\n    else {\r\n        var sliceLen = end - start;\r\n        newBuf = new Buffer$2(sliceLen, undefined);\r\n        for (var i = 0; i < sliceLen; ++i) {\r\n            newBuf[i] = this[i + start];\r\n        }\r\n    }\r\n    return newBuf;\r\n};\r\nBuffer$2.prototype.copy = function copy(target, targetStart, start, end) {\r\n    if (!start)\r\n        start = 0;\r\n    if (!end && end !== 0)\r\n        end = this.length;\r\n    if (targetStart >= target.length)\r\n        targetStart = target.length;\r\n    if (!targetStart)\r\n        targetStart = 0;\r\n    if (end > 0 && end < start)\r\n        end = start;\r\n    // Copy 0 bytes; we're done\r\n    if (end === start)\r\n        return 0;\r\n    if (target.length === 0 || this.length === 0)\r\n        return 0;\r\n    // Fatal error conditions\r\n    if (targetStart < 0) {\r\n        throw new RangeError('targetStart out of bounds');\r\n    }\r\n    if (start < 0 || start >= this.length)\r\n        throw new RangeError('sourceStart out of bounds');\r\n    if (end < 0)\r\n        throw new RangeError('sourceEnd out of bounds');\r\n    // Are we oob?\r\n    if (end > this.length)\r\n        end = this.length;\r\n    if (target.length - targetStart < end - start) {\r\n        end = target.length - targetStart + start;\r\n    }\r\n    var len = end - start;\r\n    var i;\r\n    if (this === target && start < targetStart && targetStart < end) {\r\n        // descending copy from end\r\n        for (i = len - 1; i >= 0; --i) {\r\n            target[i + targetStart] = this[i + start];\r\n        }\r\n    }\r\n    else if (len < 1000 || !Buffer$2.TYPED_ARRAY_SUPPORT) {\r\n        // ascending copy from start\r\n        for (i = 0; i < len; ++i) {\r\n            target[i + targetStart] = this[i + start];\r\n        }\r\n    }\r\n    else {\r\n        Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\r\n    }\r\n    return len;\r\n};\r\nBuffer$2.prototype.fill = function fill(val, start, end) {\r\n    // Handle string cases:\r\n    if (typeof val === 'string') {\r\n        if (typeof start === 'string') {\r\n            start = 0;\r\n            end = this.length;\r\n        }\r\n        else if (typeof end === 'string') {\r\n            end = this.length;\r\n        }\r\n        if (val.length === 1) {\r\n            var code = val.charCodeAt(0);\r\n            if (code < 256) {\r\n                val = code;\r\n            }\r\n        }\r\n    }\r\n    else if (typeof val === 'number') {\r\n        val = val & 255;\r\n    }\r\n    // Invalid ranges are not set to a default, so can range check early.\r\n    if (start < 0 || this.length < start || this.length < end) {\r\n        throw new RangeError('Out of range index');\r\n    }\r\n    if (end <= start) {\r\n        return this;\r\n    }\r\n    start = start >>> 0;\r\n    end = end === undefined ? this.length : end >>> 0;\r\n    if (!val)\r\n        val = 0;\r\n    var i;\r\n    if (typeof val === 'number') {\r\n        for (i = start; i < end; ++i) {\r\n            this[i] = val;\r\n        }\r\n    }\r\n    else {\r\n        var bytes = Buffer$2.isBuffer(val)\r\n            ? val\r\n            : new Buffer$2(val);\r\n        var len = bytes.length;\r\n        for (i = 0; i < end - start; ++i) {\r\n            this[i + start] = bytes[i % len];\r\n        }\r\n    }\r\n    return this;\r\n};\r\nBuffer$2.concat = function concat(list, length) {\r\n    if (!C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_qrcode_node_modules_isarray(list)) {\r\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\r\n    }\r\n    if (list.length === 0) {\r\n        return createBuffer$1(null, 0);\r\n    }\r\n    var i;\r\n    if (length === undefined) {\r\n        length = 0;\r\n        for (i = 0; i < list.length; ++i) {\r\n            length += list[i].length;\r\n        }\r\n    }\r\n    var buffer = allocUnsafe$1(null, length);\r\n    var pos = 0;\r\n    for (i = 0; i < list.length; ++i) {\r\n        var buf = list[i];\r\n        if (!Buffer$2.isBuffer(buf)) {\r\n            throw new TypeError('\"list\" argument must be an Array of Buffers');\r\n        }\r\n        buf.copy(buffer, pos);\r\n        pos += buf.length;\r\n    }\r\n    return buffer;\r\n};\r\nBuffer$2.byteLength = byteLength$1;\r\nBuffer$2.prototype._isBuffer = true;\r\nBuffer$2.isBuffer = function isBuffer(b) {\r\n    return !!(b != null && b._isBuffer);\r\n};\r\nvar alloc = function (size) {\r\n    var buffer = new Buffer$2(size);\r\n    buffer.fill(0);\r\n    return buffer;\r\n};\r\nvar from_1 = function (data) {\r\n    return new Buffer$2(data);\r\n};\r\nvar typedarrayBuffer = {\r\n    alloc: alloc,\r\n    from: from_1\r\n};\r\nvar toSJISFunction;\r\nvar CODEWORDS_COUNT = [\r\n    0,\r\n    26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\r\n    404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\r\n    1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\r\n    2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\r\n];\r\n/**\r\n * Returns the QR Code size for the specified version\r\n *\r\n * @param  {Number} version QR Code version\r\n * @return {Number}         size of QR code\r\n */\r\nvar getSymbolSize = function getSymbolSize(version) {\r\n    if (!version)\r\n        throw new Error('\"version\" cannot be null or undefined');\r\n    if (version < 1 || version > 40)\r\n        throw new Error('\"version\" should be in range from 1 to 40');\r\n    return version * 4 + 17;\r\n};\r\n/**\r\n * Returns the total number of codewords used to store data and EC information.\r\n *\r\n * @param  {Number} version QR Code version\r\n * @return {Number}         Data length in bits\r\n */\r\nvar getSymbolTotalCodewords = function getSymbolTotalCodewords(version) {\r\n    return CODEWORDS_COUNT[version];\r\n};\r\n/**\r\n * Encode data with Bose-Chaudhuri-Hocquenghem\r\n *\r\n * @param  {Number} data Value to encode\r\n * @return {Number}      Encoded value\r\n */\r\nvar getBCHDigit = function (data) {\r\n    var digit = 0;\r\n    while (data !== 0) {\r\n        digit++;\r\n        data >>>= 1;\r\n    }\r\n    return digit;\r\n};\r\nvar setToSJISFunction = function setToSJISFunction(f) {\r\n    if (typeof f !== 'function') {\r\n        throw new Error('\"toSJISFunc\" is not a valid function.');\r\n    }\r\n    toSJISFunction = f;\r\n};\r\nvar isKanjiModeEnabled = function () {\r\n    return typeof toSJISFunction !== 'undefined';\r\n};\r\nvar toSJIS = function toSJIS(kanji) {\r\n    return toSJISFunction(kanji);\r\n};\r\nvar utils = {\r\n    getSymbolSize: getSymbolSize,\r\n    getSymbolTotalCodewords: getSymbolTotalCodewords,\r\n    getBCHDigit: getBCHDigit,\r\n    setToSJISFunction: setToSJISFunction,\r\n    isKanjiModeEnabled: isKanjiModeEnabled,\r\n    toSJIS: toSJIS\r\n};\r\nvar alignmentPattern = createCommonjsModule(function (module, exports) {\r\n    /**\r\n     * Alignment pattern are fixed reference pattern in defined positions\r\n     * in a matrix symbology, which enables the decode software to re-synchronise\r\n     * the coordinate mapping of the image modules in the event of moderate amounts\r\n     * of distortion of the image.\r\n     *\r\n     * Alignment patterns are present only in QR Code symbols of version 2 or larger\r\n     * and their number depends on the symbol version.\r\n     */\r\n    var getSymbolSize = utils.getSymbolSize;\r\n    /**\r\n     * Calculate the row/column coordinates of the center module of each alignment pattern\r\n     * for the specified QR Code version.\r\n     *\r\n     * The alignment patterns are positioned symmetrically on either side of the diagonal\r\n     * running from the top left corner of the symbol to the bottom right corner.\r\n     *\r\n     * Since positions are simmetrical only half of the coordinates are returned.\r\n     * Each item of the array will represent in turn the x and y coordinate.\r\n     * @see {@link getPositions}\r\n     *\r\n     * @param  {Number} version QR Code version\r\n     * @return {Array}          Array of coordinate\r\n     */\r\n    exports.getRowColCoords = function getRowColCoords(version) {\r\n        if (version === 1)\r\n            return [];\r\n        var posCount = Math.floor(version / 7) + 2;\r\n        var size = getSymbolSize(version);\r\n        var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2;\r\n        var positions = [size - 7]; // Last coord is always (size - 7)\r\n        for (var i = 1; i < posCount - 1; i++) {\r\n            positions[i] = positions[i - 1] - intervals;\r\n        }\r\n        positions.push(6); // First coord is always 6\r\n        return positions.reverse();\r\n    };\r\n    /**\r\n     * Returns an array containing the positions of each alignment pattern.\r\n     * Each array's element represent the center point of the pattern as (x, y) coordinates\r\n     *\r\n     * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\r\n     * and filtering out the items that overlaps with finder pattern\r\n     *\r\n     * @example\r\n     * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\r\n     * The alignment patterns, therefore, are to be centered on (row, column)\r\n     * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\r\n     * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\r\n     * and are not therefore used for alignment patterns.\r\n     *\r\n     * var pos = getPositions(7)\r\n     * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\r\n     *\r\n     * @param  {Number} version QR Code version\r\n     * @return {Array}          Array of coordinates\r\n     */\r\n    exports.getPositions = function getPositions(version) {\r\n        var coords = [];\r\n        var pos = exports.getRowColCoords(version);\r\n        var posLength = pos.length;\r\n        for (var i = 0; i < posLength; i++) {\r\n            for (var j = 0; j < posLength; j++) {\r\n                // Skip if position is occupied by finder patterns\r\n                if ((i === 0 && j === 0) || // top-left\r\n                    (i === 0 && j === posLength - 1) || // bottom-left\r\n                    (i === posLength - 1 && j === 0)) { // top-right\r\n                    continue;\r\n                }\r\n                coords.push([pos[i], pos[j]]);\r\n            }\r\n        }\r\n        return coords;\r\n    };\r\n});\r\nvar maskPattern = createCommonjsModule(function (module, exports) {\r\n    /**\r\n     * Data mask pattern reference\r\n     * @type {Object}\r\n     */\r\n    exports.Patterns = {\r\n        PATTERN000: 0,\r\n        PATTERN001: 1,\r\n        PATTERN010: 2,\r\n        PATTERN011: 3,\r\n        PATTERN100: 4,\r\n        PATTERN101: 5,\r\n        PATTERN110: 6,\r\n        PATTERN111: 7\r\n    };\r\n    /**\r\n     * Weighted penalty scores for the undesirable features\r\n     * @type {Object}\r\n     */\r\n    var PenaltyScores = {\r\n        N1: 3,\r\n        N2: 3,\r\n        N3: 40,\r\n        N4: 10\r\n    };\r\n    /**\r\n     * Check if mask pattern value is valid\r\n     *\r\n     * @param  {Number}  mask    Mask pattern\r\n     * @return {Boolean}         true if valid, false otherwise\r\n     */\r\n    exports.isValid = function isValid(mask) {\r\n        return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7;\r\n    };\r\n    /**\r\n     * Returns mask pattern from a value.\r\n     * If value is not valid, returns undefined\r\n     *\r\n     * @param  {Number|String} value        Mask pattern value\r\n     * @return {Number}                     Valid mask pattern or undefined\r\n     */\r\n    exports.from = function from(value) {\r\n        return exports.isValid(value) ? parseInt(value, 10) : undefined;\r\n    };\r\n    /**\r\n    * Find adjacent modules in row/column with the same color\r\n    * and assign a penalty value.\r\n    *\r\n    * Points: N1 + i\r\n    * i is the amount by which the number of adjacent modules of the same color exceeds 5\r\n    */\r\n    exports.getPenaltyN1 = function getPenaltyN1(data) {\r\n        var size = data.size;\r\n        var points = 0;\r\n        var sameCountCol = 0;\r\n        var sameCountRow = 0;\r\n        var lastCol = null;\r\n        var lastRow = null;\r\n        for (var row = 0; row < size; row++) {\r\n            sameCountCol = sameCountRow = 0;\r\n            lastCol = lastRow = null;\r\n            for (var col = 0; col < size; col++) {\r\n                var module = data.get(row, col);\r\n                if (module === lastCol) {\r\n                    sameCountCol++;\r\n                }\r\n                else {\r\n                    if (sameCountCol >= 5)\r\n                        points += PenaltyScores.N1 + (sameCountCol - 5);\r\n                    lastCol = module;\r\n                    sameCountCol = 1;\r\n                }\r\n                module = data.get(col, row);\r\n                if (module === lastRow) {\r\n                    sameCountRow++;\r\n                }\r\n                else {\r\n                    if (sameCountRow >= 5)\r\n                        points += PenaltyScores.N1 + (sameCountRow - 5);\r\n                    lastRow = module;\r\n                    sameCountRow = 1;\r\n                }\r\n            }\r\n            if (sameCountCol >= 5)\r\n                points += PenaltyScores.N1 + (sameCountCol - 5);\r\n            if (sameCountRow >= 5)\r\n                points += PenaltyScores.N1 + (sameCountRow - 5);\r\n        }\r\n        return points;\r\n    };\r\n    /**\r\n     * Find 2x2 blocks with the same color and assign a penalty value\r\n     *\r\n     * Points: N2 * (m - 1) * (n - 1)\r\n     */\r\n    exports.getPenaltyN2 = function getPenaltyN2(data) {\r\n        var size = data.size;\r\n        var points = 0;\r\n        for (var row = 0; row < size - 1; row++) {\r\n            for (var col = 0; col < size - 1; col++) {\r\n                var last = data.get(row, col) +\r\n                    data.get(row, col + 1) +\r\n                    data.get(row + 1, col) +\r\n                    data.get(row + 1, col + 1);\r\n                if (last === 4 || last === 0)\r\n                    points++;\r\n            }\r\n        }\r\n        return points * PenaltyScores.N2;\r\n    };\r\n    /**\r\n     * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\r\n     * preceded or followed by light area 4 modules wide\r\n     *\r\n     * Points: N3 * number of pattern found\r\n     */\r\n    exports.getPenaltyN3 = function getPenaltyN3(data) {\r\n        var size = data.size;\r\n        var points = 0;\r\n        var bitsCol = 0;\r\n        var bitsRow = 0;\r\n        for (var row = 0; row < size; row++) {\r\n            bitsCol = bitsRow = 0;\r\n            for (var col = 0; col < size; col++) {\r\n                bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col);\r\n                if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D))\r\n                    points++;\r\n                bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row);\r\n                if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D))\r\n                    points++;\r\n            }\r\n        }\r\n        return points * PenaltyScores.N3;\r\n    };\r\n    /**\r\n     * Calculate proportion of dark modules in entire symbol\r\n     *\r\n     * Points: N4 * k\r\n     *\r\n     * k is the rating of the deviation of the proportion of dark modules\r\n     * in the symbol from 50% in steps of 5%\r\n     */\r\n    exports.getPenaltyN4 = function getPenaltyN4(data) {\r\n        var darkCount = 0;\r\n        var modulesCount = data.data.length;\r\n        for (var i = 0; i < modulesCount; i++)\r\n            darkCount += data.data[i];\r\n        var k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10);\r\n        return k * PenaltyScores.N4;\r\n    };\r\n    /**\r\n     * Return mask value at given position\r\n     *\r\n     * @param  {Number} maskPattern Pattern reference value\r\n     * @param  {Number} i           Row\r\n     * @param  {Number} j           Column\r\n     * @return {Boolean}            Mask value\r\n     */\r\n    function getMaskAt(maskPattern, i, j) {\r\n        switch (maskPattern) {\r\n            case exports.Patterns.PATTERN000: return (i + j) % 2 === 0;\r\n            case exports.Patterns.PATTERN001: return i % 2 === 0;\r\n            case exports.Patterns.PATTERN010: return j % 3 === 0;\r\n            case exports.Patterns.PATTERN011: return (i + j) % 3 === 0;\r\n            case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\r\n            case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0;\r\n            case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0;\r\n            case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0;\r\n            default: throw new Error('bad maskPattern:' + maskPattern);\r\n        }\r\n    }\r\n    /**\r\n     * Apply a mask pattern to a BitMatrix\r\n     *\r\n     * @param  {Number}    pattern Pattern reference number\r\n     * @param  {BitMatrix} data    BitMatrix data\r\n     */\r\n    exports.applyMask = function applyMask(pattern, data) {\r\n        var size = data.size;\r\n        for (var col = 0; col < size; col++) {\r\n            for (var row = 0; row < size; row++) {\r\n                if (data.isReserved(row, col))\r\n                    continue;\r\n                data.xor(row, col, getMaskAt(pattern, row, col));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the best mask pattern for data\r\n     *\r\n     * @param  {BitMatrix} data\r\n     * @return {Number} Mask pattern reference number\r\n     */\r\n    exports.getBestMask = function getBestMask(data, setupFormatFunc) {\r\n        var numPatterns = Object.keys(exports.Patterns).length;\r\n        var bestPattern = 0;\r\n        var lowerPenalty = Infinity;\r\n        for (var p = 0; p < numPatterns; p++) {\r\n            setupFormatFunc(p);\r\n            exports.applyMask(p, data);\r\n            // Calculate penalty\r\n            var penalty = exports.getPenaltyN1(data) +\r\n                exports.getPenaltyN2(data) +\r\n                exports.getPenaltyN3(data) +\r\n                exports.getPenaltyN4(data);\r\n            // Undo previously applied mask\r\n            exports.applyMask(p, data);\r\n            if (penalty < lowerPenalty) {\r\n                lowerPenalty = penalty;\r\n                bestPattern = p;\r\n            }\r\n        }\r\n        return bestPattern;\r\n    };\r\n});\r\nvar errorCorrectionLevel$1 = createCommonjsModule(function (module, exports) {\r\n    exports.L = { bit: 1 };\r\n    exports.M = { bit: 0 };\r\n    exports.Q = { bit: 3 };\r\n    exports.H = { bit: 2 };\r\n    function fromString(string) {\r\n        if (typeof string !== 'string') {\r\n            throw new Error('Param is not a string');\r\n        }\r\n        var lcStr = string.toLowerCase();\r\n        switch (lcStr) {\r\n            case 'l':\r\n            case 'low':\r\n                return exports.L;\r\n            case 'm':\r\n            case 'medium':\r\n                return exports.M;\r\n            case 'q':\r\n            case 'quartile':\r\n                return exports.Q;\r\n            case 'h':\r\n            case 'high':\r\n                return exports.H;\r\n            default:\r\n                throw new Error('Unknown EC Level: ' + string);\r\n        }\r\n    }\r\n    exports.isValid = function isValid(level) {\r\n        return level && typeof level.bit !== 'undefined' &&\r\n            level.bit >= 0 && level.bit < 4;\r\n    };\r\n    exports.from = function from(value, defaultValue) {\r\n        if (exports.isValid(value)) {\r\n            return value;\r\n        }\r\n        try {\r\n            return fromString(value);\r\n        }\r\n        catch (e) {\r\n            return defaultValue;\r\n        }\r\n    };\r\n});\r\nvar EXP_TABLE = typedarrayBuffer.alloc(512);\r\nvar LOG_TABLE = typedarrayBuffer.alloc(256);\r\n(function initTables() {\r\n    var x = 1;\r\n    for (var i = 0; i < 255; i++) {\r\n        EXP_TABLE[i] = x;\r\n        LOG_TABLE[x] = i;\r\n        x <<= 1; // multiply by 2\r\n        // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\r\n        // This means that when a number is 256 or larger, it should be XORed with 0x11D.\r\n        if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\r\n            x ^= 0x11D;\r\n        }\r\n    }\r\n    // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\r\n    // stay inside the bounds (because we will mainly use this table for the multiplication of\r\n    // two GF numbers, no more).\r\n    // @see {@link mul}\r\n    for (i = 255; i < 512; i++) {\r\n        EXP_TABLE[i] = EXP_TABLE[i - 255];\r\n    }\r\n}());\r\n/* Node.js 6.4.0 and up has full support */\r\nvar hasFullSupport = (function () {\r\n    try {\r\n        if (!Buffer.isEncoding('latin1')) {\r\n            return false;\r\n        }\r\n        var buf = Buffer.alloc ? Buffer.alloc(4) : new Buffer(4);\r\n        buf.fill('ab', 'ucs2');\r\n        return (buf.toString('hex') === '61006200');\r\n    }\r\n    catch (_) {\r\n        return false;\r\n    }\r\n}());\r\n/* Node.js 6.4.0 and up has full support */\r\nvar hasFullSupport$1 = (function () {\r\n    try {\r\n        if (!Buffer.isEncoding('latin1')) {\r\n            return false;\r\n        }\r\n        var buf = Buffer.alloc ? Buffer.alloc(4) : new Buffer(4);\r\n        buf.fill('ab', 'ucs2');\r\n        return (buf.toString('hex') === '61006200');\r\n    }\r\n    catch (_) {\r\n        return false;\r\n    }\r\n}());\r\nfunction isSingleByte(val) {\r\n    return (val.length === 1 && val.charCodeAt(0) < 256);\r\n}\r\nfunction fillWithNumber(buffer, val, start, end) {\r\n    if (start < 0 || end > buffer.length) {\r\n        throw new RangeError('Out of range index');\r\n    }\r\n    start = start >>> 0;\r\n    end = end === undefined ? buffer.length : end >>> 0;\r\n    if (end > start) {\r\n        buffer.fill(val, start, end);\r\n    }\r\n    return buffer;\r\n}\r\nfunction fillWithBuffer(buffer, val, start, end) {\r\n    if (start < 0 || end > buffer.length) {\r\n        throw new RangeError('Out of range index');\r\n    }\r\n    if (end <= start) {\r\n        return buffer;\r\n    }\r\n    start = start >>> 0;\r\n    end = end === undefined ? buffer.length : end >>> 0;\r\n    var pos = start;\r\n    var len = val.length;\r\n    while (pos <= (end - len)) {\r\n        val.copy(buffer, pos);\r\n        pos += len;\r\n    }\r\n    if (pos !== end) {\r\n        val.copy(buffer, pos, 0, end - pos);\r\n    }\r\n    return buffer;\r\n}\r\nfunction fill(buffer, val, start, end, encoding) {\r\n    if (hasFullSupport$1) {\r\n        return buffer.fill(val, start, end, encoding);\r\n    }\r\n    if (typeof val === 'number') {\r\n        return fillWithNumber(buffer, val, start, end);\r\n    }\r\n    if (typeof val === 'string') {\r\n        if (typeof start === 'string') {\r\n            encoding = start;\r\n            start = 0;\r\n            end = buffer.length;\r\n        }\r\n        else if (typeof end === 'string') {\r\n            encoding = end;\r\n            end = buffer.length;\r\n        }\r\n        if (encoding !== undefined && typeof encoding !== 'string') {\r\n            throw new TypeError('encoding must be a string');\r\n        }\r\n        if (encoding === 'latin1') {\r\n            encoding = 'binary';\r\n        }\r\n        if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\r\n            throw new TypeError('Unknown encoding: ' + encoding);\r\n        }\r\n        if (val === '') {\r\n            return fillWithNumber(buffer, 0, start, end);\r\n        }\r\n        if (isSingleByte(val)) {\r\n            return fillWithNumber(buffer, val.charCodeAt(0), start, end);\r\n        }\r\n        val = new Buffer(val, encoding);\r\n    }\r\n    if (Buffer.isBuffer(val)) {\r\n        return fillWithBuffer(buffer, val, start, end);\r\n    }\r\n    // Other values (e.g. undefined, boolean, object) results in zero-fill\r\n    return fillWithNumber(buffer, 0, start, end);\r\n}\r\nvar C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_bufferFill = fill;\r\nfunction allocUnsafe$2(size) {\r\n    if (typeof size !== 'number') {\r\n        throw new TypeError('\"size\" argument must be a number');\r\n    }\r\n    if (size < 0) {\r\n        throw new RangeError('\"size\" argument must not be negative');\r\n    }\r\n    if (Buffer.allocUnsafe) {\r\n        return Buffer.allocUnsafe(size);\r\n    }\r\n    else {\r\n        return new Buffer(size);\r\n    }\r\n}\r\nvar C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_bufferAllocUnsafe = allocUnsafe$2;\r\nvar isModern = (typeof Buffer.alloc === 'function' &&\r\n    typeof Buffer.allocUnsafe === 'function' &&\r\n    typeof Buffer.from === 'function');\r\nvar C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_bufferAlloc = function alloc(size, fill, encoding) {\r\n    if (typeof size !== 'number') {\r\n        throw new TypeError('\"size\" argument must be a number');\r\n    }\r\n    if (size < 0) {\r\n        throw new RangeError('\"size\" argument must not be negative');\r\n    }\r\n    if (Buffer.alloc) {\r\n        return Buffer.alloc(size, fill, encoding);\r\n    }\r\n    var buffer = C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_bufferAllocUnsafe(size);\r\n    if (size === 0) {\r\n        return buffer;\r\n    }\r\n    if (fill === undefined) {\r\n        return C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_bufferFill(buffer, 0);\r\n    }\r\n    if (typeof encoding !== 'string') {\r\n        encoding = undefined;\r\n    }\r\n    return C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_bufferFill(buffer, fill, encoding);\r\n};\r\nvar toString$1 = Object.prototype.toString;\r\nvar isModern$1 = (typeof Buffer.alloc === 'function' &&\r\n    typeof Buffer.allocUnsafe === 'function' &&\r\n    typeof Buffer.from === 'function');\r\nfunction isArrayBuffer(input) {\r\n    return toString$1.call(input).slice(8, -1) === 'ArrayBuffer';\r\n}\r\nfunction fromArrayBuffer$2(obj, byteOffset, length) {\r\n    byteOffset >>>= 0;\r\n    var maxLength = obj.byteLength - byteOffset;\r\n    if (maxLength < 0) {\r\n        throw new RangeError(\"'offset' is out of bounds\");\r\n    }\r\n    if (length === undefined) {\r\n        length = maxLength;\r\n    }\r\n    else {\r\n        length >>>= 0;\r\n        if (length > maxLength) {\r\n            throw new RangeError(\"'length' is out of bounds\");\r\n        }\r\n    }\r\n    return isModern$1\r\n        ? Buffer.from(obj.slice(byteOffset, byteOffset + length))\r\n        : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)));\r\n}\r\nfunction fromString$2(string, encoding) {\r\n    if (typeof encoding !== 'string' || encoding === '') {\r\n        encoding = 'utf8';\r\n    }\r\n    if (!Buffer.isEncoding(encoding)) {\r\n        throw new TypeError('\"encoding\" must be a valid string encoding');\r\n    }\r\n    return isModern$1\r\n        ? Buffer.from(string, encoding)\r\n        : new Buffer(string, encoding);\r\n}\r\nfunction bufferFrom(value, encodingOrOffset, length) {\r\n    if (typeof value === 'number') {\r\n        throw new TypeError('\"value\" argument must not be a number');\r\n    }\r\n    if (isArrayBuffer(value)) {\r\n        return fromArrayBuffer$2(value, encodingOrOffset, length);\r\n    }\r\n    if (typeof value === 'string') {\r\n        return fromString$2(value, encodingOrOffset);\r\n    }\r\n    return isModern$1\r\n        ? Buffer.from(value)\r\n        : new Buffer(value);\r\n}\r\nvar C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_bufferFrom = bufferFrom;\r\nvar alloc$1 = C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_bufferAlloc;\r\nvar from_1$1 = C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_bufferFrom;\r\nvar buffer = {\r\n    alloc: alloc$1,\r\n    from: from_1$1\r\n};\r\nvar EXP_TABLE$1 = buffer.alloc(512);\r\nvar LOG_TABLE$1 = buffer.alloc(256);\r\n(function initTables() {\r\n    var x = 1;\r\n    for (var i = 0; i < 255; i++) {\r\n        EXP_TABLE$1[i] = x;\r\n        LOG_TABLE$1[x] = i;\r\n        x <<= 1; // multiply by 2\r\n        // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\r\n        // This means that when a number is 256 or larger, it should be XORed with 0x11D.\r\n        if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\r\n            x ^= 0x11D;\r\n        }\r\n    }\r\n    // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\r\n    // stay inside the bounds (because we will mainly use this table for the multiplication of\r\n    // two GF numbers, no more).\r\n    // @see {@link mul}\r\n    for (i = 255; i < 512; i++) {\r\n        EXP_TABLE$1[i] = EXP_TABLE$1[i - 255];\r\n    }\r\n}());\r\n/**\r\n * Returns log value of n inside Galois Field\r\n *\r\n * @param  {Number} n\r\n * @return {Number}\r\n */\r\nvar log = function log(n) {\r\n    if (n < 1)\r\n        throw new Error('log(' + n + ')');\r\n    return LOG_TABLE$1[n];\r\n};\r\n/**\r\n * Returns anti-log value of n inside Galois Field\r\n *\r\n * @param  {Number} n\r\n * @return {Number}\r\n */\r\nvar exp = function exp(n) {\r\n    return EXP_TABLE$1[n];\r\n};\r\n/**\r\n * Multiplies two number inside Galois Field\r\n *\r\n * @param  {Number} x\r\n * @param  {Number} y\r\n * @return {Number}\r\n */\r\nvar mul = function mul(x, y) {\r\n    if (x === 0 || y === 0)\r\n        return 0;\r\n    // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\r\n    // @see {@link initTables}\r\n    return EXP_TABLE$1[LOG_TABLE$1[x] + LOG_TABLE$1[y]];\r\n};\r\nvar galoisField = {\r\n    log: log,\r\n    exp: exp,\r\n    mul: mul\r\n};\r\nvar polynomial = createCommonjsModule(function (module, exports) {\r\n    /**\r\n     * Multiplies two polynomials inside Galois Field\r\n     *\r\n     * @param  {Buffer} p1 Polynomial\r\n     * @param  {Buffer} p2 Polynomial\r\n     * @return {Buffer}    Product of p1 and p2\r\n     */\r\n    exports.mul = function mul(p1, p2) {\r\n        var coeff = typedarrayBuffer.alloc(p1.length + p2.length - 1);\r\n        for (var i = 0; i < p1.length; i++) {\r\n            for (var j = 0; j < p2.length; j++) {\r\n                coeff[i + j] ^= galoisField.mul(p1[i], p2[j]);\r\n            }\r\n        }\r\n        return coeff;\r\n    };\r\n    /**\r\n     * Calculate the remainder of polynomials division\r\n     *\r\n     * @param  {Buffer} divident Polynomial\r\n     * @param  {Buffer} divisor  Polynomial\r\n     * @return {Buffer}          Remainder\r\n     */\r\n    exports.mod = function mod(divident, divisor) {\r\n        var result = typedarrayBuffer.from(divident);\r\n        while ((result.length - divisor.length) >= 0) {\r\n            var coeff = result[0];\r\n            for (var i = 0; i < divisor.length; i++) {\r\n                result[i] ^= galoisField.mul(divisor[i], coeff);\r\n            }\r\n            // remove all zeros from buffer head\r\n            var offset = 0;\r\n            while (offset < result.length && result[offset] === 0)\r\n                offset++;\r\n            result = result.slice(offset);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Generate an irreducible generator polynomial of specified degree\r\n     * (used by Reed-Solomon encoder)\r\n     *\r\n     * @param  {Number} degree Degree of the generator polynomial\r\n     * @return {Buffer}        Buffer containing polynomial coefficients\r\n     */\r\n    exports.generateECPolynomial = function generateECPolynomial(degree) {\r\n        var poly = typedarrayBuffer.from([1]);\r\n        for (var i = 0; i < degree; i++) {\r\n            poly = exports.mul(poly, [1, galoisField.exp(i)]);\r\n        }\r\n        return poly;\r\n    };\r\n});\r\nvar polynomial$1 = createCommonjsModule(function (module, exports) {\r\n    /**\r\n     * Multiplies two polynomials inside Galois Field\r\n     *\r\n     * @param  {Buffer} p1 Polynomial\r\n     * @param  {Buffer} p2 Polynomial\r\n     * @return {Buffer}    Product of p1 and p2\r\n     */\r\n    exports.mul = function mul(p1, p2) {\r\n        var coeff = buffer.alloc(p1.length + p2.length - 1);\r\n        for (var i = 0; i < p1.length; i++) {\r\n            for (var j = 0; j < p2.length; j++) {\r\n                coeff[i + j] ^= galoisField.mul(p1[i], p2[j]);\r\n            }\r\n        }\r\n        return coeff;\r\n    };\r\n    /**\r\n     * Calculate the remainder of polynomials division\r\n     *\r\n     * @param  {Buffer} divident Polynomial\r\n     * @param  {Buffer} divisor  Polynomial\r\n     * @return {Buffer}          Remainder\r\n     */\r\n    exports.mod = function mod(divident, divisor) {\r\n        var result = buffer.from(divident);\r\n        while ((result.length - divisor.length) >= 0) {\r\n            var coeff = result[0];\r\n            for (var i = 0; i < divisor.length; i++) {\r\n                result[i] ^= galoisField.mul(divisor[i], coeff);\r\n            }\r\n            // remove all zeros from buffer head\r\n            var offset = 0;\r\n            while (offset < result.length && result[offset] === 0)\r\n                offset++;\r\n            result = result.slice(offset);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Generate an irreducible generator polynomial of specified degree\r\n     * (used by Reed-Solomon encoder)\r\n     *\r\n     * @param  {Number} degree Degree of the generator polynomial\r\n     * @return {Buffer}        Buffer containing polynomial coefficients\r\n     */\r\n    exports.generateECPolynomial = function generateECPolynomial(degree) {\r\n        var poly = buffer.from([1]);\r\n        for (var i = 0; i < degree; i++) {\r\n            poly = exports.mul(poly, [1, galoisField.exp(i)]);\r\n        }\r\n        return poly;\r\n    };\r\n});\r\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\r\n    '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\r\n    '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\r\n    '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+';\r\nkanji = kanji.replace(/u/g, '\\\\u');\r\n/**\r\n * Check if QR Code version is valid\r\n *\r\n * @param  {Number}  version QR Code version\r\n * @return {Boolean}         true if valid version, false otherwise\r\n */\r\nvar isValid = function isValid(version) {\r\n    return !isNaN(version) && version >= 1 && version <= 40;\r\n};\r\nvar versionCheck = {\r\n    isValid: isValid\r\n};\r\nvar numeric = '[0-9]+';\r\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+';\r\nvar kanji$1 = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\r\n    '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\r\n    '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\r\n    '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+';\r\nkanji$1 = kanji$1.replace(/u/g, '\\\\u');\r\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji$1 + ')(?:.|[\\r\\n]))+';\r\nvar KANJI = new RegExp(kanji$1, 'g');\r\nvar BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g');\r\nvar BYTE = new RegExp(byte, 'g');\r\nvar NUMERIC = new RegExp(numeric, 'g');\r\nvar ALPHANUMERIC = new RegExp(alphanumeric, 'g');\r\nvar TEST_KANJI = new RegExp('^' + kanji$1 + '$');\r\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$');\r\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$');\r\nvar testKanji = function testKanji(str) {\r\n    return TEST_KANJI.test(str);\r\n};\r\nvar testNumeric = function testNumeric(str) {\r\n    return TEST_NUMERIC.test(str);\r\n};\r\nvar testAlphanumeric = function testAlphanumeric(str) {\r\n    return TEST_ALPHANUMERIC.test(str);\r\n};\r\nvar regex = {\r\n    KANJI: KANJI,\r\n    BYTE_KANJI: BYTE_KANJI,\r\n    BYTE: BYTE,\r\n    NUMERIC: NUMERIC,\r\n    ALPHANUMERIC: ALPHANUMERIC,\r\n    testKanji: testKanji,\r\n    testNumeric: testNumeric,\r\n    testAlphanumeric: testAlphanumeric\r\n};\r\nvar mode = createCommonjsModule(function (module, exports) {\r\n    /**\r\n     * Numeric mode encodes data from the decimal digit set (0 - 9)\r\n     * (byte values 30HEX to 39HEX).\r\n     * Normally, 3 data characters are represented by 10 bits.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    exports.NUMERIC = {\r\n        id: 'Numeric',\r\n        bit: 1 << 0,\r\n        ccBits: [10, 12, 14]\r\n    };\r\n    /**\r\n     * Alphanumeric mode encodes data from a set of 45 characters,\r\n     * i.e. 10 numeric digits (0 - 9),\r\n     *      26 alphabetic characters (A - Z),\r\n     *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\r\n     * Normally, two input characters are represented by 11 bits.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    exports.ALPHANUMERIC = {\r\n        id: 'Alphanumeric',\r\n        bit: 1 << 1,\r\n        ccBits: [9, 11, 13]\r\n    };\r\n    /**\r\n     * In byte mode, data is encoded at 8 bits per character.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    exports.BYTE = {\r\n        id: 'Byte',\r\n        bit: 1 << 2,\r\n        ccBits: [8, 16, 16]\r\n    };\r\n    /**\r\n     * The Kanji mode efficiently encodes Kanji characters in accordance with\r\n     * the Shift JIS system based on JIS X 0208.\r\n     * The Shift JIS values are shifted from the JIS X 0208 values.\r\n     * JIS X 0208 gives details of the shift coded representation.\r\n     * Each two-byte character value is compacted to a 13-bit binary codeword.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    exports.KANJI = {\r\n        id: 'Kanji',\r\n        bit: 1 << 3,\r\n        ccBits: [8, 10, 12]\r\n    };\r\n    /**\r\n     * Mixed mode will contain a sequences of data in a combination of any of\r\n     * the modes described above\r\n     *\r\n     * @type {Object}\r\n     */\r\n    exports.MIXED = {\r\n        bit: -1\r\n    };\r\n    /**\r\n     * Returns the number of bits needed to store the data length\r\n     * according to QR Code specifications.\r\n     *\r\n     * @param  {Mode}   mode    Data mode\r\n     * @param  {Number} version QR Code version\r\n     * @return {Number}         Number of bits\r\n     */\r\n    exports.getCharCountIndicator = function getCharCountIndicator(mode, version) {\r\n        if (!mode.ccBits)\r\n            throw new Error('Invalid mode: ' + mode);\r\n        if (!versionCheck.isValid(version)) {\r\n            throw new Error('Invalid version: ' + version);\r\n        }\r\n        if (version >= 1 && version < 10)\r\n            return mode.ccBits[0];\r\n        else if (version < 27)\r\n            return mode.ccBits[1];\r\n        return mode.ccBits[2];\r\n    };\r\n    /**\r\n     * Returns the most efficient mode to store the specified data\r\n     *\r\n     * @param  {String} dataStr Input data string\r\n     * @return {Mode}           Best mode\r\n     */\r\n    exports.getBestModeForData = function getBestModeForData(dataStr) {\r\n        if (regex.testNumeric(dataStr))\r\n            return exports.NUMERIC;\r\n        else if (regex.testAlphanumeric(dataStr))\r\n            return exports.ALPHANUMERIC;\r\n        else if (regex.testKanji(dataStr))\r\n            return exports.KANJI;\r\n        else\r\n            return exports.BYTE;\r\n    };\r\n    /**\r\n     * Return mode name as string\r\n     *\r\n     * @param {Mode} mode Mode object\r\n     * @returns {String}  Mode name\r\n     */\r\n    exports.toString = function toString(mode) {\r\n        if (mode && mode.id)\r\n            return mode.id;\r\n        throw new Error('Invalid mode');\r\n    };\r\n    /**\r\n     * Check if input param is a valid mode object\r\n     *\r\n     * @param   {Mode}    mode Mode object\r\n     * @returns {Boolean} True if valid mode, false otherwise\r\n     */\r\n    exports.isValid = function isValid(mode) {\r\n        return mode && mode.bit && mode.ccBits;\r\n    };\r\n    /**\r\n     * Get mode object from its name\r\n     *\r\n     * @param   {String} string Mode name\r\n     * @returns {Mode}          Mode object\r\n     */\r\n    function fromString(string) {\r\n        if (typeof string !== 'string') {\r\n            throw new Error('Param is not a string');\r\n        }\r\n        var lcStr = string.toLowerCase();\r\n        switch (lcStr) {\r\n            case 'numeric':\r\n                return exports.NUMERIC;\r\n            case 'alphanumeric':\r\n                return exports.ALPHANUMERIC;\r\n            case 'kanji':\r\n                return exports.KANJI;\r\n            case 'byte':\r\n                return exports.BYTE;\r\n            default:\r\n                throw new Error('Unknown mode: ' + string);\r\n        }\r\n    }\r\n    /**\r\n     * Returns mode from a value.\r\n     * If value is not a valid mode, returns defaultValue\r\n     *\r\n     * @param  {Mode|String} value        Encoding mode\r\n     * @param  {Mode}        defaultValue Fallback value\r\n     * @return {Mode}                     Encoding mode\r\n     */\r\n    exports.from = function from(value, defaultValue) {\r\n        if (exports.isValid(value)) {\r\n            return value;\r\n        }\r\n        try {\r\n            return fromString(value);\r\n        }\r\n        catch (e) {\r\n            return defaultValue;\r\n        }\r\n    };\r\n});\r\nvar EC_BLOCKS_TABLE = [\r\n    // L  M  Q  H\r\n    1, 1, 1, 1,\r\n    1, 1, 1, 1,\r\n    1, 1, 2, 2,\r\n    1, 2, 2, 4,\r\n    1, 2, 4, 4,\r\n    2, 4, 4, 4,\r\n    2, 4, 6, 5,\r\n    2, 4, 6, 6,\r\n    2, 5, 8, 8,\r\n    4, 5, 8, 8,\r\n    4, 5, 8, 11,\r\n    4, 8, 10, 11,\r\n    4, 9, 12, 16,\r\n    4, 9, 16, 16,\r\n    6, 10, 12, 18,\r\n    6, 10, 17, 16,\r\n    6, 11, 16, 19,\r\n    6, 13, 18, 21,\r\n    7, 14, 21, 25,\r\n    8, 16, 20, 25,\r\n    8, 17, 23, 25,\r\n    9, 17, 23, 34,\r\n    9, 18, 25, 30,\r\n    10, 20, 27, 32,\r\n    12, 21, 29, 35,\r\n    12, 23, 34, 37,\r\n    12, 25, 34, 40,\r\n    13, 26, 35, 42,\r\n    14, 28, 38, 45,\r\n    15, 29, 40, 48,\r\n    16, 31, 43, 51,\r\n    17, 33, 45, 54,\r\n    18, 35, 48, 57,\r\n    19, 37, 51, 60,\r\n    19, 38, 53, 63,\r\n    20, 40, 56, 66,\r\n    21, 43, 59, 70,\r\n    22, 45, 62, 74,\r\n    24, 47, 65, 77,\r\n    25, 49, 68, 81\r\n];\r\nvar EC_CODEWORDS_TABLE = [\r\n    // L  M  Q  H\r\n    7, 10, 13, 17,\r\n    10, 16, 22, 28,\r\n    15, 26, 36, 44,\r\n    20, 36, 52, 64,\r\n    26, 48, 72, 88,\r\n    36, 64, 96, 112,\r\n    40, 72, 108, 130,\r\n    48, 88, 132, 156,\r\n    60, 110, 160, 192,\r\n    72, 130, 192, 224,\r\n    80, 150, 224, 264,\r\n    96, 176, 260, 308,\r\n    104, 198, 288, 352,\r\n    120, 216, 320, 384,\r\n    132, 240, 360, 432,\r\n    144, 280, 408, 480,\r\n    168, 308, 448, 532,\r\n    180, 338, 504, 588,\r\n    196, 364, 546, 650,\r\n    224, 416, 600, 700,\r\n    224, 442, 644, 750,\r\n    252, 476, 690, 816,\r\n    270, 504, 750, 900,\r\n    300, 560, 810, 960,\r\n    312, 588, 870, 1050,\r\n    336, 644, 952, 1110,\r\n    360, 700, 1020, 1200,\r\n    390, 728, 1050, 1260,\r\n    420, 784, 1140, 1350,\r\n    450, 812, 1200, 1440,\r\n    480, 868, 1290, 1530,\r\n    510, 924, 1350, 1620,\r\n    540, 980, 1440, 1710,\r\n    570, 1036, 1530, 1800,\r\n    570, 1064, 1590, 1890,\r\n    600, 1120, 1680, 1980,\r\n    630, 1204, 1770, 2100,\r\n    660, 1260, 1860, 2220,\r\n    720, 1316, 1950, 2310,\r\n    750, 1372, 2040, 2430\r\n];\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nvar getBlocksCount = function getBlocksCount(version, errorCorrectionLevel) {\r\n    switch (errorCorrectionLevel) {\r\n        case errorCorrectionLevel$1.L:\r\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 0];\r\n        case errorCorrectionLevel$1.M:\r\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 1];\r\n        case errorCorrectionLevel$1.Q:\r\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 2];\r\n        case errorCorrectionLevel$1.H:\r\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 3];\r\n        default:\r\n            return undefined;\r\n    }\r\n};\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nvar getTotalCodewordsCount = function getTotalCodewordsCount(version, errorCorrectionLevel) {\r\n    switch (errorCorrectionLevel) {\r\n        case errorCorrectionLevel$1.L:\r\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];\r\n        case errorCorrectionLevel$1.M:\r\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];\r\n        case errorCorrectionLevel$1.Q:\r\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];\r\n        case errorCorrectionLevel$1.H:\r\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];\r\n        default:\r\n            return undefined;\r\n    }\r\n};\r\nvar errorCorrectionCode = {\r\n    getBlocksCount: getBlocksCount,\r\n    getTotalCodewordsCount: getTotalCodewordsCount\r\n};\r\nvar mode$1 = createCommonjsModule(function (module, exports) {\r\n    /**\r\n     * Numeric mode encodes data from the decimal digit set (0 - 9)\r\n     * (byte values 30HEX to 39HEX).\r\n     * Normally, 3 data characters are represented by 10 bits.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    exports.NUMERIC = {\r\n        id: 'Numeric',\r\n        bit: 1 << 0,\r\n        ccBits: [10, 12, 14]\r\n    };\r\n    /**\r\n     * Alphanumeric mode encodes data from a set of 45 characters,\r\n     * i.e. 10 numeric digits (0 - 9),\r\n     *      26 alphabetic characters (A - Z),\r\n     *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\r\n     * Normally, two input characters are represented by 11 bits.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    exports.ALPHANUMERIC = {\r\n        id: 'Alphanumeric',\r\n        bit: 1 << 1,\r\n        ccBits: [9, 11, 13]\r\n    };\r\n    /**\r\n     * In byte mode, data is encoded at 8 bits per character.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    exports.BYTE = {\r\n        id: 'Byte',\r\n        bit: 1 << 2,\r\n        ccBits: [8, 16, 16]\r\n    };\r\n    /**\r\n     * The Kanji mode efficiently encodes Kanji characters in accordance with\r\n     * the Shift JIS system based on JIS X 0208.\r\n     * The Shift JIS values are shifted from the JIS X 0208 values.\r\n     * JIS X 0208 gives details of the shift coded representation.\r\n     * Each two-byte character value is compacted to a 13-bit binary codeword.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    exports.KANJI = {\r\n        id: 'Kanji',\r\n        bit: 1 << 3,\r\n        ccBits: [8, 10, 12]\r\n    };\r\n    /**\r\n     * Mixed mode will contain a sequences of data in a combination of any of\r\n     * the modes described above\r\n     *\r\n     * @type {Object}\r\n     */\r\n    exports.MIXED = {\r\n        bit: -1\r\n    };\r\n    /**\r\n     * Returns the number of bits needed to store the data length\r\n     * according to QR Code specifications.\r\n     *\r\n     * @param  {Mode}   mode    Data mode\r\n     * @param  {Number} version QR Code version\r\n     * @return {Number}         Number of bits\r\n     */\r\n    exports.getCharCountIndicator = function getCharCountIndicator(mode, version) {\r\n        if (!mode.ccBits)\r\n            throw new Error('Invalid mode: ' + mode);\r\n        if (!versionCheck.isValid(version)) {\r\n            throw new Error('Invalid version: ' + version);\r\n        }\r\n        if (version >= 1 && version < 10)\r\n            return mode.ccBits[0];\r\n        else if (version < 27)\r\n            return mode.ccBits[1];\r\n        return mode.ccBits[2];\r\n    };\r\n    /**\r\n     * Returns the most efficient mode to store the specified data\r\n     *\r\n     * @param  {String} dataStr Input data string\r\n     * @return {Mode}           Best mode\r\n     */\r\n    exports.getBestModeForData = function getBestModeForData(dataStr) {\r\n        if (regex.testNumeric(dataStr))\r\n            return exports.NUMERIC;\r\n        else if (regex.testAlphanumeric(dataStr))\r\n            return exports.ALPHANUMERIC;\r\n        else if (regex.testKanji(dataStr))\r\n            return exports.KANJI;\r\n        else\r\n            return exports.BYTE;\r\n    };\r\n    /**\r\n     * Return mode name as string\r\n     *\r\n     * @param {Mode} mode Mode object\r\n     * @returns {String}  Mode name\r\n     */\r\n    exports.toString = function toString(mode) {\r\n        if (mode && mode.id)\r\n            return mode.id;\r\n        throw new Error('Invalid mode');\r\n    };\r\n    /**\r\n     * Check if input param is a valid mode object\r\n     *\r\n     * @param   {Mode}    mode Mode object\r\n     * @returns {Boolean} True if valid mode, false otherwise\r\n     */\r\n    exports.isValid = function isValid(mode) {\r\n        return mode && mode.bit && mode.ccBits;\r\n    };\r\n    /**\r\n     * Get mode object from its name\r\n     *\r\n     * @param   {String} string Mode name\r\n     * @returns {Mode}          Mode object\r\n     */\r\n    function fromString(string) {\r\n        if (typeof string !== 'string') {\r\n            throw new Error('Param is not a string');\r\n        }\r\n        var lcStr = string.toLowerCase();\r\n        switch (lcStr) {\r\n            case 'numeric':\r\n                return exports.NUMERIC;\r\n            case 'alphanumeric':\r\n                return exports.ALPHANUMERIC;\r\n            case 'kanji':\r\n                return exports.KANJI;\r\n            case 'byte':\r\n                return exports.BYTE;\r\n            default:\r\n                throw new Error('Unknown mode: ' + string);\r\n        }\r\n    }\r\n    /**\r\n     * Returns mode from a value.\r\n     * If value is not a valid mode, returns defaultValue\r\n     *\r\n     * @param  {Mode|String} value        Encoding mode\r\n     * @param  {Mode}        defaultValue Fallback value\r\n     * @return {Mode}                     Encoding mode\r\n     */\r\n    exports.from = function from(value, defaultValue) {\r\n        if (exports.isValid(value)) {\r\n            return value;\r\n        }\r\n        try {\r\n            return fromString(value);\r\n        }\r\n        catch (e) {\r\n            return defaultValue;\r\n        }\r\n    };\r\n});\r\nvar version = createCommonjsModule(function (module, exports) {\r\n    // Generator polynomial used to encode version information\r\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\r\n    var G18_BCH = utils.getBCHDigit(G18);\r\n    function getBestVersionForDataLength(mode, length, errorCorrectionLevel) {\r\n        for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\r\n            if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\r\n                return currentVersion;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    function getReservedBitsCount(mode, version) {\r\n        // Character count indicator + mode indicator bits\r\n        return mode$1.getCharCountIndicator(mode, version) + 4;\r\n    }\r\n    function getTotalBitsFromDataArray(segments, version) {\r\n        var totalBits = 0;\r\n        segments.forEach(function (data) {\r\n            var reservedBits = getReservedBitsCount(data.mode, version);\r\n            totalBits += reservedBits + data.getBitsLength();\r\n        });\r\n        return totalBits;\r\n    }\r\n    function getBestVersionForMixedData(segments, errorCorrectionLevel) {\r\n        for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\r\n            var length = getTotalBitsFromDataArray(segments, currentVersion);\r\n            if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode$1.MIXED)) {\r\n                return currentVersion;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Returns version number from a value.\r\n     * If value is not a valid version, returns defaultValue\r\n     *\r\n     * @param  {Number|String} value        QR Code version\r\n     * @param  {Number}        defaultValue Fallback value\r\n     * @return {Number}                     QR Code version number\r\n     */\r\n    exports.from = function from(value, defaultValue) {\r\n        if (versionCheck.isValid(value)) {\r\n            return parseInt(value, 10);\r\n        }\r\n        return defaultValue;\r\n    };\r\n    /**\r\n     * Returns how much data can be stored with the specified QR code version\r\n     * and error correction level\r\n     *\r\n     * @param  {Number} version              QR Code version (1-40)\r\n     * @param  {Number} errorCorrectionLevel Error correction level\r\n     * @param  {Mode}   mode                 Data mode\r\n     * @return {Number}                      Quantity of storable data\r\n     */\r\n    exports.getCapacity = function getCapacity(version, errorCorrectionLevel, mode) {\r\n        if (!versionCheck.isValid(version)) {\r\n            throw new Error('Invalid QR Code version');\r\n        }\r\n        // Use Byte mode as default\r\n        if (typeof mode === 'undefined')\r\n            mode = mode$1.BYTE;\r\n        // Total codewords for this QR code version (Data + Error correction)\r\n        var totalCodewords = utils.getSymbolTotalCodewords(version);\r\n        // Total number of error correction codewords\r\n        var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\r\n        // Total number of data codewords\r\n        var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\r\n        if (mode === mode$1.MIXED)\r\n            return dataTotalCodewordsBits;\r\n        var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version);\r\n        // Return max number of storable codewords\r\n        switch (mode) {\r\n            case mode$1.NUMERIC:\r\n                return Math.floor((usableBits / 10) * 3);\r\n            case mode$1.ALPHANUMERIC:\r\n                return Math.floor((usableBits / 11) * 2);\r\n            case mode$1.KANJI:\r\n                return Math.floor(usableBits / 13);\r\n            case mode$1.BYTE:\r\n            default:\r\n                return Math.floor(usableBits / 8);\r\n        }\r\n    };\r\n    /**\r\n     * Returns the minimum version needed to contain the amount of data\r\n     *\r\n     * @param  {Segment} data                    Segment of data\r\n     * @param  {Number} [errorCorrectionLevel=H] Error correction level\r\n     * @param  {Mode} mode                       Data mode\r\n     * @return {Number}                          QR Code version\r\n     */\r\n    exports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel) {\r\n        var seg;\r\n        var ecl = errorCorrectionLevel$1.from(errorCorrectionLevel, errorCorrectionLevel$1.M);\r\n        if (C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_qrcode_node_modules_isarray(data)) {\r\n            if (data.length > 1) {\r\n                return getBestVersionForMixedData(data, ecl);\r\n            }\r\n            if (data.length === 0) {\r\n                return 1;\r\n            }\r\n            seg = data[0];\r\n        }\r\n        else {\r\n            seg = data;\r\n        }\r\n        return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);\r\n    };\r\n    /**\r\n     * Returns version information with relative error correction bits\r\n     *\r\n     * The version information is included in QR Code symbols of version 7 or larger.\r\n     * It consists of an 18-bit sequence containing 6 data bits,\r\n     * with 12 error correction bits calculated using the (18, 6) Golay code.\r\n     *\r\n     * @param  {Number} version QR Code version\r\n     * @return {Number}         Encoded version info bits\r\n     */\r\n    exports.getEncodedBits = function getEncodedBits(version) {\r\n        if (!versionCheck.isValid(version) || version < 7) {\r\n            throw new Error('Invalid QR Code version');\r\n        }\r\n        var d = version << 12;\r\n        while (utils.getBCHDigit(d) - G18_BCH >= 0) {\r\n            d ^= (G18 << (utils.getBCHDigit(d) - G18_BCH));\r\n        }\r\n        return (version << 12) | d;\r\n    };\r\n});\r\nvar G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\r\nvar G15_BCH = utils.getBCHDigit(G15);\r\nfunction NumericData(data) {\r\n    this.mode = mode$1.NUMERIC;\r\n    this.data = data.toString();\r\n}\r\nNumericData.getBitsLength = function getBitsLength(length) {\r\n    return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0);\r\n};\r\nNumericData.prototype.getLength = function getLength() {\r\n    return this.data.length;\r\n};\r\nNumericData.prototype.getBitsLength = function getBitsLength() {\r\n    return NumericData.getBitsLength(this.data.length);\r\n};\r\nNumericData.prototype.write = function write(bitBuffer) {\r\n    var i, group, value;\r\n    // The input data string is divided into groups of three digits,\r\n    // and each group is converted to its 10-bit binary equivalent.\r\n    for (i = 0; i + 3 <= this.data.length; i += 3) {\r\n        group = this.data.substr(i, 3);\r\n        value = parseInt(group, 10);\r\n        bitBuffer.put(value, 10);\r\n    }\r\n    // If the number of input digits is not an exact multiple of three,\r\n    // the final one or two digits are converted to 4 or 7 bits respectively.\r\n    var remainingNum = this.data.length - i;\r\n    if (remainingNum > 0) {\r\n        group = this.data.substr(i);\r\n        value = parseInt(group, 10);\r\n        bitBuffer.put(value, remainingNum * 3 + 1);\r\n    }\r\n};\r\n/**\r\n * Array of characters available in alphanumeric mode\r\n *\r\n * As per QR Code specification, to each character\r\n * is assigned a value from 0 to 44 which in this case coincides\r\n * with the array index\r\n *\r\n * @type {Array}\r\n */\r\nvar ALPHA_NUM_CHARS = [\r\n    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\r\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\r\n    'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\r\n    ' ', '$', '%', '*', '+', '-', '.', '/', ':'\r\n];\r\nfunction AlphanumericData(data) {\r\n    this.mode = mode$1.ALPHANUMERIC;\r\n    this.data = data;\r\n}\r\nAlphanumericData.getBitsLength = function getBitsLength(length) {\r\n    return 11 * Math.floor(length / 2) + 6 * (length % 2);\r\n};\r\nAlphanumericData.prototype.getLength = function getLength() {\r\n    return this.data.length;\r\n};\r\nAlphanumericData.prototype.getBitsLength = function getBitsLength() {\r\n    return AlphanumericData.getBitsLength(this.data.length);\r\n};\r\nAlphanumericData.prototype.write = function write(bitBuffer) {\r\n    var i;\r\n    // Input data characters are divided into groups of two characters\r\n    // and encoded as 11-bit binary codes.\r\n    for (i = 0; i + 2 <= this.data.length; i += 2) {\r\n        // The character value of the first character is multiplied by 45\r\n        var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45;\r\n        // The character value of the second digit is added to the product\r\n        value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1]);\r\n        // The sum is then stored as 11-bit binary number\r\n        bitBuffer.put(value, 11);\r\n    }\r\n    // If the number of input data characters is not a multiple of two,\r\n    // the character value of the final character is encoded as a 6-bit binary number.\r\n    if (this.data.length % 2) {\r\n        bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);\r\n    }\r\n};\r\nfunction ByteData(data) {\r\n    this.mode = mode$1.BYTE;\r\n    this.data = typedarrayBuffer.from(data);\r\n}\r\nByteData.getBitsLength = function getBitsLength(length) {\r\n    return length * 8;\r\n};\r\nByteData.prototype.getLength = function getLength() {\r\n    return this.data.length;\r\n};\r\nByteData.prototype.getBitsLength = function getBitsLength() {\r\n    return ByteData.getBitsLength(this.data.length);\r\n};\r\nByteData.prototype.write = function (bitBuffer) {\r\n    for (var i = 0, l = this.data.length; i < l; i++) {\r\n        bitBuffer.put(this.data[i], 8);\r\n    }\r\n};\r\nfunction KanjiData(data) {\r\n    this.mode = mode$1.KANJI;\r\n    this.data = data;\r\n}\r\nKanjiData.getBitsLength = function getBitsLength(length) {\r\n    return length * 13;\r\n};\r\nKanjiData.prototype.getLength = function getLength() {\r\n    return this.data.length;\r\n};\r\nKanjiData.prototype.getBitsLength = function getBitsLength() {\r\n    return KanjiData.getBitsLength(this.data.length);\r\n};\r\nKanjiData.prototype.write = function (bitBuffer) {\r\n    var i;\r\n    // In the Shift JIS system, Kanji characters are represented by a two byte combination.\r\n    // These byte values are shifted from the JIS X 0208 values.\r\n    // JIS X 0208 gives details of the shift coded representation.\r\n    for (i = 0; i < this.data.length; i++) {\r\n        var value = utils.toSJIS(this.data[i]);\r\n        // For characters with Shift JIS values from 0x8140 to 0x9FFC:\r\n        if (value >= 0x8140 && value <= 0x9FFC) {\r\n            // Subtract 0x8140 from Shift JIS value\r\n            value -= 0x8140;\r\n            // For characters with Shift JIS values from 0xE040 to 0xEBBF\r\n        }\r\n        else if (value >= 0xE040 && value <= 0xEBBF) {\r\n            // Subtract 0xC140 from Shift JIS value\r\n            value -= 0xC140;\r\n        }\r\n        else {\r\n            throw new Error('Invalid SJIS character: ' + this.data[i] + '\\n' +\r\n                'Make sure your charset is UTF-8');\r\n        }\r\n        // Multiply most significant byte of result by 0xC0\r\n        // and add least significant byte to product\r\n        value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff);\r\n        // Convert result to a 13-bit binary string\r\n        bitBuffer.put(value, 13);\r\n    }\r\n};\r\nvar dijkstra_1 = createCommonjsModule(function (module) {\r\n    /******************************************************************************\r\n     * Created 2008-08-19.\r\n     *\r\n     * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\r\n     *\r\n     * Copyright (C) 2008\r\n     *   Wyatt Baldwin <self@wyattbaldwin.com>\r\n     *   All rights reserved\r\n     *\r\n     * Licensed under the MIT license.\r\n     *\r\n     *   http://www.opensource.org/licenses/mit-license.php\r\n     *\r\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n     * THE SOFTWARE.\r\n     *****************************************************************************/\r\n    var dijkstra = {\r\n        single_source_shortest_paths: function (graph, s, d) {\r\n            // Predecessor map for each node that has been encountered.\r\n            // node ID => predecessor node ID\r\n            var predecessors = {};\r\n            // Costs of shortest paths from s to all nodes encountered.\r\n            // node ID => cost\r\n            var costs = {};\r\n            costs[s] = 0;\r\n            // Costs of shortest paths from s to all nodes encountered; differs from\r\n            // `costs` in that it provides easy access to the node that currently has\r\n            // the known shortest path from s.\r\n            // XXX: Do we actually need both `costs` and `open`?\r\n            var open = dijkstra.PriorityQueue.make();\r\n            open.push(s, 0);\r\n            var closest, u, v, cost_of_s_to_u, adjacent_nodes, cost_of_e, cost_of_s_to_u_plus_cost_of_e, cost_of_s_to_v, first_visit;\r\n            while (!open.empty()) {\r\n                // In the nodes remaining in graph that have a known cost from s,\r\n                // find the node, u, that currently has the shortest path from s.\r\n                closest = open.pop();\r\n                u = closest.value;\r\n                cost_of_s_to_u = closest.cost;\r\n                // Get nodes adjacent to u...\r\n                adjacent_nodes = graph[u] || {};\r\n                // ...and explore the edges that connect u to those nodes, updating\r\n                // the cost of the shortest paths to any or all of those nodes as\r\n                // necessary. v is the node across the current edge from u.\r\n                for (v in adjacent_nodes) {\r\n                    if (adjacent_nodes.hasOwnProperty(v)) {\r\n                        // Get the cost of the edge running from u to v.\r\n                        cost_of_e = adjacent_nodes[v];\r\n                        // Cost of s to u plus the cost of u to v across e--this is *a*\r\n                        // cost from s to v that may or may not be less than the current\r\n                        // known cost to v.\r\n                        cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\r\n                        // If we haven't visited v yet OR if the current known cost from s to\r\n                        // v is greater than the new cost we just found (cost of s to u plus\r\n                        // cost of u to v across e), update v's cost in the cost list and\r\n                        // update v's predecessor in the predecessor list (it's now u).\r\n                        cost_of_s_to_v = costs[v];\r\n                        first_visit = (typeof costs[v] === 'undefined');\r\n                        if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\r\n                            costs[v] = cost_of_s_to_u_plus_cost_of_e;\r\n                            open.push(v, cost_of_s_to_u_plus_cost_of_e);\r\n                            predecessors[v] = u;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\r\n                var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\r\n                throw new Error(msg);\r\n            }\r\n            return predecessors;\r\n        },\r\n        extract_shortest_path_from_predecessor_list: function (predecessors, d) {\r\n            var nodes = [];\r\n            var u = d;\r\n            while (u) {\r\n                nodes.push(u);\r\n                u = predecessors[u];\r\n            }\r\n            nodes.reverse();\r\n            return nodes;\r\n        },\r\n        find_path: function (graph, s, d) {\r\n            var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\r\n            return dijkstra.extract_shortest_path_from_predecessor_list(predecessors, d);\r\n        },\r\n        /**\r\n         * A very naive priority queue implementation.\r\n         */\r\n        PriorityQueue: {\r\n            make: function (opts) {\r\n                var T = dijkstra.PriorityQueue, t = {}, key;\r\n                opts = opts || {};\r\n                for (key in T) {\r\n                    if (T.hasOwnProperty(key)) {\r\n                        t[key] = T[key];\r\n                    }\r\n                }\r\n                t.queue = [];\r\n                t.sorter = opts.sorter || T.default_sorter;\r\n                return t;\r\n            },\r\n            default_sorter: function (a, b) {\r\n                return a.cost - b.cost;\r\n            },\r\n            /**\r\n             * Add a new item to the queue and ensure the highest priority element\r\n             * is at the front of the queue.\r\n             */\r\n            push: function (value, cost) {\r\n                var item = { value: value, cost: cost };\r\n                this.queue.push(item);\r\n                this.queue.sort(this.sorter);\r\n            },\r\n            /**\r\n             * Return the highest priority element in the queue.\r\n             */\r\n            pop: function () {\r\n                return this.queue.shift();\r\n            },\r\n            empty: function () {\r\n                return this.queue.length === 0;\r\n            }\r\n        }\r\n    };\r\n    // node.js module exports\r\n    {\r\n        module.exports = dijkstra;\r\n    }\r\n});\r\nfunction NumericData$1(data) {\r\n    this.mode = mode$1.NUMERIC;\r\n    this.data = data.toString();\r\n}\r\nNumericData$1.getBitsLength = function getBitsLength(length) {\r\n    return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0);\r\n};\r\nNumericData$1.prototype.getLength = function getLength() {\r\n    return this.data.length;\r\n};\r\nNumericData$1.prototype.getBitsLength = function getBitsLength() {\r\n    return NumericData$1.getBitsLength(this.data.length);\r\n};\r\nNumericData$1.prototype.write = function write(bitBuffer) {\r\n    var i, group, value;\r\n    // The input data string is divided into groups of three digits,\r\n    // and each group is converted to its 10-bit binary equivalent.\r\n    for (i = 0; i + 3 <= this.data.length; i += 3) {\r\n        group = this.data.substr(i, 3);\r\n        value = parseInt(group, 10);\r\n        bitBuffer.put(value, 10);\r\n    }\r\n    // If the number of input digits is not an exact multiple of three,\r\n    // the final one or two digits are converted to 4 or 7 bits respectively.\r\n    var remainingNum = this.data.length - i;\r\n    if (remainingNum > 0) {\r\n        group = this.data.substr(i);\r\n        value = parseInt(group, 10);\r\n        bitBuffer.put(value, remainingNum * 3 + 1);\r\n    }\r\n};\r\nvar numericData = NumericData$1;\r\n/**\r\n * Array of characters available in alphanumeric mode\r\n *\r\n * As per QR Code specification, to each character\r\n * is assigned a value from 0 to 44 which in this case coincides\r\n * with the array index\r\n *\r\n * @type {Array}\r\n */\r\nvar ALPHA_NUM_CHARS$1 = [\r\n    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\r\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\r\n    'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\r\n    ' ', '$', '%', '*', '+', '-', '.', '/', ':'\r\n];\r\nfunction AlphanumericData$1(data) {\r\n    this.mode = mode$1.ALPHANUMERIC;\r\n    this.data = data;\r\n}\r\nAlphanumericData$1.getBitsLength = function getBitsLength(length) {\r\n    return 11 * Math.floor(length / 2) + 6 * (length % 2);\r\n};\r\nAlphanumericData$1.prototype.getLength = function getLength() {\r\n    return this.data.length;\r\n};\r\nAlphanumericData$1.prototype.getBitsLength = function getBitsLength() {\r\n    return AlphanumericData$1.getBitsLength(this.data.length);\r\n};\r\nAlphanumericData$1.prototype.write = function write(bitBuffer) {\r\n    var i;\r\n    // Input data characters are divided into groups of two characters\r\n    // and encoded as 11-bit binary codes.\r\n    for (i = 0; i + 2 <= this.data.length; i += 2) {\r\n        // The character value of the first character is multiplied by 45\r\n        var value = ALPHA_NUM_CHARS$1.indexOf(this.data[i]) * 45;\r\n        // The character value of the second digit is added to the product\r\n        value += ALPHA_NUM_CHARS$1.indexOf(this.data[i + 1]);\r\n        // The sum is then stored as 11-bit binary number\r\n        bitBuffer.put(value, 11);\r\n    }\r\n    // If the number of input data characters is not a multiple of two,\r\n    // the character value of the final character is encoded as a 6-bit binary number.\r\n    if (this.data.length % 2) {\r\n        bitBuffer.put(ALPHA_NUM_CHARS$1.indexOf(this.data[i]), 6);\r\n    }\r\n};\r\nvar alphanumericData = AlphanumericData$1;\r\nfunction ByteData$1(data) {\r\n    this.mode = mode$1.BYTE;\r\n    this.data = buffer.from(data);\r\n}\r\nByteData$1.getBitsLength = function getBitsLength(length) {\r\n    return length * 8;\r\n};\r\nByteData$1.prototype.getLength = function getLength() {\r\n    return this.data.length;\r\n};\r\nByteData$1.prototype.getBitsLength = function getBitsLength() {\r\n    return ByteData$1.getBitsLength(this.data.length);\r\n};\r\nByteData$1.prototype.write = function (bitBuffer) {\r\n    for (var i = 0, l = this.data.length; i < l; i++) {\r\n        bitBuffer.put(this.data[i], 8);\r\n    }\r\n};\r\nvar byteData = ByteData$1;\r\nfunction KanjiData$1(data) {\r\n    this.mode = mode$1.KANJI;\r\n    this.data = data;\r\n}\r\nKanjiData$1.getBitsLength = function getBitsLength(length) {\r\n    return length * 13;\r\n};\r\nKanjiData$1.prototype.getLength = function getLength() {\r\n    return this.data.length;\r\n};\r\nKanjiData$1.prototype.getBitsLength = function getBitsLength() {\r\n    return KanjiData$1.getBitsLength(this.data.length);\r\n};\r\nKanjiData$1.prototype.write = function (bitBuffer) {\r\n    var i;\r\n    // In the Shift JIS system, Kanji characters are represented by a two byte combination.\r\n    // These byte values are shifted from the JIS X 0208 values.\r\n    // JIS X 0208 gives details of the shift coded representation.\r\n    for (i = 0; i < this.data.length; i++) {\r\n        var value = utils.toSJIS(this.data[i]);\r\n        // For characters with Shift JIS values from 0x8140 to 0x9FFC:\r\n        if (value >= 0x8140 && value <= 0x9FFC) {\r\n            // Subtract 0x8140 from Shift JIS value\r\n            value -= 0x8140;\r\n            // For characters with Shift JIS values from 0xE040 to 0xEBBF\r\n        }\r\n        else if (value >= 0xE040 && value <= 0xEBBF) {\r\n            // Subtract 0xC140 from Shift JIS value\r\n            value -= 0xC140;\r\n        }\r\n        else {\r\n            throw new Error('Invalid SJIS character: ' + this.data[i] + '\\n' +\r\n                'Make sure your charset is UTF-8');\r\n        }\r\n        // Multiply most significant byte of result by 0xC0\r\n        // and add least significant byte to product\r\n        value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff);\r\n        // Convert result to a 13-bit binary string\r\n        bitBuffer.put(value, 13);\r\n    }\r\n};\r\nvar kanjiData = KanjiData$1;\r\nvar dijkstra_1$1 = createCommonjsModule(function (module) {\r\n    /******************************************************************************\r\n     * Created 2008-08-19.\r\n     *\r\n     * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\r\n     *\r\n     * Copyright (C) 2008\r\n     *   Wyatt Baldwin <self@wyattbaldwin.com>\r\n     *   All rights reserved\r\n     *\r\n     * Licensed under the MIT license.\r\n     *\r\n     *   http://www.opensource.org/licenses/mit-license.php\r\n     *\r\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n     * THE SOFTWARE.\r\n     *****************************************************************************/\r\n    var dijkstra = {\r\n        single_source_shortest_paths: function (graph, s, d) {\r\n            // Predecessor map for each node that has been encountered.\r\n            // node ID => predecessor node ID\r\n            var predecessors = {};\r\n            // Costs of shortest paths from s to all nodes encountered.\r\n            // node ID => cost\r\n            var costs = {};\r\n            costs[s] = 0;\r\n            // Costs of shortest paths from s to all nodes encountered; differs from\r\n            // `costs` in that it provides easy access to the node that currently has\r\n            // the known shortest path from s.\r\n            // XXX: Do we actually need both `costs` and `open`?\r\n            var open = dijkstra.PriorityQueue.make();\r\n            open.push(s, 0);\r\n            var closest, u, v, cost_of_s_to_u, adjacent_nodes, cost_of_e, cost_of_s_to_u_plus_cost_of_e, cost_of_s_to_v, first_visit;\r\n            while (!open.empty()) {\r\n                // In the nodes remaining in graph that have a known cost from s,\r\n                // find the node, u, that currently has the shortest path from s.\r\n                closest = open.pop();\r\n                u = closest.value;\r\n                cost_of_s_to_u = closest.cost;\r\n                // Get nodes adjacent to u...\r\n                adjacent_nodes = graph[u] || {};\r\n                // ...and explore the edges that connect u to those nodes, updating\r\n                // the cost of the shortest paths to any or all of those nodes as\r\n                // necessary. v is the node across the current edge from u.\r\n                for (v in adjacent_nodes) {\r\n                    if (adjacent_nodes.hasOwnProperty(v)) {\r\n                        // Get the cost of the edge running from u to v.\r\n                        cost_of_e = adjacent_nodes[v];\r\n                        // Cost of s to u plus the cost of u to v across e--this is *a*\r\n                        // cost from s to v that may or may not be less than the current\r\n                        // known cost to v.\r\n                        cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\r\n                        // If we haven't visited v yet OR if the current known cost from s to\r\n                        // v is greater than the new cost we just found (cost of s to u plus\r\n                        // cost of u to v across e), update v's cost in the cost list and\r\n                        // update v's predecessor in the predecessor list (it's now u).\r\n                        cost_of_s_to_v = costs[v];\r\n                        first_visit = (typeof costs[v] === 'undefined');\r\n                        if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\r\n                            costs[v] = cost_of_s_to_u_plus_cost_of_e;\r\n                            open.push(v, cost_of_s_to_u_plus_cost_of_e);\r\n                            predecessors[v] = u;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\r\n                var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\r\n                throw new Error(msg);\r\n            }\r\n            return predecessors;\r\n        },\r\n        extract_shortest_path_from_predecessor_list: function (predecessors, d) {\r\n            var nodes = [];\r\n            var u = d;\r\n            while (u) {\r\n                nodes.push(u);\r\n                u = predecessors[u];\r\n            }\r\n            nodes.reverse();\r\n            return nodes;\r\n        },\r\n        find_path: function (graph, s, d) {\r\n            var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\r\n            return dijkstra.extract_shortest_path_from_predecessor_list(predecessors, d);\r\n        },\r\n        /**\r\n         * A very naive priority queue implementation.\r\n         */\r\n        PriorityQueue: {\r\n            make: function (opts) {\r\n                var T = dijkstra.PriorityQueue, t = {}, key;\r\n                opts = opts || {};\r\n                for (key in T) {\r\n                    if (T.hasOwnProperty(key)) {\r\n                        t[key] = T[key];\r\n                    }\r\n                }\r\n                t.queue = [];\r\n                t.sorter = opts.sorter || T.default_sorter;\r\n                return t;\r\n            },\r\n            default_sorter: function (a, b) {\r\n                return a.cost - b.cost;\r\n            },\r\n            /**\r\n             * Add a new item to the queue and ensure the highest priority element\r\n             * is at the front of the queue.\r\n             */\r\n            push: function (value, cost) {\r\n                var item = { value: value, cost: cost };\r\n                this.queue.push(item);\r\n                this.queue.sort(this.sorter);\r\n            },\r\n            /**\r\n             * Return the highest priority element in the queue.\r\n             */\r\n            pop: function () {\r\n                return this.queue.shift();\r\n            },\r\n            empty: function () {\r\n                return this.queue.length === 0;\r\n            }\r\n        }\r\n    };\r\n    // node.js module exports\r\n    {\r\n        module.exports = dijkstra;\r\n    }\r\n});\r\nvar segments = createCommonjsModule(function (module, exports) {\r\n    /**\r\n     * Returns UTF8 byte length\r\n     *\r\n     * @param  {String} str Input string\r\n     * @return {Number}     Number of byte\r\n     */\r\n    function getStringByteLength(str) {\r\n        return unescape(encodeURIComponent(str)).length;\r\n    }\r\n    /**\r\n     * Get a list of segments of the specified mode\r\n     * from a string\r\n     *\r\n     * @param  {Mode}   mode Segment mode\r\n     * @param  {String} str  String to process\r\n     * @return {Array}       Array of object with segments data\r\n     */\r\n    function getSegments(regex, mode, str) {\r\n        var segments = [];\r\n        var result;\r\n        while ((result = regex.exec(str)) !== null) {\r\n            segments.push({\r\n                data: result[0],\r\n                index: result.index,\r\n                mode: mode,\r\n                length: result[0].length\r\n            });\r\n        }\r\n        return segments;\r\n    }\r\n    /**\r\n     * Extracts a series of segments with the appropriate\r\n     * modes from a string\r\n     *\r\n     * @param  {String} dataStr Input string\r\n     * @return {Array}          Array of object with segments data\r\n     */\r\n    function getSegmentsFromString(dataStr) {\r\n        var numSegs = getSegments(regex.NUMERIC, mode$1.NUMERIC, dataStr);\r\n        var alphaNumSegs = getSegments(regex.ALPHANUMERIC, mode$1.ALPHANUMERIC, dataStr);\r\n        var byteSegs;\r\n        var kanjiSegs;\r\n        if (utils.isKanjiModeEnabled()) {\r\n            byteSegs = getSegments(regex.BYTE, mode$1.BYTE, dataStr);\r\n            kanjiSegs = getSegments(regex.KANJI, mode$1.KANJI, dataStr);\r\n        }\r\n        else {\r\n            byteSegs = getSegments(regex.BYTE_KANJI, mode$1.BYTE, dataStr);\r\n            kanjiSegs = [];\r\n        }\r\n        var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);\r\n        return segs\r\n            .sort(function (s1, s2) {\r\n            return s1.index - s2.index;\r\n        })\r\n            .map(function (obj) {\r\n            return {\r\n                data: obj.data,\r\n                mode: obj.mode,\r\n                length: obj.length\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Returns how many bits are needed to encode a string of\r\n     * specified length with the specified mode\r\n     *\r\n     * @param  {Number} length String length\r\n     * @param  {Mode} mode     Segment mode\r\n     * @return {Number}        Bit length\r\n     */\r\n    function getSegmentBitsLength(length, mode) {\r\n        switch (mode) {\r\n            case mode$1.NUMERIC:\r\n                return numericData.getBitsLength(length);\r\n            case mode$1.ALPHANUMERIC:\r\n                return alphanumericData.getBitsLength(length);\r\n            case mode$1.KANJI:\r\n                return kanjiData.getBitsLength(length);\r\n            case mode$1.BYTE:\r\n                return byteData.getBitsLength(length);\r\n        }\r\n    }\r\n    /**\r\n     * Merges adjacent segments which have the same mode\r\n     *\r\n     * @param  {Array} segs Array of object with segments data\r\n     * @return {Array}      Array of object with segments data\r\n     */\r\n    function mergeSegments(segs) {\r\n        return segs.reduce(function (acc, curr) {\r\n            var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;\r\n            if (prevSeg && prevSeg.mode === curr.mode) {\r\n                acc[acc.length - 1].data += curr.data;\r\n                return acc;\r\n            }\r\n            acc.push(curr);\r\n            return acc;\r\n        }, []);\r\n    }\r\n    /**\r\n     * Generates a list of all possible nodes combination which\r\n     * will be used to build a segments graph.\r\n     *\r\n     * Nodes are divided by groups. Each group will contain a list of all the modes\r\n     * in which is possible to encode the given text.\r\n     *\r\n     * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\r\n     * The group for '12345' will contain then 3 objects, one for each\r\n     * possible encoding mode.\r\n     *\r\n     * Each node represents a possible segment.\r\n     *\r\n     * @param  {Array} segs Array of object with segments data\r\n     * @return {Array}      Array of object with segments data\r\n     */\r\n    function buildNodes(segs) {\r\n        var nodes = [];\r\n        for (var i = 0; i < segs.length; i++) {\r\n            var seg = segs[i];\r\n            switch (seg.mode) {\r\n                case mode$1.NUMERIC:\r\n                    nodes.push([seg,\r\n                        { data: seg.data, mode: mode$1.ALPHANUMERIC, length: seg.length },\r\n                        { data: seg.data, mode: mode$1.BYTE, length: seg.length }\r\n                    ]);\r\n                    break;\r\n                case mode$1.ALPHANUMERIC:\r\n                    nodes.push([seg,\r\n                        { data: seg.data, mode: mode$1.BYTE, length: seg.length }\r\n                    ]);\r\n                    break;\r\n                case mode$1.KANJI:\r\n                    nodes.push([seg,\r\n                        { data: seg.data, mode: mode$1.BYTE, length: getStringByteLength(seg.data) }\r\n                    ]);\r\n                    break;\r\n                case mode$1.BYTE:\r\n                    nodes.push([\r\n                        { data: seg.data, mode: mode$1.BYTE, length: getStringByteLength(seg.data) }\r\n                    ]);\r\n            }\r\n        }\r\n        return nodes;\r\n    }\r\n    /**\r\n     * Builds a graph from a list of nodes.\r\n     * All segments in each node group will be connected with all the segments of\r\n     * the next group and so on.\r\n     *\r\n     * At each connection will be assigned a weight depending on the\r\n     * segment's byte length.\r\n     *\r\n     * @param  {Array} nodes    Array of object with segments data\r\n     * @param  {Number} version QR Code version\r\n     * @return {Object}         Graph of all possible segments\r\n     */\r\n    function buildGraph(nodes, version) {\r\n        var table = {};\r\n        var graph = { 'start': {} };\r\n        var prevNodeIds = ['start'];\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var nodeGroup = nodes[i];\r\n            var currentNodeIds = [];\r\n            for (var j = 0; j < nodeGroup.length; j++) {\r\n                var node = nodeGroup[j];\r\n                var key = '' + i + j;\r\n                currentNodeIds.push(key);\r\n                table[key] = { node: node, lastCount: 0 };\r\n                graph[key] = {};\r\n                for (var n = 0; n < prevNodeIds.length; n++) {\r\n                    var prevNodeId = prevNodeIds[n];\r\n                    if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\r\n                        graph[prevNodeId][key] =\r\n                            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\r\n                                getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);\r\n                        table[prevNodeId].lastCount += node.length;\r\n                    }\r\n                    else {\r\n                        if (table[prevNodeId])\r\n                            table[prevNodeId].lastCount = node.length;\r\n                        graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\r\n                            4 + mode$1.getCharCountIndicator(node.mode, version); // switch cost\r\n                    }\r\n                }\r\n            }\r\n            prevNodeIds = currentNodeIds;\r\n        }\r\n        for (n = 0; n < prevNodeIds.length; n++) {\r\n            graph[prevNodeIds[n]]['end'] = 0;\r\n        }\r\n        return { map: graph, table: table };\r\n    }\r\n    /**\r\n     * Builds a segment from a specified data and mode.\r\n     * If a mode is not specified, the more suitable will be used.\r\n     *\r\n     * @param  {String} data             Input data\r\n     * @param  {Mode | String} modesHint Data mode\r\n     * @return {Segment}                 Segment\r\n     */\r\n    function buildSingleSegment(data, modesHint) {\r\n        var mode;\r\n        var bestMode = mode$1.getBestModeForData(data);\r\n        mode = mode$1.from(modesHint, bestMode);\r\n        // Make sure data can be encoded\r\n        if (mode !== mode$1.BYTE && mode.bit < bestMode.bit) {\r\n            throw new Error('\"' + data + '\"' +\r\n                ' cannot be encoded with mode ' + mode$1.toString(mode) +\r\n                '.\\n Suggested mode is: ' + mode$1.toString(bestMode));\r\n        }\r\n        // Use Mode.BYTE if Kanji support is disabled\r\n        if (mode === mode$1.KANJI && !utils.isKanjiModeEnabled()) {\r\n            mode = mode$1.BYTE;\r\n        }\r\n        switch (mode) {\r\n            case mode$1.NUMERIC:\r\n                return new numericData(data);\r\n            case mode$1.ALPHANUMERIC:\r\n                return new alphanumericData(data);\r\n            case mode$1.KANJI:\r\n                return new kanjiData(data);\r\n            case mode$1.BYTE:\r\n                return new byteData(data);\r\n        }\r\n    }\r\n    /**\r\n     * Builds a list of segments from an array.\r\n     * Array can contain Strings or Objects with segment's info.\r\n     *\r\n     * For each item which is a string, will be generated a segment with the given\r\n     * string and the more appropriate encoding mode.\r\n     *\r\n     * For each item which is an object, will be generated a segment with the given\r\n     * data and mode.\r\n     * Objects must contain at least the property \"data\".\r\n     * If property \"mode\" is not present, the more suitable mode will be used.\r\n     *\r\n     * @param  {Array} array Array of objects with segments data\r\n     * @return {Array}       Array of Segments\r\n     */\r\n    exports.fromArray = function fromArray(array) {\r\n        return array.reduce(function (acc, seg) {\r\n            if (typeof seg === 'string') {\r\n                acc.push(buildSingleSegment(seg, null));\r\n            }\r\n            else if (seg.data) {\r\n                acc.push(buildSingleSegment(seg.data, seg.mode));\r\n            }\r\n            return acc;\r\n        }, []);\r\n    };\r\n    /**\r\n     * Builds an optimized sequence of segments from a string,\r\n     * which will produce the shortest possible bitstream.\r\n     *\r\n     * @param  {String} data    Input string\r\n     * @param  {Number} version QR Code version\r\n     * @return {Array}          Array of segments\r\n     */\r\n    exports.fromString = function fromString(data, version) {\r\n        var segs = getSegmentsFromString(data, utils.isKanjiModeEnabled());\r\n        var nodes = buildNodes(segs);\r\n        var graph = buildGraph(nodes, version);\r\n        var path = dijkstra_1$1.find_path(graph.map, 'start', 'end');\r\n        var optimizedSegs = [];\r\n        for (var i = 1; i < path.length - 1; i++) {\r\n            optimizedSegs.push(graph.table[path[i]].node);\r\n        }\r\n        return exports.fromArray(mergeSegments(optimizedSegs));\r\n    };\r\n    /**\r\n     * Splits a string in various segments with the modes which\r\n     * best represent their content.\r\n     * The produced segments are far from being optimized.\r\n     * The output of this function is only used to estimate a QR Code version\r\n     * which may contain the data.\r\n     *\r\n     * @param  {string} data Input string\r\n     * @return {Array}       Array of segments\r\n     */\r\n    exports.rawSplit = function rawSplit(data) {\r\n        return exports.fromArray(getSegmentsFromString(data, utils.isKanjiModeEnabled()));\r\n    };\r\n});\r\nfunction BitBuffer() {\r\n    this.buffer = [];\r\n    this.length = 0;\r\n}\r\nBitBuffer.prototype = {\r\n    get: function (index) {\r\n        var bufIndex = Math.floor(index / 8);\r\n        return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1;\r\n    },\r\n    put: function (num, length) {\r\n        for (var i = 0; i < length; i++) {\r\n            this.putBit(((num >>> (length - i - 1)) & 1) === 1);\r\n        }\r\n    },\r\n    getLengthInBits: function () {\r\n        return this.length;\r\n    },\r\n    putBit: function (bit) {\r\n        var bufIndex = Math.floor(this.length / 8);\r\n        if (this.buffer.length <= bufIndex) {\r\n            this.buffer.push(0);\r\n        }\r\n        if (bit) {\r\n            this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\r\n        }\r\n        this.length++;\r\n    }\r\n};\r\nvar bitBuffer = BitBuffer;\r\n/**\r\n * Helper class to handle QR Code symbol modules\r\n *\r\n * @param {Number} size Symbol size\r\n */\r\nfunction BitMatrix(size) {\r\n    if (!size || size < 1) {\r\n        throw new Error('BitMatrix size must be defined and greater than 0');\r\n    }\r\n    this.size = size;\r\n    this.data = buffer.alloc(size * size);\r\n    this.reservedBit = buffer.alloc(size * size);\r\n}\r\n/**\r\n * Set bit value at specified location\r\n * If reserved flag is set, this bit will be ignored during masking process\r\n *\r\n * @param {Number}  row\r\n * @param {Number}  col\r\n * @param {Boolean} value\r\n * @param {Boolean} reserved\r\n */\r\nBitMatrix.prototype.set = function (row, col, value, reserved) {\r\n    var index = row * this.size + col;\r\n    this.data[index] = value;\r\n    if (reserved)\r\n        this.reservedBit[index] = true;\r\n};\r\n/**\r\n * Returns bit value at specified location\r\n *\r\n * @param  {Number}  row\r\n * @param  {Number}  col\r\n * @return {Boolean}\r\n */\r\nBitMatrix.prototype.get = function (row, col) {\r\n    return this.data[row * this.size + col];\r\n};\r\n/**\r\n * Applies xor operator at specified location\r\n * (used during masking process)\r\n *\r\n * @param {Number}  row\r\n * @param {Number}  col\r\n * @param {Boolean} value\r\n */\r\nBitMatrix.prototype.xor = function (row, col, value) {\r\n    this.data[row * this.size + col] ^= value;\r\n};\r\n/**\r\n * Check if bit at specified location is reserved\r\n *\r\n * @param {Number}   row\r\n * @param {Number}   col\r\n * @return {Boolean}\r\n */\r\nBitMatrix.prototype.isReserved = function (row, col) {\r\n    return this.reservedBit[row * this.size + col];\r\n};\r\nvar bitMatrix = BitMatrix;\r\nvar alignmentPattern$1 = createCommonjsModule(function (module, exports) {\r\n    /**\r\n     * Alignment pattern are fixed reference pattern in defined positions\r\n     * in a matrix symbology, which enables the decode software to re-synchronise\r\n     * the coordinate mapping of the image modules in the event of moderate amounts\r\n     * of distortion of the image.\r\n     *\r\n     * Alignment patterns are present only in QR Code symbols of version 2 or larger\r\n     * and their number depends on the symbol version.\r\n     */\r\n    var getSymbolSize = utils.getSymbolSize;\r\n    /**\r\n     * Calculate the row/column coordinates of the center module of each alignment pattern\r\n     * for the specified QR Code version.\r\n     *\r\n     * The alignment patterns are positioned symmetrically on either side of the diagonal\r\n     * running from the top left corner of the symbol to the bottom right corner.\r\n     *\r\n     * Since positions are simmetrical only half of the coordinates are returned.\r\n     * Each item of the array will represent in turn the x and y coordinate.\r\n     * @see {@link getPositions}\r\n     *\r\n     * @param  {Number} version QR Code version\r\n     * @return {Array}          Array of coordinate\r\n     */\r\n    exports.getRowColCoords = function getRowColCoords(version) {\r\n        if (version === 1)\r\n            return [];\r\n        var posCount = Math.floor(version / 7) + 2;\r\n        var size = getSymbolSize(version);\r\n        var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2;\r\n        var positions = [size - 7]; // Last coord is always (size - 7)\r\n        for (var i = 1; i < posCount - 1; i++) {\r\n            positions[i] = positions[i - 1] - intervals;\r\n        }\r\n        positions.push(6); // First coord is always 6\r\n        return positions.reverse();\r\n    };\r\n    /**\r\n     * Returns an array containing the positions of each alignment pattern.\r\n     * Each array's element represent the center point of the pattern as (x, y) coordinates\r\n     *\r\n     * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\r\n     * and filtering out the items that overlaps with finder pattern\r\n     *\r\n     * @example\r\n     * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\r\n     * The alignment patterns, therefore, are to be centered on (row, column)\r\n     * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\r\n     * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\r\n     * and are not therefore used for alignment patterns.\r\n     *\r\n     * var pos = getPositions(7)\r\n     * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\r\n     *\r\n     * @param  {Number} version QR Code version\r\n     * @return {Array}          Array of coordinates\r\n     */\r\n    exports.getPositions = function getPositions(version) {\r\n        var coords = [];\r\n        var pos = exports.getRowColCoords(version);\r\n        var posLength = pos.length;\r\n        for (var i = 0; i < posLength; i++) {\r\n            for (var j = 0; j < posLength; j++) {\r\n                // Skip if position is occupied by finder patterns\r\n                if ((i === 0 && j === 0) || // top-left\r\n                    (i === 0 && j === posLength - 1) || // bottom-left\r\n                    (i === posLength - 1 && j === 0)) { // top-right\r\n                    continue;\r\n                }\r\n                coords.push([pos[i], pos[j]]);\r\n            }\r\n        }\r\n        return coords;\r\n    };\r\n});\r\nvar getSymbolSize$1 = utils.getSymbolSize;\r\nvar FINDER_PATTERN_SIZE = 7;\r\n/**\r\n * Returns an array containing the positions of each finder pattern.\r\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\r\n *\r\n * @param  {Number} version QR Code version\r\n * @return {Array}          Array of coordinates\r\n */\r\nvar getPositions = function getPositions(version) {\r\n    var size = getSymbolSize$1(version);\r\n    return [\r\n        // top-left\r\n        [0, 0],\r\n        // top-right\r\n        [size - FINDER_PATTERN_SIZE, 0],\r\n        // bottom-left\r\n        [0, size - FINDER_PATTERN_SIZE]\r\n    ];\r\n};\r\nvar finderPattern = {\r\n    getPositions: getPositions\r\n};\r\nvar maskPattern$1 = createCommonjsModule(function (module, exports) {\r\n    /**\r\n     * Data mask pattern reference\r\n     * @type {Object}\r\n     */\r\n    exports.Patterns = {\r\n        PATTERN000: 0,\r\n        PATTERN001: 1,\r\n        PATTERN010: 2,\r\n        PATTERN011: 3,\r\n        PATTERN100: 4,\r\n        PATTERN101: 5,\r\n        PATTERN110: 6,\r\n        PATTERN111: 7\r\n    };\r\n    /**\r\n     * Weighted penalty scores for the undesirable features\r\n     * @type {Object}\r\n     */\r\n    var PenaltyScores = {\r\n        N1: 3,\r\n        N2: 3,\r\n        N3: 40,\r\n        N4: 10\r\n    };\r\n    /**\r\n     * Check if mask pattern value is valid\r\n     *\r\n     * @param  {Number}  mask    Mask pattern\r\n     * @return {Boolean}         true if valid, false otherwise\r\n     */\r\n    exports.isValid = function isValid(mask) {\r\n        return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7;\r\n    };\r\n    /**\r\n     * Returns mask pattern from a value.\r\n     * If value is not valid, returns undefined\r\n     *\r\n     * @param  {Number|String} value        Mask pattern value\r\n     * @return {Number}                     Valid mask pattern or undefined\r\n     */\r\n    exports.from = function from(value) {\r\n        return exports.isValid(value) ? parseInt(value, 10) : undefined;\r\n    };\r\n    /**\r\n    * Find adjacent modules in row/column with the same color\r\n    * and assign a penalty value.\r\n    *\r\n    * Points: N1 + i\r\n    * i is the amount by which the number of adjacent modules of the same color exceeds 5\r\n    */\r\n    exports.getPenaltyN1 = function getPenaltyN1(data) {\r\n        var size = data.size;\r\n        var points = 0;\r\n        var sameCountCol = 0;\r\n        var sameCountRow = 0;\r\n        var lastCol = null;\r\n        var lastRow = null;\r\n        for (var row = 0; row < size; row++) {\r\n            sameCountCol = sameCountRow = 0;\r\n            lastCol = lastRow = null;\r\n            for (var col = 0; col < size; col++) {\r\n                var module = data.get(row, col);\r\n                if (module === lastCol) {\r\n                    sameCountCol++;\r\n                }\r\n                else {\r\n                    if (sameCountCol >= 5)\r\n                        points += PenaltyScores.N1 + (sameCountCol - 5);\r\n                    lastCol = module;\r\n                    sameCountCol = 1;\r\n                }\r\n                module = data.get(col, row);\r\n                if (module === lastRow) {\r\n                    sameCountRow++;\r\n                }\r\n                else {\r\n                    if (sameCountRow >= 5)\r\n                        points += PenaltyScores.N1 + (sameCountRow - 5);\r\n                    lastRow = module;\r\n                    sameCountRow = 1;\r\n                }\r\n            }\r\n            if (sameCountCol >= 5)\r\n                points += PenaltyScores.N1 + (sameCountCol - 5);\r\n            if (sameCountRow >= 5)\r\n                points += PenaltyScores.N1 + (sameCountRow - 5);\r\n        }\r\n        return points;\r\n    };\r\n    /**\r\n     * Find 2x2 blocks with the same color and assign a penalty value\r\n     *\r\n     * Points: N2 * (m - 1) * (n - 1)\r\n     */\r\n    exports.getPenaltyN2 = function getPenaltyN2(data) {\r\n        var size = data.size;\r\n        var points = 0;\r\n        for (var row = 0; row < size - 1; row++) {\r\n            for (var col = 0; col < size - 1; col++) {\r\n                var last = data.get(row, col) +\r\n                    data.get(row, col + 1) +\r\n                    data.get(row + 1, col) +\r\n                    data.get(row + 1, col + 1);\r\n                if (last === 4 || last === 0)\r\n                    points++;\r\n            }\r\n        }\r\n        return points * PenaltyScores.N2;\r\n    };\r\n    /**\r\n     * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\r\n     * preceded or followed by light area 4 modules wide\r\n     *\r\n     * Points: N3 * number of pattern found\r\n     */\r\n    exports.getPenaltyN3 = function getPenaltyN3(data) {\r\n        var size = data.size;\r\n        var points = 0;\r\n        var bitsCol = 0;\r\n        var bitsRow = 0;\r\n        for (var row = 0; row < size; row++) {\r\n            bitsCol = bitsRow = 0;\r\n            for (var col = 0; col < size; col++) {\r\n                bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col);\r\n                if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D))\r\n                    points++;\r\n                bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row);\r\n                if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D))\r\n                    points++;\r\n            }\r\n        }\r\n        return points * PenaltyScores.N3;\r\n    };\r\n    /**\r\n     * Calculate proportion of dark modules in entire symbol\r\n     *\r\n     * Points: N4 * k\r\n     *\r\n     * k is the rating of the deviation of the proportion of dark modules\r\n     * in the symbol from 50% in steps of 5%\r\n     */\r\n    exports.getPenaltyN4 = function getPenaltyN4(data) {\r\n        var darkCount = 0;\r\n        var modulesCount = data.data.length;\r\n        for (var i = 0; i < modulesCount; i++)\r\n            darkCount += data.data[i];\r\n        var k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10);\r\n        return k * PenaltyScores.N4;\r\n    };\r\n    /**\r\n     * Return mask value at given position\r\n     *\r\n     * @param  {Number} maskPattern Pattern reference value\r\n     * @param  {Number} i           Row\r\n     * @param  {Number} j           Column\r\n     * @return {Boolean}            Mask value\r\n     */\r\n    function getMaskAt(maskPattern, i, j) {\r\n        switch (maskPattern) {\r\n            case exports.Patterns.PATTERN000: return (i + j) % 2 === 0;\r\n            case exports.Patterns.PATTERN001: return i % 2 === 0;\r\n            case exports.Patterns.PATTERN010: return j % 3 === 0;\r\n            case exports.Patterns.PATTERN011: return (i + j) % 3 === 0;\r\n            case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\r\n            case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0;\r\n            case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0;\r\n            case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0;\r\n            default: throw new Error('bad maskPattern:' + maskPattern);\r\n        }\r\n    }\r\n    /**\r\n     * Apply a mask pattern to a BitMatrix\r\n     *\r\n     * @param  {Number}    pattern Pattern reference number\r\n     * @param  {BitMatrix} data    BitMatrix data\r\n     */\r\n    exports.applyMask = function applyMask(pattern, data) {\r\n        var size = data.size;\r\n        for (var col = 0; col < size; col++) {\r\n            for (var row = 0; row < size; row++) {\r\n                if (data.isReserved(row, col))\r\n                    continue;\r\n                data.xor(row, col, getMaskAt(pattern, row, col));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the best mask pattern for data\r\n     *\r\n     * @param  {BitMatrix} data\r\n     * @return {Number} Mask pattern reference number\r\n     */\r\n    exports.getBestMask = function getBestMask(data, setupFormatFunc) {\r\n        var numPatterns = Object.keys(exports.Patterns).length;\r\n        var bestPattern = 0;\r\n        var lowerPenalty = Infinity;\r\n        for (var p = 0; p < numPatterns; p++) {\r\n            setupFormatFunc(p);\r\n            exports.applyMask(p, data);\r\n            // Calculate penalty\r\n            var penalty = exports.getPenaltyN1(data) +\r\n                exports.getPenaltyN2(data) +\r\n                exports.getPenaltyN3(data) +\r\n                exports.getPenaltyN4(data);\r\n            // Undo previously applied mask\r\n            exports.applyMask(p, data);\r\n            if (penalty < lowerPenalty) {\r\n                lowerPenalty = penalty;\r\n                bestPattern = p;\r\n            }\r\n        }\r\n        return bestPattern;\r\n    };\r\n});\r\nvar Buffer$3 = buffer$1.Buffer;\r\nfunction ReedSolomonEncoder(degree) {\r\n    this.genPoly = undefined;\r\n    this.degree = degree;\r\n    if (this.degree)\r\n        this.initialize(this.degree);\r\n}\r\n/**\r\n * Initialize the encoder.\r\n * The input param should correspond to the number of error correction codewords.\r\n *\r\n * @param  {Number} degree\r\n */\r\nReedSolomonEncoder.prototype.initialize = function initialize(degree) {\r\n    // create an irreducible generator polynomial\r\n    this.degree = degree;\r\n    this.genPoly = polynomial$1.generateECPolynomial(this.degree);\r\n};\r\n/**\r\n * Encodes a chunk of data\r\n *\r\n * @param  {Buffer} data Buffer containing input data\r\n * @return {Buffer}      Buffer containing encoded data\r\n */\r\nReedSolomonEncoder.prototype.encode = function encode(data) {\r\n    if (!this.genPoly) {\r\n        throw new Error('Encoder not initialized');\r\n    }\r\n    // Calculate EC for this data block\r\n    // extends data size to data+genPoly size\r\n    var pad = buffer.alloc(this.degree);\r\n    var paddedData = Buffer$3.concat([data, pad], data.length + this.degree);\r\n    // The error correction codewords are the remainder after dividing the data codewords\r\n    // by a generator polynomial\r\n    var remainder = polynomial$1.mod(paddedData, this.genPoly);\r\n    // return EC data blocks (last n byte, where n is the degree of genPoly)\r\n    // If coefficients number in remainder are less than genPoly degree,\r\n    // pad with 0s to the left to reach the needed number of coefficients\r\n    var start = this.degree - remainder.length;\r\n    if (start > 0) {\r\n        var buff = buffer.alloc(this.degree);\r\n        remainder.copy(buff, start);\r\n        return buff;\r\n    }\r\n    return remainder;\r\n};\r\nvar reedSolomonEncoder = ReedSolomonEncoder;\r\nvar version$1 = createCommonjsModule(function (module, exports) {\r\n    // Generator polynomial used to encode version information\r\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\r\n    var G18_BCH = utils.getBCHDigit(G18);\r\n    function getBestVersionForDataLength(mode, length, errorCorrectionLevel) {\r\n        for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\r\n            if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\r\n                return currentVersion;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    function getReservedBitsCount(mode, version) {\r\n        // Character count indicator + mode indicator bits\r\n        return mode$1.getCharCountIndicator(mode, version) + 4;\r\n    }\r\n    function getTotalBitsFromDataArray(segments, version) {\r\n        var totalBits = 0;\r\n        segments.forEach(function (data) {\r\n            var reservedBits = getReservedBitsCount(data.mode, version);\r\n            totalBits += reservedBits + data.getBitsLength();\r\n        });\r\n        return totalBits;\r\n    }\r\n    function getBestVersionForMixedData(segments, errorCorrectionLevel) {\r\n        for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\r\n            var length = getTotalBitsFromDataArray(segments, currentVersion);\r\n            if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode$1.MIXED)) {\r\n                return currentVersion;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Returns version number from a value.\r\n     * If value is not a valid version, returns defaultValue\r\n     *\r\n     * @param  {Number|String} value        QR Code version\r\n     * @param  {Number}        defaultValue Fallback value\r\n     * @return {Number}                     QR Code version number\r\n     */\r\n    exports.from = function from(value, defaultValue) {\r\n        if (versionCheck.isValid(value)) {\r\n            return parseInt(value, 10);\r\n        }\r\n        return defaultValue;\r\n    };\r\n    /**\r\n     * Returns how much data can be stored with the specified QR code version\r\n     * and error correction level\r\n     *\r\n     * @param  {Number} version              QR Code version (1-40)\r\n     * @param  {Number} errorCorrectionLevel Error correction level\r\n     * @param  {Mode}   mode                 Data mode\r\n     * @return {Number}                      Quantity of storable data\r\n     */\r\n    exports.getCapacity = function getCapacity(version, errorCorrectionLevel, mode) {\r\n        if (!versionCheck.isValid(version)) {\r\n            throw new Error('Invalid QR Code version');\r\n        }\r\n        // Use Byte mode as default\r\n        if (typeof mode === 'undefined')\r\n            mode = mode$1.BYTE;\r\n        // Total codewords for this QR code version (Data + Error correction)\r\n        var totalCodewords = utils.getSymbolTotalCodewords(version);\r\n        // Total number of error correction codewords\r\n        var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\r\n        // Total number of data codewords\r\n        var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\r\n        if (mode === mode$1.MIXED)\r\n            return dataTotalCodewordsBits;\r\n        var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version);\r\n        // Return max number of storable codewords\r\n        switch (mode) {\r\n            case mode$1.NUMERIC:\r\n                return Math.floor((usableBits / 10) * 3);\r\n            case mode$1.ALPHANUMERIC:\r\n                return Math.floor((usableBits / 11) * 2);\r\n            case mode$1.KANJI:\r\n                return Math.floor(usableBits / 13);\r\n            case mode$1.BYTE:\r\n            default:\r\n                return Math.floor(usableBits / 8);\r\n        }\r\n    };\r\n    /**\r\n     * Returns the minimum version needed to contain the amount of data\r\n     *\r\n     * @param  {Segment} data                    Segment of data\r\n     * @param  {Number} [errorCorrectionLevel=H] Error correction level\r\n     * @param  {Mode} mode                       Data mode\r\n     * @return {Number}                          QR Code version\r\n     */\r\n    exports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel) {\r\n        var seg;\r\n        var ecl = errorCorrectionLevel$1.from(errorCorrectionLevel, errorCorrectionLevel$1.M);\r\n        if (C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_qrcode_node_modules_isarray(data)) {\r\n            if (data.length > 1) {\r\n                return getBestVersionForMixedData(data, ecl);\r\n            }\r\n            if (data.length === 0) {\r\n                return 1;\r\n            }\r\n            seg = data[0];\r\n        }\r\n        else {\r\n            seg = data;\r\n        }\r\n        return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);\r\n    };\r\n    /**\r\n     * Returns version information with relative error correction bits\r\n     *\r\n     * The version information is included in QR Code symbols of version 7 or larger.\r\n     * It consists of an 18-bit sequence containing 6 data bits,\r\n     * with 12 error correction bits calculated using the (18, 6) Golay code.\r\n     *\r\n     * @param  {Number} version QR Code version\r\n     * @return {Number}         Encoded version info bits\r\n     */\r\n    exports.getEncodedBits = function getEncodedBits(version) {\r\n        if (!versionCheck.isValid(version) || version < 7) {\r\n            throw new Error('Invalid QR Code version');\r\n        }\r\n        var d = version << 12;\r\n        while (utils.getBCHDigit(d) - G18_BCH >= 0) {\r\n            d ^= (G18 << (utils.getBCHDigit(d) - G18_BCH));\r\n        }\r\n        return (version << 12) | d;\r\n    };\r\n});\r\nvar G15$1 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\r\nvar G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\r\nvar G15_BCH$1 = utils.getBCHDigit(G15$1);\r\n/**\r\n * Returns format information with relative error correction bits\r\n *\r\n * The format information is a 15-bit sequence containing 5 data bits,\r\n * with 10 error correction bits calculated using the (15, 5) BCH code.\r\n *\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @param  {Number} mask                 Mask pattern\r\n * @return {Number}                      Encoded format information bits\r\n */\r\nvar getEncodedBits = function getEncodedBits(errorCorrectionLevel, mask) {\r\n    var data = ((errorCorrectionLevel.bit << 3) | mask);\r\n    var d = data << 10;\r\n    while (utils.getBCHDigit(d) - G15_BCH$1 >= 0) {\r\n        d ^= (G15$1 << (utils.getBCHDigit(d) - G15_BCH$1));\r\n    }\r\n    // xor final data with mask pattern in order to ensure that\r\n    // no combination of Error Correction Level and data mask pattern\r\n    // will result in an all-zero data string\r\n    return ((data << 10) | d) ^ G15_MASK;\r\n};\r\nvar formatInfo = {\r\n    getEncodedBits: getEncodedBits\r\n};\r\nvar segments$1 = createCommonjsModule(function (module, exports) {\r\n    /**\r\n     * Returns UTF8 byte length\r\n     *\r\n     * @param  {String} str Input string\r\n     * @return {Number}     Number of byte\r\n     */\r\n    function getStringByteLength(str) {\r\n        return unescape(encodeURIComponent(str)).length;\r\n    }\r\n    /**\r\n     * Get a list of segments of the specified mode\r\n     * from a string\r\n     *\r\n     * @param  {Mode}   mode Segment mode\r\n     * @param  {String} str  String to process\r\n     * @return {Array}       Array of object with segments data\r\n     */\r\n    function getSegments(regex, mode, str) {\r\n        var segments = [];\r\n        var result;\r\n        while ((result = regex.exec(str)) !== null) {\r\n            segments.push({\r\n                data: result[0],\r\n                index: result.index,\r\n                mode: mode,\r\n                length: result[0].length\r\n            });\r\n        }\r\n        return segments;\r\n    }\r\n    /**\r\n     * Extracts a series of segments with the appropriate\r\n     * modes from a string\r\n     *\r\n     * @param  {String} dataStr Input string\r\n     * @return {Array}          Array of object with segments data\r\n     */\r\n    function getSegmentsFromString(dataStr) {\r\n        var numSegs = getSegments(regex.NUMERIC, mode$1.NUMERIC, dataStr);\r\n        var alphaNumSegs = getSegments(regex.ALPHANUMERIC, mode$1.ALPHANUMERIC, dataStr);\r\n        var byteSegs;\r\n        var kanjiSegs;\r\n        if (utils.isKanjiModeEnabled()) {\r\n            byteSegs = getSegments(regex.BYTE, mode$1.BYTE, dataStr);\r\n            kanjiSegs = getSegments(regex.KANJI, mode$1.KANJI, dataStr);\r\n        }\r\n        else {\r\n            byteSegs = getSegments(regex.BYTE_KANJI, mode$1.BYTE, dataStr);\r\n            kanjiSegs = [];\r\n        }\r\n        var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);\r\n        return segs\r\n            .sort(function (s1, s2) {\r\n            return s1.index - s2.index;\r\n        })\r\n            .map(function (obj) {\r\n            return {\r\n                data: obj.data,\r\n                mode: obj.mode,\r\n                length: obj.length\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Returns how many bits are needed to encode a string of\r\n     * specified length with the specified mode\r\n     *\r\n     * @param  {Number} length String length\r\n     * @param  {Mode} mode     Segment mode\r\n     * @return {Number}        Bit length\r\n     */\r\n    function getSegmentBitsLength(length, mode) {\r\n        switch (mode) {\r\n            case mode$1.NUMERIC:\r\n                return numericData.getBitsLength(length);\r\n            case mode$1.ALPHANUMERIC:\r\n                return alphanumericData.getBitsLength(length);\r\n            case mode$1.KANJI:\r\n                return kanjiData.getBitsLength(length);\r\n            case mode$1.BYTE:\r\n                return byteData.getBitsLength(length);\r\n        }\r\n    }\r\n    /**\r\n     * Merges adjacent segments which have the same mode\r\n     *\r\n     * @param  {Array} segs Array of object with segments data\r\n     * @return {Array}      Array of object with segments data\r\n     */\r\n    function mergeSegments(segs) {\r\n        return segs.reduce(function (acc, curr) {\r\n            var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;\r\n            if (prevSeg && prevSeg.mode === curr.mode) {\r\n                acc[acc.length - 1].data += curr.data;\r\n                return acc;\r\n            }\r\n            acc.push(curr);\r\n            return acc;\r\n        }, []);\r\n    }\r\n    /**\r\n     * Generates a list of all possible nodes combination which\r\n     * will be used to build a segments graph.\r\n     *\r\n     * Nodes are divided by groups. Each group will contain a list of all the modes\r\n     * in which is possible to encode the given text.\r\n     *\r\n     * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\r\n     * The group for '12345' will contain then 3 objects, one for each\r\n     * possible encoding mode.\r\n     *\r\n     * Each node represents a possible segment.\r\n     *\r\n     * @param  {Array} segs Array of object with segments data\r\n     * @return {Array}      Array of object with segments data\r\n     */\r\n    function buildNodes(segs) {\r\n        var nodes = [];\r\n        for (var i = 0; i < segs.length; i++) {\r\n            var seg = segs[i];\r\n            switch (seg.mode) {\r\n                case mode$1.NUMERIC:\r\n                    nodes.push([seg,\r\n                        { data: seg.data, mode: mode$1.ALPHANUMERIC, length: seg.length },\r\n                        { data: seg.data, mode: mode$1.BYTE, length: seg.length }\r\n                    ]);\r\n                    break;\r\n                case mode$1.ALPHANUMERIC:\r\n                    nodes.push([seg,\r\n                        { data: seg.data, mode: mode$1.BYTE, length: seg.length }\r\n                    ]);\r\n                    break;\r\n                case mode$1.KANJI:\r\n                    nodes.push([seg,\r\n                        { data: seg.data, mode: mode$1.BYTE, length: getStringByteLength(seg.data) }\r\n                    ]);\r\n                    break;\r\n                case mode$1.BYTE:\r\n                    nodes.push([\r\n                        { data: seg.data, mode: mode$1.BYTE, length: getStringByteLength(seg.data) }\r\n                    ]);\r\n            }\r\n        }\r\n        return nodes;\r\n    }\r\n    /**\r\n     * Builds a graph from a list of nodes.\r\n     * All segments in each node group will be connected with all the segments of\r\n     * the next group and so on.\r\n     *\r\n     * At each connection will be assigned a weight depending on the\r\n     * segment's byte length.\r\n     *\r\n     * @param  {Array} nodes    Array of object with segments data\r\n     * @param  {Number} version QR Code version\r\n     * @return {Object}         Graph of all possible segments\r\n     */\r\n    function buildGraph(nodes, version) {\r\n        var table = {};\r\n        var graph = { 'start': {} };\r\n        var prevNodeIds = ['start'];\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var nodeGroup = nodes[i];\r\n            var currentNodeIds = [];\r\n            for (var j = 0; j < nodeGroup.length; j++) {\r\n                var node = nodeGroup[j];\r\n                var key = '' + i + j;\r\n                currentNodeIds.push(key);\r\n                table[key] = { node: node, lastCount: 0 };\r\n                graph[key] = {};\r\n                for (var n = 0; n < prevNodeIds.length; n++) {\r\n                    var prevNodeId = prevNodeIds[n];\r\n                    if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\r\n                        graph[prevNodeId][key] =\r\n                            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\r\n                                getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);\r\n                        table[prevNodeId].lastCount += node.length;\r\n                    }\r\n                    else {\r\n                        if (table[prevNodeId])\r\n                            table[prevNodeId].lastCount = node.length;\r\n                        graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\r\n                            4 + mode$1.getCharCountIndicator(node.mode, version); // switch cost\r\n                    }\r\n                }\r\n            }\r\n            prevNodeIds = currentNodeIds;\r\n        }\r\n        for (n = 0; n < prevNodeIds.length; n++) {\r\n            graph[prevNodeIds[n]]['end'] = 0;\r\n        }\r\n        return { map: graph, table: table };\r\n    }\r\n    /**\r\n     * Builds a segment from a specified data and mode.\r\n     * If a mode is not specified, the more suitable will be used.\r\n     *\r\n     * @param  {String} data             Input data\r\n     * @param  {Mode | String} modesHint Data mode\r\n     * @return {Segment}                 Segment\r\n     */\r\n    function buildSingleSegment(data, modesHint) {\r\n        var mode;\r\n        var bestMode = mode$1.getBestModeForData(data);\r\n        mode = mode$1.from(modesHint, bestMode);\r\n        // Make sure data can be encoded\r\n        if (mode !== mode$1.BYTE && mode.bit < bestMode.bit) {\r\n            throw new Error('\"' + data + '\"' +\r\n                ' cannot be encoded with mode ' + mode$1.toString(mode) +\r\n                '.\\n Suggested mode is: ' + mode$1.toString(bestMode));\r\n        }\r\n        // Use Mode.BYTE if Kanji support is disabled\r\n        if (mode === mode$1.KANJI && !utils.isKanjiModeEnabled()) {\r\n            mode = mode$1.BYTE;\r\n        }\r\n        switch (mode) {\r\n            case mode$1.NUMERIC:\r\n                return new numericData(data);\r\n            case mode$1.ALPHANUMERIC:\r\n                return new alphanumericData(data);\r\n            case mode$1.KANJI:\r\n                return new kanjiData(data);\r\n            case mode$1.BYTE:\r\n                return new byteData(data);\r\n        }\r\n    }\r\n    /**\r\n     * Builds a list of segments from an array.\r\n     * Array can contain Strings or Objects with segment's info.\r\n     *\r\n     * For each item which is a string, will be generated a segment with the given\r\n     * string and the more appropriate encoding mode.\r\n     *\r\n     * For each item which is an object, will be generated a segment with the given\r\n     * data and mode.\r\n     * Objects must contain at least the property \"data\".\r\n     * If property \"mode\" is not present, the more suitable mode will be used.\r\n     *\r\n     * @param  {Array} array Array of objects with segments data\r\n     * @return {Array}       Array of Segments\r\n     */\r\n    exports.fromArray = function fromArray(array) {\r\n        return array.reduce(function (acc, seg) {\r\n            if (typeof seg === 'string') {\r\n                acc.push(buildSingleSegment(seg, null));\r\n            }\r\n            else if (seg.data) {\r\n                acc.push(buildSingleSegment(seg.data, seg.mode));\r\n            }\r\n            return acc;\r\n        }, []);\r\n    };\r\n    /**\r\n     * Builds an optimized sequence of segments from a string,\r\n     * which will produce the shortest possible bitstream.\r\n     *\r\n     * @param  {String} data    Input string\r\n     * @param  {Number} version QR Code version\r\n     * @return {Array}          Array of segments\r\n     */\r\n    exports.fromString = function fromString(data, version) {\r\n        var segs = getSegmentsFromString(data, utils.isKanjiModeEnabled());\r\n        var nodes = buildNodes(segs);\r\n        var graph = buildGraph(nodes, version);\r\n        var path = dijkstra_1$1.find_path(graph.map, 'start', 'end');\r\n        var optimizedSegs = [];\r\n        for (var i = 1; i < path.length - 1; i++) {\r\n            optimizedSegs.push(graph.table[path[i]].node);\r\n        }\r\n        return exports.fromArray(mergeSegments(optimizedSegs));\r\n    };\r\n    /**\r\n     * Splits a string in various segments with the modes which\r\n     * best represent their content.\r\n     * The produced segments are far from being optimized.\r\n     * The output of this function is only used to estimate a QR Code version\r\n     * which may contain the data.\r\n     *\r\n     * @param  {string} data Input string\r\n     * @return {Array}       Array of segments\r\n     */\r\n    exports.rawSplit = function rawSplit(data) {\r\n        return exports.fromArray(getSegmentsFromString(data, utils.isKanjiModeEnabled()));\r\n    };\r\n});\r\nvar chunkstream = createCommonjsModule(function (module) {\r\n    var ChunkStream = module.exports = function () {\r\n        stream.call(this);\r\n        this._buffers = [];\r\n        this._buffered = 0;\r\n        this._reads = [];\r\n        this._paused = false;\r\n        this._encoding = 'utf8';\r\n        this.writable = true;\r\n    };\r\n    util.inherits(ChunkStream, stream);\r\n    ChunkStream.prototype.read = function (length, callback) {\r\n        this._reads.push({\r\n            length: Math.abs(length),\r\n            allowLess: length < 0,\r\n            func: callback\r\n        });\r\n        process.nextTick(function () {\r\n            this._process();\r\n            // its paused and there is not enought data then ask for more\r\n            if (this._paused && this._reads.length > 0) {\r\n                this._paused = false;\r\n                this.emit('drain');\r\n            }\r\n        }.bind(this));\r\n    };\r\n    ChunkStream.prototype.write = function (data, encoding) {\r\n        if (!this.writable) {\r\n            this.emit('error', new Error('Stream not writable'));\r\n            return false;\r\n        }\r\n        var dataBuffer;\r\n        if (Buffer.isBuffer(data)) {\r\n            dataBuffer = data;\r\n        }\r\n        else {\r\n            dataBuffer = new Buffer(data, encoding || this._encoding);\r\n        }\r\n        this._buffers.push(dataBuffer);\r\n        this._buffered += dataBuffer.length;\r\n        this._process();\r\n        // ok if there are no more read requests\r\n        if (this._reads && this._reads.length === 0) {\r\n            this._paused = true;\r\n        }\r\n        return this.writable && !this._paused;\r\n    };\r\n    ChunkStream.prototype.end = function (data, encoding) {\r\n        if (data) {\r\n            this.write(data, encoding);\r\n        }\r\n        this.writable = false;\r\n        // already destroyed\r\n        if (!this._buffers) {\r\n            return;\r\n        }\r\n        // enqueue or handle end\r\n        if (this._buffers.length === 0) {\r\n            this._end();\r\n        }\r\n        else {\r\n            this._buffers.push(null);\r\n            this._process();\r\n        }\r\n    };\r\n    ChunkStream.prototype.destroySoon = ChunkStream.prototype.end;\r\n    ChunkStream.prototype._end = function () {\r\n        if (this._reads.length > 0) {\r\n            this.emit('error', new Error('Unexpected end of input'));\r\n        }\r\n        this.destroy();\r\n    };\r\n    ChunkStream.prototype.destroy = function () {\r\n        if (!this._buffers) {\r\n            return;\r\n        }\r\n        this.writable = false;\r\n        this._reads = null;\r\n        this._buffers = null;\r\n        this.emit('close');\r\n    };\r\n    ChunkStream.prototype._processReadAllowingLess = function (read) {\r\n        // ok there is any data so that we can satisfy this request\r\n        this._reads.shift(); // == read\r\n        // first we need to peek into first buffer\r\n        var smallerBuf = this._buffers[0];\r\n        // ok there is more data than we need\r\n        if (smallerBuf.length > read.length) {\r\n            this._buffered -= read.length;\r\n            this._buffers[0] = smallerBuf.slice(read.length);\r\n            read.func.call(this, smallerBuf.slice(0, read.length));\r\n        }\r\n        else {\r\n            // ok this is less than maximum length so use it all\r\n            this._buffered -= smallerBuf.length;\r\n            this._buffers.shift(); // == smallerBuf\r\n            read.func.call(this, smallerBuf);\r\n        }\r\n    };\r\n    ChunkStream.prototype._processRead = function (read) {\r\n        this._reads.shift(); // == read\r\n        var pos = 0;\r\n        var count = 0;\r\n        var data = new Buffer(read.length);\r\n        // create buffer for all data\r\n        while (pos < read.length) {\r\n            var buf = this._buffers[count++];\r\n            var len = Math.min(buf.length, read.length - pos);\r\n            buf.copy(data, pos, 0, len);\r\n            pos += len;\r\n            // last buffer wasn't used all so just slice it and leave\r\n            if (len !== buf.length) {\r\n                this._buffers[--count] = buf.slice(len);\r\n            }\r\n        }\r\n        // remove all used buffers\r\n        if (count > 0) {\r\n            this._buffers.splice(0, count);\r\n        }\r\n        this._buffered -= read.length;\r\n        read.func.call(this, data);\r\n    };\r\n    ChunkStream.prototype._process = function () {\r\n        try {\r\n            // as long as there is any data and read requests\r\n            while (this._buffered > 0 && this._reads && this._reads.length > 0) {\r\n                var read = this._reads[0];\r\n                // read any data (but no more than length)\r\n                if (read.allowLess) {\r\n                    this._processReadAllowingLess(read);\r\n                }\r\n                else if (this._buffered >= read.length) {\r\n                    // ok we can meet some expectations\r\n                    this._processRead(read);\r\n                }\r\n                else {\r\n                    // not enought data to satisfy first request in queue\r\n                    // so we need to wait for more\r\n                    break;\r\n                }\r\n            }\r\n            if (this._buffers && !this.writable) {\r\n                this._end();\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.emit('error', ex);\r\n        }\r\n    };\r\n});\r\n// Adam 7\r\n//   0 1 2 3 4 5 6 7\r\n// 0 x 6 4 6 x 6 4 6\r\n// 1 7 7 7 7 7 7 7 7\r\n// 2 5 6 5 6 5 6 5 6\r\n// 3 7 7 7 7 7 7 7 7\r\n// 4 3 6 4 6 3 6 4 6\r\n// 5 7 7 7 7 7 7 7 7\r\n// 6 5 6 5 6 5 6 5 6\r\n// 7 7 7 7 7 7 7 7 7\r\nvar imagePasses = [\r\n    {\r\n        x: [0],\r\n        y: [0]\r\n    },\r\n    {\r\n        x: [4],\r\n        y: [0]\r\n    },\r\n    {\r\n        x: [0, 4],\r\n        y: [4]\r\n    },\r\n    {\r\n        x: [2, 6],\r\n        y: [0, 4]\r\n    },\r\n    {\r\n        x: [0, 2, 4, 6],\r\n        y: [2, 6]\r\n    },\r\n    {\r\n        x: [1, 3, 5, 7],\r\n        y: [0, 2, 4, 6]\r\n    },\r\n    {\r\n        x: [0, 1, 2, 3, 4, 5, 6, 7],\r\n        y: [1, 3, 5, 7]\r\n    }\r\n];\r\nvar getImagePasses = function (width, height) {\r\n    var images = [];\r\n    var xLeftOver = width % 8;\r\n    var yLeftOver = height % 8;\r\n    var xRepeats = (width - xLeftOver) / 8;\r\n    var yRepeats = (height - yLeftOver) / 8;\r\n    for (var i = 0; i < imagePasses.length; i++) {\r\n        var pass = imagePasses[i];\r\n        var passWidth = xRepeats * pass.x.length;\r\n        var passHeight = yRepeats * pass.y.length;\r\n        for (var j = 0; j < pass.x.length; j++) {\r\n            if (pass.x[j] < xLeftOver) {\r\n                passWidth++;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        for (j = 0; j < pass.y.length; j++) {\r\n            if (pass.y[j] < yLeftOver) {\r\n                passHeight++;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        if (passWidth > 0 && passHeight > 0) {\r\n            images.push({ width: passWidth, height: passHeight, index: i });\r\n        }\r\n    }\r\n    return images;\r\n};\r\nvar getInterlaceIterator = function (width) {\r\n    return function (x, y, pass) {\r\n        var outerXLeftOver = x % imagePasses[pass].x.length;\r\n        var outerX = (((x - outerXLeftOver) / imagePasses[pass].x.length) * 8) + imagePasses[pass].x[outerXLeftOver];\r\n        var outerYLeftOver = y % imagePasses[pass].y.length;\r\n        var outerY = (((y - outerYLeftOver) / imagePasses[pass].y.length) * 8) + imagePasses[pass].y[outerYLeftOver];\r\n        return (outerX * 4) + (outerY * width * 4);\r\n    };\r\n};\r\nvar interlace = {\r\n    getImagePasses: getImagePasses,\r\n    getInterlaceIterator: getInterlaceIterator\r\n};\r\nvar paethPredictor = function paethPredictor(left, above, upLeft) {\r\n    var paeth = left + above - upLeft;\r\n    var pLeft = Math.abs(paeth - left);\r\n    var pAbove = Math.abs(paeth - above);\r\n    var pUpLeft = Math.abs(paeth - upLeft);\r\n    if (pLeft <= pAbove && pLeft <= pUpLeft) {\r\n        return left;\r\n    }\r\n    if (pAbove <= pUpLeft) {\r\n        return above;\r\n    }\r\n    return upLeft;\r\n};\r\nvar filterParse = createCommonjsModule(function (module) {\r\n    function getByteWidth(width, bpp, depth) {\r\n        var byteWidth = width * bpp;\r\n        if (depth !== 8) {\r\n            byteWidth = Math.ceil(byteWidth / (8 / depth));\r\n        }\r\n        return byteWidth;\r\n    }\r\n    var Filter = module.exports = function (bitmapInfo, dependencies) {\r\n        var width = bitmapInfo.width;\r\n        var height = bitmapInfo.height;\r\n        var interlace$1 = bitmapInfo.interlace;\r\n        var bpp = bitmapInfo.bpp;\r\n        var depth = bitmapInfo.depth;\r\n        this.read = dependencies.read;\r\n        this.write = dependencies.write;\r\n        this.complete = dependencies.complete;\r\n        this._imageIndex = 0;\r\n        this._images = [];\r\n        if (interlace$1) {\r\n            var passes = interlace.getImagePasses(width, height);\r\n            for (var i = 0; i < passes.length; i++) {\r\n                this._images.push({\r\n                    byteWidth: getByteWidth(passes[i].width, bpp, depth),\r\n                    height: passes[i].height,\r\n                    lineIndex: 0\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this._images.push({\r\n                byteWidth: getByteWidth(width, bpp, depth),\r\n                height: height,\r\n                lineIndex: 0\r\n            });\r\n        }\r\n        // when filtering the line we look at the pixel to the left\r\n        // the spec also says it is done on a byte level regardless of the number of pixels\r\n        // so if the depth is byte compatible (8 or 16) we subtract the bpp in order to compare back\r\n        // a pixel rather than just a different byte part. However if we are sub byte, we ignore.\r\n        if (depth === 8) {\r\n            this._xComparison = bpp;\r\n        }\r\n        else if (depth === 16) {\r\n            this._xComparison = bpp * 2;\r\n        }\r\n        else {\r\n            this._xComparison = 1;\r\n        }\r\n    };\r\n    Filter.prototype.start = function () {\r\n        this.read(this._images[this._imageIndex].byteWidth + 1, this._reverseFilterLine.bind(this));\r\n    };\r\n    Filter.prototype._unFilterType1 = function (rawData, unfilteredLine, byteWidth) {\r\n        var xComparison = this._xComparison;\r\n        var xBiggerThan = xComparison - 1;\r\n        for (var x = 0; x < byteWidth; x++) {\r\n            var rawByte = rawData[1 + x];\r\n            var f1Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\r\n            unfilteredLine[x] = rawByte + f1Left;\r\n        }\r\n    };\r\n    Filter.prototype._unFilterType2 = function (rawData, unfilteredLine, byteWidth) {\r\n        var lastLine = this._lastLine;\r\n        for (var x = 0; x < byteWidth; x++) {\r\n            var rawByte = rawData[1 + x];\r\n            var f2Up = lastLine ? lastLine[x] : 0;\r\n            unfilteredLine[x] = rawByte + f2Up;\r\n        }\r\n    };\r\n    Filter.prototype._unFilterType3 = function (rawData, unfilteredLine, byteWidth) {\r\n        var xComparison = this._xComparison;\r\n        var xBiggerThan = xComparison - 1;\r\n        var lastLine = this._lastLine;\r\n        for (var x = 0; x < byteWidth; x++) {\r\n            var rawByte = rawData[1 + x];\r\n            var f3Up = lastLine ? lastLine[x] : 0;\r\n            var f3Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\r\n            var f3Add = Math.floor((f3Left + f3Up) / 2);\r\n            unfilteredLine[x] = rawByte + f3Add;\r\n        }\r\n    };\r\n    Filter.prototype._unFilterType4 = function (rawData, unfilteredLine, byteWidth) {\r\n        var xComparison = this._xComparison;\r\n        var xBiggerThan = xComparison - 1;\r\n        var lastLine = this._lastLine;\r\n        for (var x = 0; x < byteWidth; x++) {\r\n            var rawByte = rawData[1 + x];\r\n            var f4Up = lastLine ? lastLine[x] : 0;\r\n            var f4Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\r\n            var f4UpLeft = x > xBiggerThan && lastLine ? lastLine[x - xComparison] : 0;\r\n            var f4Add = paethPredictor(f4Left, f4Up, f4UpLeft);\r\n            unfilteredLine[x] = rawByte + f4Add;\r\n        }\r\n    };\r\n    Filter.prototype._reverseFilterLine = function (rawData) {\r\n        var filter = rawData[0];\r\n        var unfilteredLine;\r\n        var currentImage = this._images[this._imageIndex];\r\n        var byteWidth = currentImage.byteWidth;\r\n        if (filter === 0) {\r\n            unfilteredLine = rawData.slice(1, byteWidth + 1);\r\n        }\r\n        else {\r\n            unfilteredLine = new Buffer(byteWidth);\r\n            switch (filter) {\r\n                case 1:\r\n                    this._unFilterType1(rawData, unfilteredLine, byteWidth);\r\n                    break;\r\n                case 2:\r\n                    this._unFilterType2(rawData, unfilteredLine, byteWidth);\r\n                    break;\r\n                case 3:\r\n                    this._unFilterType3(rawData, unfilteredLine, byteWidth);\r\n                    break;\r\n                case 4:\r\n                    this._unFilterType4(rawData, unfilteredLine, byteWidth);\r\n                    break;\r\n                default:\r\n                    throw new Error('Unrecognised filter type - ' + filter);\r\n            }\r\n        }\r\n        this.write(unfilteredLine);\r\n        currentImage.lineIndex++;\r\n        if (currentImage.lineIndex >= currentImage.height) {\r\n            this._lastLine = null;\r\n            this._imageIndex++;\r\n            currentImage = this._images[this._imageIndex];\r\n        }\r\n        else {\r\n            this._lastLine = unfilteredLine;\r\n        }\r\n        if (currentImage) {\r\n            // read, using the byte width that may be from the new current image\r\n            this.read(currentImage.byteWidth + 1, this._reverseFilterLine.bind(this));\r\n        }\r\n        else {\r\n            this._lastLine = null;\r\n            this.complete();\r\n        }\r\n    };\r\n});\r\nvar chunkstream$1 = createCommonjsModule(function (module) {\r\n    var ChunkStream = module.exports = function () {\r\n        stream.call(this);\r\n        this._buffers = [];\r\n        this._buffered = 0;\r\n        this._reads = [];\r\n        this._paused = false;\r\n        this._encoding = 'utf8';\r\n        this.writable = true;\r\n    };\r\n    util.inherits(ChunkStream, stream);\r\n    ChunkStream.prototype.read = function (length, callback) {\r\n        this._reads.push({\r\n            length: Math.abs(length),\r\n            allowLess: length < 0,\r\n            func: callback\r\n        });\r\n        process.nextTick(function () {\r\n            this._process();\r\n            // its paused and there is not enought data then ask for more\r\n            if (this._paused && this._reads.length > 0) {\r\n                this._paused = false;\r\n                this.emit('drain');\r\n            }\r\n        }.bind(this));\r\n    };\r\n    ChunkStream.prototype.write = function (data, encoding) {\r\n        if (!this.writable) {\r\n            this.emit('error', new Error('Stream not writable'));\r\n            return false;\r\n        }\r\n        var dataBuffer;\r\n        if (Buffer.isBuffer(data)) {\r\n            dataBuffer = data;\r\n        }\r\n        else {\r\n            dataBuffer = new Buffer(data, encoding || this._encoding);\r\n        }\r\n        this._buffers.push(dataBuffer);\r\n        this._buffered += dataBuffer.length;\r\n        this._process();\r\n        // ok if there are no more read requests\r\n        if (this._reads && this._reads.length === 0) {\r\n            this._paused = true;\r\n        }\r\n        return this.writable && !this._paused;\r\n    };\r\n    ChunkStream.prototype.end = function (data, encoding) {\r\n        if (data) {\r\n            this.write(data, encoding);\r\n        }\r\n        this.writable = false;\r\n        // already destroyed\r\n        if (!this._buffers) {\r\n            return;\r\n        }\r\n        // enqueue or handle end\r\n        if (this._buffers.length === 0) {\r\n            this._end();\r\n        }\r\n        else {\r\n            this._buffers.push(null);\r\n            this._process();\r\n        }\r\n    };\r\n    ChunkStream.prototype.destroySoon = ChunkStream.prototype.end;\r\n    ChunkStream.prototype._end = function () {\r\n        if (this._reads.length > 0) {\r\n            this.emit('error', new Error('Unexpected end of input'));\r\n        }\r\n        this.destroy();\r\n    };\r\n    ChunkStream.prototype.destroy = function () {\r\n        if (!this._buffers) {\r\n            return;\r\n        }\r\n        this.writable = false;\r\n        this._reads = null;\r\n        this._buffers = null;\r\n        this.emit('close');\r\n    };\r\n    ChunkStream.prototype._processReadAllowingLess = function (read) {\r\n        // ok there is any data so that we can satisfy this request\r\n        this._reads.shift(); // == read\r\n        // first we need to peek into first buffer\r\n        var smallerBuf = this._buffers[0];\r\n        // ok there is more data than we need\r\n        if (smallerBuf.length > read.length) {\r\n            this._buffered -= read.length;\r\n            this._buffers[0] = smallerBuf.slice(read.length);\r\n            read.func.call(this, smallerBuf.slice(0, read.length));\r\n        }\r\n        else {\r\n            // ok this is less than maximum length so use it all\r\n            this._buffered -= smallerBuf.length;\r\n            this._buffers.shift(); // == smallerBuf\r\n            read.func.call(this, smallerBuf);\r\n        }\r\n    };\r\n    ChunkStream.prototype._processRead = function (read) {\r\n        this._reads.shift(); // == read\r\n        var pos = 0;\r\n        var count = 0;\r\n        var data = new Buffer(read.length);\r\n        // create buffer for all data\r\n        while (pos < read.length) {\r\n            var buf = this._buffers[count++];\r\n            var len = Math.min(buf.length, read.length - pos);\r\n            buf.copy(data, pos, 0, len);\r\n            pos += len;\r\n            // last buffer wasn't used all so just slice it and leave\r\n            if (len !== buf.length) {\r\n                this._buffers[--count] = buf.slice(len);\r\n            }\r\n        }\r\n        // remove all used buffers\r\n        if (count > 0) {\r\n            this._buffers.splice(0, count);\r\n        }\r\n        this._buffered -= read.length;\r\n        read.func.call(this, data);\r\n    };\r\n    ChunkStream.prototype._process = function () {\r\n        try {\r\n            // as long as there is any data and read requests\r\n            while (this._buffered > 0 && this._reads && this._reads.length > 0) {\r\n                var read = this._reads[0];\r\n                // read any data (but no more than length)\r\n                if (read.allowLess) {\r\n                    this._processReadAllowingLess(read);\r\n                }\r\n                else if (this._buffered >= read.length) {\r\n                    // ok we can meet some expectations\r\n                    this._processRead(read);\r\n                }\r\n                else {\r\n                    // not enought data to satisfy first request in queue\r\n                    // so we need to wait for more\r\n                    break;\r\n                }\r\n            }\r\n            if (this._buffers && !this.writable) {\r\n                this._end();\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.emit('error', ex);\r\n        }\r\n    };\r\n});\r\nvar filterParse$1 = createCommonjsModule(function (module) {\r\n    function getByteWidth(width, bpp, depth) {\r\n        var byteWidth = width * bpp;\r\n        if (depth !== 8) {\r\n            byteWidth = Math.ceil(byteWidth / (8 / depth));\r\n        }\r\n        return byteWidth;\r\n    }\r\n    var Filter = module.exports = function (bitmapInfo, dependencies) {\r\n        var width = bitmapInfo.width;\r\n        var height = bitmapInfo.height;\r\n        var interlace$1 = bitmapInfo.interlace;\r\n        var bpp = bitmapInfo.bpp;\r\n        var depth = bitmapInfo.depth;\r\n        this.read = dependencies.read;\r\n        this.write = dependencies.write;\r\n        this.complete = dependencies.complete;\r\n        this._imageIndex = 0;\r\n        this._images = [];\r\n        if (interlace$1) {\r\n            var passes = interlace.getImagePasses(width, height);\r\n            for (var i = 0; i < passes.length; i++) {\r\n                this._images.push({\r\n                    byteWidth: getByteWidth(passes[i].width, bpp, depth),\r\n                    height: passes[i].height,\r\n                    lineIndex: 0\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this._images.push({\r\n                byteWidth: getByteWidth(width, bpp, depth),\r\n                height: height,\r\n                lineIndex: 0\r\n            });\r\n        }\r\n        // when filtering the line we look at the pixel to the left\r\n        // the spec also says it is done on a byte level regardless of the number of pixels\r\n        // so if the depth is byte compatible (8 or 16) we subtract the bpp in order to compare back\r\n        // a pixel rather than just a different byte part. However if we are sub byte, we ignore.\r\n        if (depth === 8) {\r\n            this._xComparison = bpp;\r\n        }\r\n        else if (depth === 16) {\r\n            this._xComparison = bpp * 2;\r\n        }\r\n        else {\r\n            this._xComparison = 1;\r\n        }\r\n    };\r\n    Filter.prototype.start = function () {\r\n        this.read(this._images[this._imageIndex].byteWidth + 1, this._reverseFilterLine.bind(this));\r\n    };\r\n    Filter.prototype._unFilterType1 = function (rawData, unfilteredLine, byteWidth) {\r\n        var xComparison = this._xComparison;\r\n        var xBiggerThan = xComparison - 1;\r\n        for (var x = 0; x < byteWidth; x++) {\r\n            var rawByte = rawData[1 + x];\r\n            var f1Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\r\n            unfilteredLine[x] = rawByte + f1Left;\r\n        }\r\n    };\r\n    Filter.prototype._unFilterType2 = function (rawData, unfilteredLine, byteWidth) {\r\n        var lastLine = this._lastLine;\r\n        for (var x = 0; x < byteWidth; x++) {\r\n            var rawByte = rawData[1 + x];\r\n            var f2Up = lastLine ? lastLine[x] : 0;\r\n            unfilteredLine[x] = rawByte + f2Up;\r\n        }\r\n    };\r\n    Filter.prototype._unFilterType3 = function (rawData, unfilteredLine, byteWidth) {\r\n        var xComparison = this._xComparison;\r\n        var xBiggerThan = xComparison - 1;\r\n        var lastLine = this._lastLine;\r\n        for (var x = 0; x < byteWidth; x++) {\r\n            var rawByte = rawData[1 + x];\r\n            var f3Up = lastLine ? lastLine[x] : 0;\r\n            var f3Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\r\n            var f3Add = Math.floor((f3Left + f3Up) / 2);\r\n            unfilteredLine[x] = rawByte + f3Add;\r\n        }\r\n    };\r\n    Filter.prototype._unFilterType4 = function (rawData, unfilteredLine, byteWidth) {\r\n        var xComparison = this._xComparison;\r\n        var xBiggerThan = xComparison - 1;\r\n        var lastLine = this._lastLine;\r\n        for (var x = 0; x < byteWidth; x++) {\r\n            var rawByte = rawData[1 + x];\r\n            var f4Up = lastLine ? lastLine[x] : 0;\r\n            var f4Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\r\n            var f4UpLeft = x > xBiggerThan && lastLine ? lastLine[x - xComparison] : 0;\r\n            var f4Add = paethPredictor(f4Left, f4Up, f4UpLeft);\r\n            unfilteredLine[x] = rawByte + f4Add;\r\n        }\r\n    };\r\n    Filter.prototype._reverseFilterLine = function (rawData) {\r\n        var filter = rawData[0];\r\n        var unfilteredLine;\r\n        var currentImage = this._images[this._imageIndex];\r\n        var byteWidth = currentImage.byteWidth;\r\n        if (filter === 0) {\r\n            unfilteredLine = rawData.slice(1, byteWidth + 1);\r\n        }\r\n        else {\r\n            unfilteredLine = new Buffer(byteWidth);\r\n            switch (filter) {\r\n                case 1:\r\n                    this._unFilterType1(rawData, unfilteredLine, byteWidth);\r\n                    break;\r\n                case 2:\r\n                    this._unFilterType2(rawData, unfilteredLine, byteWidth);\r\n                    break;\r\n                case 3:\r\n                    this._unFilterType3(rawData, unfilteredLine, byteWidth);\r\n                    break;\r\n                case 4:\r\n                    this._unFilterType4(rawData, unfilteredLine, byteWidth);\r\n                    break;\r\n                default:\r\n                    throw new Error('Unrecognised filter type - ' + filter);\r\n            }\r\n        }\r\n        this.write(unfilteredLine);\r\n        currentImage.lineIndex++;\r\n        if (currentImage.lineIndex >= currentImage.height) {\r\n            this._lastLine = null;\r\n            this._imageIndex++;\r\n            currentImage = this._images[this._imageIndex];\r\n        }\r\n        else {\r\n            this._lastLine = unfilteredLine;\r\n        }\r\n        if (currentImage) {\r\n            // read, using the byte width that may be from the new current image\r\n            this.read(currentImage.byteWidth + 1, this._reverseFilterLine.bind(this));\r\n        }\r\n        else {\r\n            this._lastLine = null;\r\n            this.complete();\r\n        }\r\n    };\r\n});\r\nvar filterParseAsync = createCommonjsModule(function (module) {\r\n    var FilterAsync = module.exports = function (bitmapInfo) {\r\n        chunkstream$1.call(this);\r\n        var buffers = [];\r\n        var that = this;\r\n        this._filter = new filterParse$1(bitmapInfo, {\r\n            read: this.read.bind(this),\r\n            write: function (buffer) {\r\n                buffers.push(buffer);\r\n            },\r\n            complete: function () {\r\n                that.emit('complete', Buffer.concat(buffers));\r\n            }\r\n        });\r\n        this._filter.start();\r\n    };\r\n    util.inherits(FilterAsync, chunkstream$1);\r\n});\r\nvar crc = createCommonjsModule(function (module) {\r\n    var crcTable = [];\r\n    (function () {\r\n        for (var i = 0; i < 256; i++) {\r\n            var currentCrc = i;\r\n            for (var j = 0; j < 8; j++) {\r\n                if (currentCrc & 1) {\r\n                    currentCrc = 0xedb88320 ^ (currentCrc >>> 1);\r\n                }\r\n                else {\r\n                    currentCrc = currentCrc >>> 1;\r\n                }\r\n            }\r\n            crcTable[i] = currentCrc;\r\n        }\r\n    }());\r\n    var CrcCalculator = module.exports = function () {\r\n        this._crc = -1;\r\n    };\r\n    CrcCalculator.prototype.write = function (data) {\r\n        for (var i = 0; i < data.length; i++) {\r\n            this._crc = crcTable[(this._crc ^ data[i]) & 0xff] ^ (this._crc >>> 8);\r\n        }\r\n        return true;\r\n    };\r\n    CrcCalculator.prototype.crc32 = function () {\r\n        return this._crc ^ -1;\r\n    };\r\n    CrcCalculator.crc32 = function (buf) {\r\n        var crc = -1;\r\n        for (var i = 0; i < buf.length; i++) {\r\n            crc = crcTable[(crc ^ buf[i]) & 0xff] ^ (crc >>> 8);\r\n        }\r\n        return crc ^ -1;\r\n    };\r\n});\r\nvar constants = {\r\n    PNG_SIGNATURE: [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a],\r\n    TYPE_IHDR: 0x49484452,\r\n    TYPE_IEND: 0x49454e44,\r\n    TYPE_IDAT: 0x49444154,\r\n    TYPE_PLTE: 0x504c5445,\r\n    TYPE_tRNS: 0x74524e53,\r\n    TYPE_gAMA: 0x67414d41,\r\n    // color-type bits\r\n    COLORTYPE_GRAYSCALE: 0,\r\n    COLORTYPE_PALETTE: 1,\r\n    COLORTYPE_COLOR: 2,\r\n    COLORTYPE_ALPHA: 4,\r\n    // color-type combinations\r\n    COLORTYPE_PALETTE_COLOR: 3,\r\n    COLORTYPE_COLOR_ALPHA: 6,\r\n    COLORTYPE_TO_BPP_MAP: {\r\n        0: 1,\r\n        2: 3,\r\n        3: 1,\r\n        4: 2,\r\n        6: 4\r\n    },\r\n    GAMMA_DIVISION: 100000\r\n};\r\nvar crc$1 = createCommonjsModule(function (module) {\r\n    var crcTable = [];\r\n    (function () {\r\n        for (var i = 0; i < 256; i++) {\r\n            var currentCrc = i;\r\n            for (var j = 0; j < 8; j++) {\r\n                if (currentCrc & 1) {\r\n                    currentCrc = 0xedb88320 ^ (currentCrc >>> 1);\r\n                }\r\n                else {\r\n                    currentCrc = currentCrc >>> 1;\r\n                }\r\n            }\r\n            crcTable[i] = currentCrc;\r\n        }\r\n    }());\r\n    var CrcCalculator = module.exports = function () {\r\n        this._crc = -1;\r\n    };\r\n    CrcCalculator.prototype.write = function (data) {\r\n        for (var i = 0; i < data.length; i++) {\r\n            this._crc = crcTable[(this._crc ^ data[i]) & 0xff] ^ (this._crc >>> 8);\r\n        }\r\n        return true;\r\n    };\r\n    CrcCalculator.prototype.crc32 = function () {\r\n        return this._crc ^ -1;\r\n    };\r\n    CrcCalculator.crc32 = function (buf) {\r\n        var crc = -1;\r\n        for (var i = 0; i < buf.length; i++) {\r\n            crc = crcTable[(crc ^ buf[i]) & 0xff] ^ (crc >>> 8);\r\n        }\r\n        return crc ^ -1;\r\n    };\r\n});\r\nvar parser = createCommonjsModule(function (module) {\r\n    var Parser = module.exports = function (options, dependencies) {\r\n        this._options = options;\r\n        options.checkCRC = options.checkCRC !== false;\r\n        this._hasIHDR = false;\r\n        this._hasIEND = false;\r\n        this._emittedHeadersFinished = false;\r\n        // input flags/metadata\r\n        this._palette = [];\r\n        this._colorType = 0;\r\n        this._chunks = {};\r\n        this._chunks[constants.TYPE_IHDR] = this._handleIHDR.bind(this);\r\n        this._chunks[constants.TYPE_IEND] = this._handleIEND.bind(this);\r\n        this._chunks[constants.TYPE_IDAT] = this._handleIDAT.bind(this);\r\n        this._chunks[constants.TYPE_PLTE] = this._handlePLTE.bind(this);\r\n        this._chunks[constants.TYPE_tRNS] = this._handleTRNS.bind(this);\r\n        this._chunks[constants.TYPE_gAMA] = this._handleGAMA.bind(this);\r\n        this.read = dependencies.read;\r\n        this.error = dependencies.error;\r\n        this.metadata = dependencies.metadata;\r\n        this.gamma = dependencies.gamma;\r\n        this.transColor = dependencies.transColor;\r\n        this.palette = dependencies.palette;\r\n        this.parsed = dependencies.parsed;\r\n        this.inflateData = dependencies.inflateData;\r\n        this.finished = dependencies.finished;\r\n        this.simpleTransparency = dependencies.simpleTransparency;\r\n        this.headersFinished = dependencies.headersFinished || function () { };\r\n    };\r\n    Parser.prototype.start = function () {\r\n        this.read(constants.PNG_SIGNATURE.length, this._parseSignature.bind(this));\r\n    };\r\n    Parser.prototype._parseSignature = function (data) {\r\n        var signature = constants.PNG_SIGNATURE;\r\n        for (var i = 0; i < signature.length; i++) {\r\n            if (data[i] !== signature[i]) {\r\n                this.error(new Error('Invalid file signature'));\r\n                return;\r\n            }\r\n        }\r\n        this.read(8, this._parseChunkBegin.bind(this));\r\n    };\r\n    Parser.prototype._parseChunkBegin = function (data) {\r\n        // chunk content length\r\n        var length = data.readUInt32BE(0);\r\n        // chunk type\r\n        var type = data.readUInt32BE(4);\r\n        var name = '';\r\n        for (var i = 4; i < 8; i++) {\r\n            name += String.fromCharCode(data[i]);\r\n        }\r\n        //console.log('chunk ', name, length);\r\n        // chunk flags\r\n        var ancillary = Boolean(data[4] & 0x20); // or critical\r\n        //    priv = Boolean(data[5] & 0x20), // or public\r\n        //    safeToCopy = Boolean(data[7] & 0x20); // or unsafe\r\n        if (!this._hasIHDR && type !== constants.TYPE_IHDR) {\r\n            this.error(new Error('Expected IHDR on beggining'));\r\n            return;\r\n        }\r\n        this._crc = new crc$1();\r\n        this._crc.write(new Buffer(name));\r\n        if (this._chunks[type]) {\r\n            return this._chunks[type](length);\r\n        }\r\n        if (!ancillary) {\r\n            this.error(new Error('Unsupported critical chunk type ' + name));\r\n            return;\r\n        }\r\n        this.read(length + 4, this._skipChunk.bind(this));\r\n    };\r\n    Parser.prototype._skipChunk = function ( /*data*/) {\r\n        this.read(8, this._parseChunkBegin.bind(this));\r\n    };\r\n    Parser.prototype._handleChunkEnd = function () {\r\n        this.read(4, this._parseChunkEnd.bind(this));\r\n    };\r\n    Parser.prototype._parseChunkEnd = function (data) {\r\n        var fileCrc = data.readInt32BE(0);\r\n        var calcCrc = this._crc.crc32();\r\n        // check CRC\r\n        if (this._options.checkCRC && calcCrc !== fileCrc) {\r\n            this.error(new Error('Crc error - ' + fileCrc + ' - ' + calcCrc));\r\n            return;\r\n        }\r\n        if (!this._hasIEND) {\r\n            this.read(8, this._parseChunkBegin.bind(this));\r\n        }\r\n    };\r\n    Parser.prototype._handleIHDR = function (length) {\r\n        this.read(length, this._parseIHDR.bind(this));\r\n    };\r\n    Parser.prototype._parseIHDR = function (data) {\r\n        this._crc.write(data);\r\n        var width = data.readUInt32BE(0);\r\n        var height = data.readUInt32BE(4);\r\n        var depth = data[8];\r\n        var colorType = data[9]; // bits: 1 palette, 2 color, 4 alpha\r\n        var compr = data[10];\r\n        var filter = data[11];\r\n        var interlace = data[12];\r\n        // console.log('    width', width, 'height', height,\r\n        //     'depth', depth, 'colorType', colorType,\r\n        //     'compr', compr, 'filter', filter, 'interlace', interlace\r\n        // );\r\n        if (depth !== 8 && depth !== 4 && depth !== 2 && depth !== 1 && depth !== 16) {\r\n            this.error(new Error('Unsupported bit depth ' + depth));\r\n            return;\r\n        }\r\n        if (!(colorType in constants.COLORTYPE_TO_BPP_MAP)) {\r\n            this.error(new Error('Unsupported color type'));\r\n            return;\r\n        }\r\n        if (compr !== 0) {\r\n            this.error(new Error('Unsupported compression method'));\r\n            return;\r\n        }\r\n        if (filter !== 0) {\r\n            this.error(new Error('Unsupported filter method'));\r\n            return;\r\n        }\r\n        if (interlace !== 0 && interlace !== 1) {\r\n            this.error(new Error('Unsupported interlace method'));\r\n            return;\r\n        }\r\n        this._colorType = colorType;\r\n        var bpp = constants.COLORTYPE_TO_BPP_MAP[this._colorType];\r\n        this._hasIHDR = true;\r\n        this.metadata({\r\n            width: width,\r\n            height: height,\r\n            depth: depth,\r\n            interlace: Boolean(interlace),\r\n            palette: Boolean(colorType & constants.COLORTYPE_PALETTE),\r\n            color: Boolean(colorType & constants.COLORTYPE_COLOR),\r\n            alpha: Boolean(colorType & constants.COLORTYPE_ALPHA),\r\n            bpp: bpp,\r\n            colorType: colorType\r\n        });\r\n        this._handleChunkEnd();\r\n    };\r\n    Parser.prototype._handlePLTE = function (length) {\r\n        this.read(length, this._parsePLTE.bind(this));\r\n    };\r\n    Parser.prototype._parsePLTE = function (data) {\r\n        this._crc.write(data);\r\n        var entries = Math.floor(data.length / 3);\r\n        // console.log('Palette:', entries);\r\n        for (var i = 0; i < entries; i++) {\r\n            this._palette.push([\r\n                data[i * 3],\r\n                data[i * 3 + 1],\r\n                data[i * 3 + 2],\r\n                0xff\r\n            ]);\r\n        }\r\n        this.palette(this._palette);\r\n        this._handleChunkEnd();\r\n    };\r\n    Parser.prototype._handleTRNS = function (length) {\r\n        this.simpleTransparency();\r\n        this.read(length, this._parseTRNS.bind(this));\r\n    };\r\n    Parser.prototype._parseTRNS = function (data) {\r\n        this._crc.write(data);\r\n        // palette\r\n        if (this._colorType === constants.COLORTYPE_PALETTE_COLOR) {\r\n            if (this._palette.length === 0) {\r\n                this.error(new Error('Transparency chunk must be after palette'));\r\n                return;\r\n            }\r\n            if (data.length > this._palette.length) {\r\n                this.error(new Error('More transparent colors than palette size'));\r\n                return;\r\n            }\r\n            for (var i = 0; i < data.length; i++) {\r\n                this._palette[i][3] = data[i];\r\n            }\r\n            this.palette(this._palette);\r\n        }\r\n        // for colorType 0 (grayscale) and 2 (rgb)\r\n        // there might be one gray/color defined as transparent\r\n        if (this._colorType === constants.COLORTYPE_GRAYSCALE) {\r\n            // grey, 2 bytes\r\n            this.transColor([data.readUInt16BE(0)]);\r\n        }\r\n        if (this._colorType === constants.COLORTYPE_COLOR) {\r\n            this.transColor([data.readUInt16BE(0), data.readUInt16BE(2), data.readUInt16BE(4)]);\r\n        }\r\n        this._handleChunkEnd();\r\n    };\r\n    Parser.prototype._handleGAMA = function (length) {\r\n        this.read(length, this._parseGAMA.bind(this));\r\n    };\r\n    Parser.prototype._parseGAMA = function (data) {\r\n        this._crc.write(data);\r\n        this.gamma(data.readUInt32BE(0) / constants.GAMMA_DIVISION);\r\n        this._handleChunkEnd();\r\n    };\r\n    Parser.prototype._handleIDAT = function (length) {\r\n        if (!this._emittedHeadersFinished) {\r\n            this._emittedHeadersFinished = true;\r\n            this.headersFinished();\r\n        }\r\n        this.read(-length, this._parseIDAT.bind(this, length));\r\n    };\r\n    Parser.prototype._parseIDAT = function (length, data) {\r\n        this._crc.write(data);\r\n        if (this._colorType === constants.COLORTYPE_PALETTE_COLOR && this._palette.length === 0) {\r\n            throw new Error('Expected palette not found');\r\n        }\r\n        this.inflateData(data);\r\n        var leftOverLength = length - data.length;\r\n        if (leftOverLength > 0) {\r\n            this._handleIDAT(leftOverLength);\r\n        }\r\n        else {\r\n            this._handleChunkEnd();\r\n        }\r\n    };\r\n    Parser.prototype._handleIEND = function (length) {\r\n        this.read(length, this._parseIEND.bind(this));\r\n    };\r\n    Parser.prototype._parseIEND = function (data) {\r\n        this._crc.write(data);\r\n        this._hasIEND = true;\r\n        this._handleChunkEnd();\r\n        if (this.finished) {\r\n            this.finished();\r\n        }\r\n    };\r\n});\r\nvar filterParseAsync$1 = createCommonjsModule(function (module) {\r\n    var FilterAsync = module.exports = function (bitmapInfo) {\r\n        chunkstream$1.call(this);\r\n        var buffers = [];\r\n        var that = this;\r\n        this._filter = new filterParse$1(bitmapInfo, {\r\n            read: this.read.bind(this),\r\n            write: function (buffer) {\r\n                buffers.push(buffer);\r\n            },\r\n            complete: function () {\r\n                that.emit('complete', Buffer.concat(buffers));\r\n            }\r\n        });\r\n        this._filter.start();\r\n    };\r\n    util.inherits(FilterAsync, chunkstream$1);\r\n});\r\nvar parser$1 = createCommonjsModule(function (module) {\r\n    var Parser = module.exports = function (options, dependencies) {\r\n        this._options = options;\r\n        options.checkCRC = options.checkCRC !== false;\r\n        this._hasIHDR = false;\r\n        this._hasIEND = false;\r\n        this._emittedHeadersFinished = false;\r\n        // input flags/metadata\r\n        this._palette = [];\r\n        this._colorType = 0;\r\n        this._chunks = {};\r\n        this._chunks[constants.TYPE_IHDR] = this._handleIHDR.bind(this);\r\n        this._chunks[constants.TYPE_IEND] = this._handleIEND.bind(this);\r\n        this._chunks[constants.TYPE_IDAT] = this._handleIDAT.bind(this);\r\n        this._chunks[constants.TYPE_PLTE] = this._handlePLTE.bind(this);\r\n        this._chunks[constants.TYPE_tRNS] = this._handleTRNS.bind(this);\r\n        this._chunks[constants.TYPE_gAMA] = this._handleGAMA.bind(this);\r\n        this.read = dependencies.read;\r\n        this.error = dependencies.error;\r\n        this.metadata = dependencies.metadata;\r\n        this.gamma = dependencies.gamma;\r\n        this.transColor = dependencies.transColor;\r\n        this.palette = dependencies.palette;\r\n        this.parsed = dependencies.parsed;\r\n        this.inflateData = dependencies.inflateData;\r\n        this.finished = dependencies.finished;\r\n        this.simpleTransparency = dependencies.simpleTransparency;\r\n        this.headersFinished = dependencies.headersFinished || function () { };\r\n    };\r\n    Parser.prototype.start = function () {\r\n        this.read(constants.PNG_SIGNATURE.length, this._parseSignature.bind(this));\r\n    };\r\n    Parser.prototype._parseSignature = function (data) {\r\n        var signature = constants.PNG_SIGNATURE;\r\n        for (var i = 0; i < signature.length; i++) {\r\n            if (data[i] !== signature[i]) {\r\n                this.error(new Error('Invalid file signature'));\r\n                return;\r\n            }\r\n        }\r\n        this.read(8, this._parseChunkBegin.bind(this));\r\n    };\r\n    Parser.prototype._parseChunkBegin = function (data) {\r\n        // chunk content length\r\n        var length = data.readUInt32BE(0);\r\n        // chunk type\r\n        var type = data.readUInt32BE(4);\r\n        var name = '';\r\n        for (var i = 4; i < 8; i++) {\r\n            name += String.fromCharCode(data[i]);\r\n        }\r\n        //console.log('chunk ', name, length);\r\n        // chunk flags\r\n        var ancillary = Boolean(data[4] & 0x20); // or critical\r\n        //    priv = Boolean(data[5] & 0x20), // or public\r\n        //    safeToCopy = Boolean(data[7] & 0x20); // or unsafe\r\n        if (!this._hasIHDR && type !== constants.TYPE_IHDR) {\r\n            this.error(new Error('Expected IHDR on beggining'));\r\n            return;\r\n        }\r\n        this._crc = new crc$1();\r\n        this._crc.write(new Buffer(name));\r\n        if (this._chunks[type]) {\r\n            return this._chunks[type](length);\r\n        }\r\n        if (!ancillary) {\r\n            this.error(new Error('Unsupported critical chunk type ' + name));\r\n            return;\r\n        }\r\n        this.read(length + 4, this._skipChunk.bind(this));\r\n    };\r\n    Parser.prototype._skipChunk = function ( /*data*/) {\r\n        this.read(8, this._parseChunkBegin.bind(this));\r\n    };\r\n    Parser.prototype._handleChunkEnd = function () {\r\n        this.read(4, this._parseChunkEnd.bind(this));\r\n    };\r\n    Parser.prototype._parseChunkEnd = function (data) {\r\n        var fileCrc = data.readInt32BE(0);\r\n        var calcCrc = this._crc.crc32();\r\n        // check CRC\r\n        if (this._options.checkCRC && calcCrc !== fileCrc) {\r\n            this.error(new Error('Crc error - ' + fileCrc + ' - ' + calcCrc));\r\n            return;\r\n        }\r\n        if (!this._hasIEND) {\r\n            this.read(8, this._parseChunkBegin.bind(this));\r\n        }\r\n    };\r\n    Parser.prototype._handleIHDR = function (length) {\r\n        this.read(length, this._parseIHDR.bind(this));\r\n    };\r\n    Parser.prototype._parseIHDR = function (data) {\r\n        this._crc.write(data);\r\n        var width = data.readUInt32BE(0);\r\n        var height = data.readUInt32BE(4);\r\n        var depth = data[8];\r\n        var colorType = data[9]; // bits: 1 palette, 2 color, 4 alpha\r\n        var compr = data[10];\r\n        var filter = data[11];\r\n        var interlace = data[12];\r\n        // console.log('    width', width, 'height', height,\r\n        //     'depth', depth, 'colorType', colorType,\r\n        //     'compr', compr, 'filter', filter, 'interlace', interlace\r\n        // );\r\n        if (depth !== 8 && depth !== 4 && depth !== 2 && depth !== 1 && depth !== 16) {\r\n            this.error(new Error('Unsupported bit depth ' + depth));\r\n            return;\r\n        }\r\n        if (!(colorType in constants.COLORTYPE_TO_BPP_MAP)) {\r\n            this.error(new Error('Unsupported color type'));\r\n            return;\r\n        }\r\n        if (compr !== 0) {\r\n            this.error(new Error('Unsupported compression method'));\r\n            return;\r\n        }\r\n        if (filter !== 0) {\r\n            this.error(new Error('Unsupported filter method'));\r\n            return;\r\n        }\r\n        if (interlace !== 0 && interlace !== 1) {\r\n            this.error(new Error('Unsupported interlace method'));\r\n            return;\r\n        }\r\n        this._colorType = colorType;\r\n        var bpp = constants.COLORTYPE_TO_BPP_MAP[this._colorType];\r\n        this._hasIHDR = true;\r\n        this.metadata({\r\n            width: width,\r\n            height: height,\r\n            depth: depth,\r\n            interlace: Boolean(interlace),\r\n            palette: Boolean(colorType & constants.COLORTYPE_PALETTE),\r\n            color: Boolean(colorType & constants.COLORTYPE_COLOR),\r\n            alpha: Boolean(colorType & constants.COLORTYPE_ALPHA),\r\n            bpp: bpp,\r\n            colorType: colorType\r\n        });\r\n        this._handleChunkEnd();\r\n    };\r\n    Parser.prototype._handlePLTE = function (length) {\r\n        this.read(length, this._parsePLTE.bind(this));\r\n    };\r\n    Parser.prototype._parsePLTE = function (data) {\r\n        this._crc.write(data);\r\n        var entries = Math.floor(data.length / 3);\r\n        // console.log('Palette:', entries);\r\n        for (var i = 0; i < entries; i++) {\r\n            this._palette.push([\r\n                data[i * 3],\r\n                data[i * 3 + 1],\r\n                data[i * 3 + 2],\r\n                0xff\r\n            ]);\r\n        }\r\n        this.palette(this._palette);\r\n        this._handleChunkEnd();\r\n    };\r\n    Parser.prototype._handleTRNS = function (length) {\r\n        this.simpleTransparency();\r\n        this.read(length, this._parseTRNS.bind(this));\r\n    };\r\n    Parser.prototype._parseTRNS = function (data) {\r\n        this._crc.write(data);\r\n        // palette\r\n        if (this._colorType === constants.COLORTYPE_PALETTE_COLOR) {\r\n            if (this._palette.length === 0) {\r\n                this.error(new Error('Transparency chunk must be after palette'));\r\n                return;\r\n            }\r\n            if (data.length > this._palette.length) {\r\n                this.error(new Error('More transparent colors than palette size'));\r\n                return;\r\n            }\r\n            for (var i = 0; i < data.length; i++) {\r\n                this._palette[i][3] = data[i];\r\n            }\r\n            this.palette(this._palette);\r\n        }\r\n        // for colorType 0 (grayscale) and 2 (rgb)\r\n        // there might be one gray/color defined as transparent\r\n        if (this._colorType === constants.COLORTYPE_GRAYSCALE) {\r\n            // grey, 2 bytes\r\n            this.transColor([data.readUInt16BE(0)]);\r\n        }\r\n        if (this._colorType === constants.COLORTYPE_COLOR) {\r\n            this.transColor([data.readUInt16BE(0), data.readUInt16BE(2), data.readUInt16BE(4)]);\r\n        }\r\n        this._handleChunkEnd();\r\n    };\r\n    Parser.prototype._handleGAMA = function (length) {\r\n        this.read(length, this._parseGAMA.bind(this));\r\n    };\r\n    Parser.prototype._parseGAMA = function (data) {\r\n        this._crc.write(data);\r\n        this.gamma(data.readUInt32BE(0) / constants.GAMMA_DIVISION);\r\n        this._handleChunkEnd();\r\n    };\r\n    Parser.prototype._handleIDAT = function (length) {\r\n        if (!this._emittedHeadersFinished) {\r\n            this._emittedHeadersFinished = true;\r\n            this.headersFinished();\r\n        }\r\n        this.read(-length, this._parseIDAT.bind(this, length));\r\n    };\r\n    Parser.prototype._parseIDAT = function (length, data) {\r\n        this._crc.write(data);\r\n        if (this._colorType === constants.COLORTYPE_PALETTE_COLOR && this._palette.length === 0) {\r\n            throw new Error('Expected palette not found');\r\n        }\r\n        this.inflateData(data);\r\n        var leftOverLength = length - data.length;\r\n        if (leftOverLength > 0) {\r\n            this._handleIDAT(leftOverLength);\r\n        }\r\n        else {\r\n            this._handleChunkEnd();\r\n        }\r\n    };\r\n    Parser.prototype._handleIEND = function (length) {\r\n        this.read(length, this._parseIEND.bind(this));\r\n    };\r\n    Parser.prototype._parseIEND = function (data) {\r\n        this._crc.write(data);\r\n        this._hasIEND = true;\r\n        this._handleChunkEnd();\r\n        if (this.finished) {\r\n            this.finished();\r\n        }\r\n    };\r\n});\r\nvar pixelBppMapper = [\r\n    // 0 - dummy entry\r\n    function () { },\r\n    // 1 - L\r\n    // 0: 0, 1: 0, 2: 0, 3: 0xff\r\n    function (pxData, data, pxPos, rawPos) {\r\n        if (rawPos === data.length) {\r\n            throw new Error('Ran out of data');\r\n        }\r\n        var pixel = data[rawPos];\r\n        pxData[pxPos] = pixel;\r\n        pxData[pxPos + 1] = pixel;\r\n        pxData[pxPos + 2] = pixel;\r\n        pxData[pxPos + 3] = 0xff;\r\n    },\r\n    // 2 - LA\r\n    // 0: 0, 1: 0, 2: 0, 3: 1\r\n    function (pxData, data, pxPos, rawPos) {\r\n        if (rawPos + 1 >= data.length) {\r\n            throw new Error('Ran out of data');\r\n        }\r\n        var pixel = data[rawPos];\r\n        pxData[pxPos] = pixel;\r\n        pxData[pxPos + 1] = pixel;\r\n        pxData[pxPos + 2] = pixel;\r\n        pxData[pxPos + 3] = data[rawPos + 1];\r\n    },\r\n    // 3 - RGB\r\n    // 0: 0, 1: 1, 2: 2, 3: 0xff\r\n    function (pxData, data, pxPos, rawPos) {\r\n        if (rawPos + 2 >= data.length) {\r\n            throw new Error('Ran out of data');\r\n        }\r\n        pxData[pxPos] = data[rawPos];\r\n        pxData[pxPos + 1] = data[rawPos + 1];\r\n        pxData[pxPos + 2] = data[rawPos + 2];\r\n        pxData[pxPos + 3] = 0xff;\r\n    },\r\n    // 4 - RGBA\r\n    // 0: 0, 1: 1, 2: 2, 3: 3\r\n    function (pxData, data, pxPos, rawPos) {\r\n        if (rawPos + 3 >= data.length) {\r\n            throw new Error('Ran out of data');\r\n        }\r\n        pxData[pxPos] = data[rawPos];\r\n        pxData[pxPos + 1] = data[rawPos + 1];\r\n        pxData[pxPos + 2] = data[rawPos + 2];\r\n        pxData[pxPos + 3] = data[rawPos + 3];\r\n    }\r\n];\r\nvar pixelBppCustomMapper = [\r\n    // 0 - dummy entry\r\n    function () { },\r\n    // 1 - L\r\n    // 0: 0, 1: 0, 2: 0, 3: 0xff\r\n    function (pxData, pixelData, pxPos, maxBit) {\r\n        var pixel = pixelData[0];\r\n        pxData[pxPos] = pixel;\r\n        pxData[pxPos + 1] = pixel;\r\n        pxData[pxPos + 2] = pixel;\r\n        pxData[pxPos + 3] = maxBit;\r\n    },\r\n    // 2 - LA\r\n    // 0: 0, 1: 0, 2: 0, 3: 1\r\n    function (pxData, pixelData, pxPos) {\r\n        var pixel = pixelData[0];\r\n        pxData[pxPos] = pixel;\r\n        pxData[pxPos + 1] = pixel;\r\n        pxData[pxPos + 2] = pixel;\r\n        pxData[pxPos + 3] = pixelData[1];\r\n    },\r\n    // 3 - RGB\r\n    // 0: 0, 1: 1, 2: 2, 3: 0xff\r\n    function (pxData, pixelData, pxPos, maxBit) {\r\n        pxData[pxPos] = pixelData[0];\r\n        pxData[pxPos + 1] = pixelData[1];\r\n        pxData[pxPos + 2] = pixelData[2];\r\n        pxData[pxPos + 3] = maxBit;\r\n    },\r\n    // 4 - RGBA\r\n    // 0: 0, 1: 1, 2: 2, 3: 3\r\n    function (pxData, pixelData, pxPos) {\r\n        pxData[pxPos] = pixelData[0];\r\n        pxData[pxPos + 1] = pixelData[1];\r\n        pxData[pxPos + 2] = pixelData[2];\r\n        pxData[pxPos + 3] = pixelData[3];\r\n    }\r\n];\r\nfunction bitRetriever(data, depth) {\r\n    var leftOver = [];\r\n    var i = 0;\r\n    function split() {\r\n        if (i === data.length) {\r\n            throw new Error('Ran out of data');\r\n        }\r\n        var byte = data[i];\r\n        i++;\r\n        var byte8, byte7, byte6, byte5, byte4, byte3, byte2, byte1;\r\n        switch (depth) {\r\n            default:\r\n                throw new Error('unrecognised depth');\r\n            case 16:\r\n                byte2 = data[i];\r\n                i++;\r\n                leftOver.push(((byte << 8) + byte2));\r\n                break;\r\n            case 4:\r\n                byte2 = byte & 0x0f;\r\n                byte1 = byte >> 4;\r\n                leftOver.push(byte1, byte2);\r\n                break;\r\n            case 2:\r\n                byte4 = byte & 3;\r\n                byte3 = byte >> 2 & 3;\r\n                byte2 = byte >> 4 & 3;\r\n                byte1 = byte >> 6 & 3;\r\n                leftOver.push(byte1, byte2, byte3, byte4);\r\n                break;\r\n            case 1:\r\n                byte8 = byte & 1;\r\n                byte7 = byte >> 1 & 1;\r\n                byte6 = byte >> 2 & 1;\r\n                byte5 = byte >> 3 & 1;\r\n                byte4 = byte >> 4 & 1;\r\n                byte3 = byte >> 5 & 1;\r\n                byte2 = byte >> 6 & 1;\r\n                byte1 = byte >> 7 & 1;\r\n                leftOver.push(byte1, byte2, byte3, byte4, byte5, byte6, byte7, byte8);\r\n                break;\r\n        }\r\n    }\r\n    return {\r\n        get: function (count) {\r\n            while (leftOver.length < count) {\r\n                split();\r\n            }\r\n            var returner = leftOver.slice(0, count);\r\n            leftOver = leftOver.slice(count);\r\n            return returner;\r\n        },\r\n        resetAfterLine: function () {\r\n            leftOver.length = 0;\r\n        },\r\n        end: function () {\r\n            if (i !== data.length) {\r\n                throw new Error('extra data found');\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction mapImage8Bit(image, pxData, getPxPos, bpp, data, rawPos) {\r\n    var imageWidth = image.width;\r\n    var imageHeight = image.height;\r\n    var imagePass = image.index;\r\n    for (var y = 0; y < imageHeight; y++) {\r\n        for (var x = 0; x < imageWidth; x++) {\r\n            var pxPos = getPxPos(x, y, imagePass);\r\n            pixelBppMapper[bpp](pxData, data, pxPos, rawPos);\r\n            rawPos += bpp; //eslint-disable-line no-param-reassign\r\n        }\r\n    }\r\n    return rawPos;\r\n}\r\nfunction mapImageCustomBit(image, pxData, getPxPos, bpp, bits, maxBit) {\r\n    var imageWidth = image.width;\r\n    var imageHeight = image.height;\r\n    var imagePass = image.index;\r\n    for (var y = 0; y < imageHeight; y++) {\r\n        for (var x = 0; x < imageWidth; x++) {\r\n            var pixelData = bits.get(bpp);\r\n            var pxPos = getPxPos(x, y, imagePass);\r\n            pixelBppCustomMapper[bpp](pxData, pixelData, pxPos, maxBit);\r\n        }\r\n        bits.resetAfterLine();\r\n    }\r\n}\r\nvar dataToBitMap = function (data, bitmapInfo) {\r\n    var width = bitmapInfo.width;\r\n    var height = bitmapInfo.height;\r\n    var depth = bitmapInfo.depth;\r\n    var bpp = bitmapInfo.bpp;\r\n    var interlace$1 = bitmapInfo.interlace;\r\n    if (depth !== 8) {\r\n        var bits = bitRetriever(data, depth);\r\n    }\r\n    var pxData;\r\n    if (depth <= 8) {\r\n        pxData = new Buffer(width * height * 4);\r\n    }\r\n    else {\r\n        pxData = new Uint16Array(width * height * 4);\r\n    }\r\n    var maxBit = Math.pow(2, depth) - 1;\r\n    var rawPos = 0;\r\n    var images;\r\n    var getPxPos;\r\n    if (interlace$1) {\r\n        images = interlace.getImagePasses(width, height);\r\n        getPxPos = interlace.getInterlaceIterator(width, height);\r\n    }\r\n    else {\r\n        var nonInterlacedPxPos = 0;\r\n        getPxPos = function () {\r\n            var returner = nonInterlacedPxPos;\r\n            nonInterlacedPxPos += 4;\r\n            return returner;\r\n        };\r\n        images = [{ width: width, height: height }];\r\n    }\r\n    for (var imageIndex = 0; imageIndex < images.length; imageIndex++) {\r\n        if (depth === 8) {\r\n            rawPos = mapImage8Bit(images[imageIndex], pxData, getPxPos, bpp, data, rawPos);\r\n        }\r\n        else {\r\n            mapImageCustomBit(images[imageIndex], pxData, getPxPos, bpp, bits, maxBit);\r\n        }\r\n    }\r\n    if (depth === 8) {\r\n        if (rawPos !== data.length) {\r\n            throw new Error('extra data found');\r\n        }\r\n    }\r\n    else {\r\n        bits.end();\r\n    }\r\n    return pxData;\r\n};\r\nvar bitmapper = {\r\n    dataToBitMap: dataToBitMap\r\n};\r\nfunction dePalette(indata, outdata, width, height, palette) {\r\n    var pxPos = 0;\r\n    // use values from palette\r\n    for (var y = 0; y < height; y++) {\r\n        for (var x = 0; x < width; x++) {\r\n            var color = palette[indata[pxPos]];\r\n            if (!color) {\r\n                throw new Error('index ' + indata[pxPos] + ' not in palette');\r\n            }\r\n            for (var i = 0; i < 4; i++) {\r\n                outdata[pxPos + i] = color[i];\r\n            }\r\n            pxPos += 4;\r\n        }\r\n    }\r\n}\r\nfunction replaceTransparentColor(indata, outdata, width, height, transColor) {\r\n    var pxPos = 0;\r\n    for (var y = 0; y < height; y++) {\r\n        for (var x = 0; x < width; x++) {\r\n            var makeTrans = false;\r\n            if (transColor.length === 1) {\r\n                if (transColor[0] === indata[pxPos]) {\r\n                    makeTrans = true;\r\n                }\r\n            }\r\n            else if (transColor[0] === indata[pxPos] && transColor[1] === indata[pxPos + 1] && transColor[2] === indata[pxPos + 2]) {\r\n                makeTrans = true;\r\n            }\r\n            if (makeTrans) {\r\n                for (var i = 0; i < 4; i++) {\r\n                    outdata[pxPos + i] = 0;\r\n                }\r\n            }\r\n            pxPos += 4;\r\n        }\r\n    }\r\n}\r\nfunction scaleDepth(indata, outdata, width, height, depth) {\r\n    var maxOutSample = 255;\r\n    var maxInSample = Math.pow(2, depth) - 1;\r\n    var pxPos = 0;\r\n    for (var y = 0; y < height; y++) {\r\n        for (var x = 0; x < width; x++) {\r\n            for (var i = 0; i < 4; i++) {\r\n                outdata[pxPos + i] = Math.floor((indata[pxPos + i] * maxOutSample) / maxInSample + 0.5);\r\n            }\r\n            pxPos += 4;\r\n        }\r\n    }\r\n}\r\nvar formatNormaliser = function (indata, imageData) {\r\n    var depth = imageData.depth;\r\n    var width = imageData.width;\r\n    var height = imageData.height;\r\n    var colorType = imageData.colorType;\r\n    var transColor = imageData.transColor;\r\n    var palette = imageData.palette;\r\n    var outdata = indata; // only different for 16 bits\r\n    if (colorType === 3) { // paletted\r\n        dePalette(indata, outdata, width, height, palette);\r\n    }\r\n    else {\r\n        if (transColor) {\r\n            replaceTransparentColor(indata, outdata, width, height, transColor);\r\n        }\r\n        // if it needs scaling\r\n        if (depth !== 8) {\r\n            // if we need to change the buffer size\r\n            if (depth === 16) {\r\n                outdata = new Buffer(width * height * 4);\r\n            }\r\n            scaleDepth(indata, outdata, width, height, depth);\r\n        }\r\n    }\r\n    return outdata;\r\n};\r\nvar parserAsync = createCommonjsModule(function (module) {\r\n    var ParserAsync = module.exports = function (options) {\r\n        chunkstream$1.call(this);\r\n        this._parser = new parser$1(options, {\r\n            read: this.read.bind(this),\r\n            error: this._handleError.bind(this),\r\n            metadata: this._handleMetaData.bind(this),\r\n            gamma: this.emit.bind(this, 'gamma'),\r\n            palette: this._handlePalette.bind(this),\r\n            transColor: this._handleTransColor.bind(this),\r\n            finished: this._finished.bind(this),\r\n            inflateData: this._inflateData.bind(this),\r\n            simpleTransparency: this._simpleTransparency.bind(this),\r\n            headersFinished: this._headersFinished.bind(this)\r\n        });\r\n        this._options = options;\r\n        this.writable = true;\r\n        this._parser.start();\r\n    };\r\n    util.inherits(ParserAsync, chunkstream$1);\r\n    ParserAsync.prototype._handleError = function (err) {\r\n        this.emit('error', err);\r\n        this.writable = false;\r\n        this.destroy();\r\n        if (this._inflate && this._inflate.destroy) {\r\n            this._inflate.destroy();\r\n        }\r\n        if (this._filter) {\r\n            this._filter.destroy();\r\n            // For backward compatibility with Node 7 and below.\r\n            // Suppress errors due to _inflate calling write() even after\r\n            // it's destroy()'ed.\r\n            this._filter.on('error', function () { });\r\n        }\r\n        this.errord = true;\r\n    };\r\n    ParserAsync.prototype._inflateData = function (data) {\r\n        if (!this._inflate) {\r\n            if (this._bitmapInfo.interlace) {\r\n                this._inflate = zlib.createInflate();\r\n                this._inflate.on('error', this.emit.bind(this, 'error'));\r\n                this._filter.on('complete', this._complete.bind(this));\r\n                this._inflate.pipe(this._filter);\r\n            }\r\n            else {\r\n                var rowSize = ((this._bitmapInfo.width * this._bitmapInfo.bpp * this._bitmapInfo.depth + 7) >> 3) + 1;\r\n                var imageSize = rowSize * this._bitmapInfo.height;\r\n                var chunkSize = Math.max(imageSize, zlib.Z_MIN_CHUNK);\r\n                this._inflate = zlib.createInflate({ chunkSize: chunkSize });\r\n                var leftToInflate = imageSize;\r\n                var emitError = this.emit.bind(this, 'error');\r\n                this._inflate.on('error', function (err) {\r\n                    if (!leftToInflate) {\r\n                        return;\r\n                    }\r\n                    emitError(err);\r\n                });\r\n                this._filter.on('complete', this._complete.bind(this));\r\n                var filterWrite = this._filter.write.bind(this._filter);\r\n                this._inflate.on('data', function (chunk) {\r\n                    if (!leftToInflate) {\r\n                        return;\r\n                    }\r\n                    if (chunk.length > leftToInflate) {\r\n                        chunk = chunk.slice(0, leftToInflate);\r\n                    }\r\n                    leftToInflate -= chunk.length;\r\n                    filterWrite(chunk);\r\n                });\r\n                this._inflate.on('end', this._filter.end.bind(this._filter));\r\n            }\r\n        }\r\n        this._inflate.write(data);\r\n    };\r\n    ParserAsync.prototype._handleMetaData = function (metaData) {\r\n        this._metaData = metaData;\r\n        this._bitmapInfo = Object.create(metaData);\r\n        this._filter = new filterParseAsync$1(this._bitmapInfo);\r\n    };\r\n    ParserAsync.prototype._handleTransColor = function (transColor) {\r\n        this._bitmapInfo.transColor = transColor;\r\n    };\r\n    ParserAsync.prototype._handlePalette = function (palette) {\r\n        this._bitmapInfo.palette = palette;\r\n    };\r\n    ParserAsync.prototype._simpleTransparency = function () {\r\n        this._metaData.alpha = true;\r\n    };\r\n    ParserAsync.prototype._headersFinished = function () {\r\n        // Up until this point, we don't know if we have a tRNS chunk (alpha)\r\n        // so we can't emit metadata any earlier\r\n        this.emit('metadata', this._metaData);\r\n    };\r\n    ParserAsync.prototype._finished = function () {\r\n        if (this.errord) {\r\n            return;\r\n        }\r\n        if (!this._inflate) {\r\n            this.emit('error', 'No Inflate block');\r\n        }\r\n        else {\r\n            // no more data to inflate\r\n            this._inflate.end();\r\n        }\r\n        this.destroySoon();\r\n    };\r\n    ParserAsync.prototype._complete = function (filteredData) {\r\n        if (this.errord) {\r\n            return;\r\n        }\r\n        try {\r\n            var bitmapData = bitmapper.dataToBitMap(filteredData, this._bitmapInfo);\r\n            var normalisedBitmapData = formatNormaliser(bitmapData, this._bitmapInfo);\r\n            bitmapData = null;\r\n        }\r\n        catch (ex) {\r\n            this._handleError(ex);\r\n            return;\r\n        }\r\n        this.emit('parsed', normalisedBitmapData);\r\n    };\r\n});\r\nvar bitpacker = function (dataIn, width, height, options) {\r\n    var outHasAlpha = [constants.COLORTYPE_COLOR_ALPHA, constants.COLORTYPE_ALPHA].indexOf(options.colorType) !== -1;\r\n    if (options.colorType === options.inputColorType) {\r\n        var bigEndian = (function () {\r\n            var buffer = new ArrayBuffer(2);\r\n            new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\r\n            // Int16Array uses the platform's endianness.\r\n            return new Int16Array(buffer)[0] !== 256;\r\n        })();\r\n        // If no need to convert to grayscale and alpha is present/absent in both, take a fast route\r\n        if (options.bitDepth === 8 || (options.bitDepth === 16 && bigEndian)) {\r\n            return dataIn;\r\n        }\r\n    }\r\n    // map to a UInt16 array if data is 16bit, fix endianness below\r\n    var data = options.bitDepth !== 16 ? dataIn : new Uint16Array(dataIn.buffer);\r\n    var maxValue = 255;\r\n    var inBpp = constants.COLORTYPE_TO_BPP_MAP[options.inputColorType];\r\n    if (inBpp === 4 && !options.inputHasAlpha) {\r\n        inBpp = 3;\r\n    }\r\n    var outBpp = constants.COLORTYPE_TO_BPP_MAP[options.colorType];\r\n    if (options.bitDepth === 16) {\r\n        maxValue = 65535;\r\n        outBpp *= 2;\r\n    }\r\n    var outData = new Buffer(width * height * outBpp);\r\n    var inIndex = 0;\r\n    var outIndex = 0;\r\n    var bgColor = options.bgColor || {};\r\n    if (bgColor.red === undefined) {\r\n        bgColor.red = maxValue;\r\n    }\r\n    if (bgColor.green === undefined) {\r\n        bgColor.green = maxValue;\r\n    }\r\n    if (bgColor.blue === undefined) {\r\n        bgColor.blue = maxValue;\r\n    }\r\n    function getRGBA() {\r\n        var red;\r\n        var green;\r\n        var blue;\r\n        var alpha = maxValue;\r\n        switch (options.inputColorType) {\r\n            case constants.COLORTYPE_COLOR_ALPHA:\r\n                alpha = data[inIndex + 3];\r\n                red = data[inIndex];\r\n                green = data[inIndex + 1];\r\n                blue = data[inIndex + 2];\r\n                break;\r\n            case constants.COLORTYPE_COLOR:\r\n                red = data[inIndex];\r\n                green = data[inIndex + 1];\r\n                blue = data[inIndex + 2];\r\n                break;\r\n            case constants.COLORTYPE_ALPHA:\r\n                alpha = data[inIndex + 1];\r\n                red = data[inIndex];\r\n                green = red;\r\n                blue = red;\r\n                break;\r\n            case constants.COLORTYPE_GRAYSCALE:\r\n                red = data[inIndex];\r\n                green = red;\r\n                blue = red;\r\n                break;\r\n            default:\r\n                throw new Error('input color type:' + options.inputColorType + ' is not supported at present');\r\n        }\r\n        if (options.inputHasAlpha) {\r\n            if (!outHasAlpha) {\r\n                alpha /= maxValue;\r\n                red = Math.min(Math.max(Math.round((1 - alpha) * bgColor.red + alpha * red), 0), maxValue);\r\n                green = Math.min(Math.max(Math.round((1 - alpha) * bgColor.green + alpha * green), 0), maxValue);\r\n                blue = Math.min(Math.max(Math.round((1 - alpha) * bgColor.blue + alpha * blue), 0), maxValue);\r\n            }\r\n        }\r\n        return { red: red, green: green, blue: blue, alpha: alpha };\r\n    }\r\n    for (var y = 0; y < height; y++) {\r\n        for (var x = 0; x < width; x++) {\r\n            var rgba = getRGBA();\r\n            switch (options.colorType) {\r\n                case constants.COLORTYPE_COLOR_ALPHA:\r\n                case constants.COLORTYPE_COLOR:\r\n                    if (options.bitDepth === 8) {\r\n                        outData[outIndex] = rgba.red;\r\n                        outData[outIndex + 1] = rgba.green;\r\n                        outData[outIndex + 2] = rgba.blue;\r\n                        if (outHasAlpha) {\r\n                            outData[outIndex + 3] = rgba.alpha;\r\n                        }\r\n                    }\r\n                    else {\r\n                        outData.writeUInt16BE(rgba.red, outIndex);\r\n                        outData.writeUInt16BE(rgba.green, outIndex + 2);\r\n                        outData.writeUInt16BE(rgba.blue, outIndex + 4);\r\n                        if (outHasAlpha) {\r\n                            outData.writeUInt16BE(rgba.alpha, outIndex + 6);\r\n                        }\r\n                    }\r\n                    break;\r\n                case constants.COLORTYPE_ALPHA:\r\n                case constants.COLORTYPE_GRAYSCALE:\r\n                    // Convert to grayscale and alpha\r\n                    var grayscale = (rgba.red + rgba.green + rgba.blue) / 3;\r\n                    if (options.bitDepth === 8) {\r\n                        outData[outIndex] = grayscale;\r\n                        if (outHasAlpha) {\r\n                            outData[outIndex + 1] = rgba.alpha;\r\n                        }\r\n                    }\r\n                    else {\r\n                        outData.writeUInt16BE(grayscale, outIndex);\r\n                        if (outHasAlpha) {\r\n                            outData.writeUInt16BE(rgba.alpha, outIndex + 2);\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw new Error('unrecognised color Type ' + options.colorType);\r\n            }\r\n            inIndex += inBpp;\r\n            outIndex += outBpp;\r\n        }\r\n    }\r\n    return outData;\r\n};\r\nfunction filterNone(pxData, pxPos, byteWidth, rawData, rawPos) {\r\n    for (var x = 0; x < byteWidth; x++) {\r\n        rawData[rawPos + x] = pxData[pxPos + x];\r\n    }\r\n}\r\nfunction filterSumNone(pxData, pxPos, byteWidth) {\r\n    var sum = 0;\r\n    var length = pxPos + byteWidth;\r\n    for (var i = pxPos; i < length; i++) {\r\n        sum += Math.abs(pxData[i]);\r\n    }\r\n    return sum;\r\n}\r\nfunction filterSub(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\r\n    for (var x = 0; x < byteWidth; x++) {\r\n        var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\r\n        var val = pxData[pxPos + x] - left;\r\n        rawData[rawPos + x] = val;\r\n    }\r\n}\r\nfunction filterSumSub(pxData, pxPos, byteWidth, bpp) {\r\n    var sum = 0;\r\n    for (var x = 0; x < byteWidth; x++) {\r\n        var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\r\n        var val = pxData[pxPos + x] - left;\r\n        sum += Math.abs(val);\r\n    }\r\n    return sum;\r\n}\r\nfunction filterUp(pxData, pxPos, byteWidth, rawData, rawPos) {\r\n    for (var x = 0; x < byteWidth; x++) {\r\n        var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\r\n        var val = pxData[pxPos + x] - up;\r\n        rawData[rawPos + x] = val;\r\n    }\r\n}\r\nfunction filterSumUp(pxData, pxPos, byteWidth) {\r\n    var sum = 0;\r\n    var length = pxPos + byteWidth;\r\n    for (var x = pxPos; x < length; x++) {\r\n        var up = pxPos > 0 ? pxData[x - byteWidth] : 0;\r\n        var val = pxData[x] - up;\r\n        sum += Math.abs(val);\r\n    }\r\n    return sum;\r\n}\r\nfunction filterAvg(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\r\n    for (var x = 0; x < byteWidth; x++) {\r\n        var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\r\n        var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\r\n        var val = pxData[pxPos + x] - ((left + up) >> 1);\r\n        rawData[rawPos + x] = val;\r\n    }\r\n}\r\nfunction filterSumAvg(pxData, pxPos, byteWidth, bpp) {\r\n    var sum = 0;\r\n    for (var x = 0; x < byteWidth; x++) {\r\n        var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\r\n        var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\r\n        var val = pxData[pxPos + x] - ((left + up) >> 1);\r\n        sum += Math.abs(val);\r\n    }\r\n    return sum;\r\n}\r\nfunction filterPaeth(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\r\n    for (var x = 0; x < byteWidth; x++) {\r\n        var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\r\n        var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\r\n        var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\r\n        var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\r\n        rawData[rawPos + x] = val;\r\n    }\r\n}\r\nfunction filterSumPaeth(pxData, pxPos, byteWidth, bpp) {\r\n    var sum = 0;\r\n    for (var x = 0; x < byteWidth; x++) {\r\n        var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\r\n        var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\r\n        var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\r\n        var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\r\n        sum += Math.abs(val);\r\n    }\r\n    return sum;\r\n}\r\nvar filters = {\r\n    0: filterNone,\r\n    1: filterSub,\r\n    2: filterUp,\r\n    3: filterAvg,\r\n    4: filterPaeth\r\n};\r\nvar filterSums = {\r\n    0: filterSumNone,\r\n    1: filterSumSub,\r\n    2: filterSumUp,\r\n    3: filterSumAvg,\r\n    4: filterSumPaeth\r\n};\r\nvar filterPack = function (pxData, width, height, options, bpp) {\r\n    var filterTypes;\r\n    if (!('filterType' in options) || options.filterType === -1) {\r\n        filterTypes = [0, 1, 2, 3, 4];\r\n    }\r\n    else if (typeof options.filterType === 'number') {\r\n        filterTypes = [options.filterType];\r\n    }\r\n    else {\r\n        throw new Error('unrecognised filter types');\r\n    }\r\n    if (options.bitDepth === 16) {\r\n        bpp *= 2;\r\n    }\r\n    var byteWidth = width * bpp;\r\n    var rawPos = 0;\r\n    var pxPos = 0;\r\n    var rawData = new Buffer((byteWidth + 1) * height);\r\n    var sel = filterTypes[0];\r\n    for (var y = 0; y < height; y++) {\r\n        if (filterTypes.length > 1) {\r\n            // find best filter for this line (with lowest sum of values)\r\n            var min = Infinity;\r\n            for (var i = 0; i < filterTypes.length; i++) {\r\n                var sum = filterSums[filterTypes[i]](pxData, pxPos, byteWidth, bpp);\r\n                if (sum < min) {\r\n                    sel = filterTypes[i];\r\n                    min = sum;\r\n                }\r\n            }\r\n        }\r\n        rawData[rawPos] = sel;\r\n        rawPos++;\r\n        filters[sel](pxData, pxPos, byteWidth, rawData, rawPos, bpp);\r\n        rawPos += byteWidth;\r\n        pxPos += byteWidth;\r\n    }\r\n    return rawData;\r\n};\r\nvar packer = createCommonjsModule(function (module) {\r\n    var Packer = module.exports = function (options) {\r\n        this._options = options;\r\n        options.deflateChunkSize = options.deflateChunkSize || 32 * 1024;\r\n        options.deflateLevel = options.deflateLevel != null ? options.deflateLevel : 9;\r\n        options.deflateStrategy = options.deflateStrategy != null ? options.deflateStrategy : 3;\r\n        options.inputHasAlpha = options.inputHasAlpha != null ? options.inputHasAlpha : true;\r\n        options.deflateFactory = options.deflateFactory || zlib.createDeflate;\r\n        options.bitDepth = options.bitDepth || 8;\r\n        // This is outputColorType\r\n        options.colorType = (typeof options.colorType === 'number') ? options.colorType : constants.COLORTYPE_COLOR_ALPHA;\r\n        options.inputColorType = (typeof options.inputColorType === 'number') ? options.inputColorType : constants.COLORTYPE_COLOR_ALPHA;\r\n        if ([\r\n            constants.COLORTYPE_GRAYSCALE,\r\n            constants.COLORTYPE_COLOR,\r\n            constants.COLORTYPE_COLOR_ALPHA,\r\n            constants.COLORTYPE_ALPHA\r\n        ].indexOf(options.colorType) === -1) {\r\n            throw new Error('option color type:' + options.colorType + ' is not supported at present');\r\n        }\r\n        if ([\r\n            constants.COLORTYPE_GRAYSCALE,\r\n            constants.COLORTYPE_COLOR,\r\n            constants.COLORTYPE_COLOR_ALPHA,\r\n            constants.COLORTYPE_ALPHA\r\n        ].indexOf(options.inputColorType) === -1) {\r\n            throw new Error('option input color type:' + options.inputColorType + ' is not supported at present');\r\n        }\r\n        if (options.bitDepth !== 8 && options.bitDepth !== 16) {\r\n            throw new Error('option bit depth:' + options.bitDepth + ' is not supported at present');\r\n        }\r\n    };\r\n    Packer.prototype.getDeflateOptions = function () {\r\n        return {\r\n            chunkSize: this._options.deflateChunkSize,\r\n            level: this._options.deflateLevel,\r\n            strategy: this._options.deflateStrategy\r\n        };\r\n    };\r\n    Packer.prototype.createDeflate = function () {\r\n        return this._options.deflateFactory(this.getDeflateOptions());\r\n    };\r\n    Packer.prototype.filterData = function (data, width, height) {\r\n        // convert to correct format for filtering (e.g. right bpp and bit depth)\r\n        var packedData = bitpacker(data, width, height, this._options);\r\n        // filter pixel data\r\n        var bpp = constants.COLORTYPE_TO_BPP_MAP[this._options.colorType];\r\n        var filteredData = filterPack(packedData, width, height, this._options, bpp);\r\n        return filteredData;\r\n    };\r\n    Packer.prototype._packChunk = function (type, data) {\r\n        var len = (data ? data.length : 0);\r\n        var buf = new Buffer(len + 12);\r\n        buf.writeUInt32BE(len, 0);\r\n        buf.writeUInt32BE(type, 4);\r\n        if (data) {\r\n            data.copy(buf, 8);\r\n        }\r\n        buf.writeInt32BE(crc$1.crc32(buf.slice(4, buf.length - 4)), buf.length - 4);\r\n        return buf;\r\n    };\r\n    Packer.prototype.packGAMA = function (gamma) {\r\n        var buf = new Buffer(4);\r\n        buf.writeUInt32BE(Math.floor(gamma * constants.GAMMA_DIVISION), 0);\r\n        return this._packChunk(constants.TYPE_gAMA, buf);\r\n    };\r\n    Packer.prototype.packIHDR = function (width, height) {\r\n        var buf = new Buffer(13);\r\n        buf.writeUInt32BE(width, 0);\r\n        buf.writeUInt32BE(height, 4);\r\n        buf[8] = this._options.bitDepth; // Bit depth\r\n        buf[9] = this._options.colorType; // colorType\r\n        buf[10] = 0; // compression\r\n        buf[11] = 0; // filter\r\n        buf[12] = 0; // interlace\r\n        return this._packChunk(constants.TYPE_IHDR, buf);\r\n    };\r\n    Packer.prototype.packIDAT = function (data) {\r\n        return this._packChunk(constants.TYPE_IDAT, data);\r\n    };\r\n    Packer.prototype.packIEND = function () {\r\n        return this._packChunk(constants.TYPE_IEND, null);\r\n    };\r\n});\r\nvar packer$1 = createCommonjsModule(function (module) {\r\n    var Packer = module.exports = function (options) {\r\n        this._options = options;\r\n        options.deflateChunkSize = options.deflateChunkSize || 32 * 1024;\r\n        options.deflateLevel = options.deflateLevel != null ? options.deflateLevel : 9;\r\n        options.deflateStrategy = options.deflateStrategy != null ? options.deflateStrategy : 3;\r\n        options.inputHasAlpha = options.inputHasAlpha != null ? options.inputHasAlpha : true;\r\n        options.deflateFactory = options.deflateFactory || zlib.createDeflate;\r\n        options.bitDepth = options.bitDepth || 8;\r\n        // This is outputColorType\r\n        options.colorType = (typeof options.colorType === 'number') ? options.colorType : constants.COLORTYPE_COLOR_ALPHA;\r\n        options.inputColorType = (typeof options.inputColorType === 'number') ? options.inputColorType : constants.COLORTYPE_COLOR_ALPHA;\r\n        if ([\r\n            constants.COLORTYPE_GRAYSCALE,\r\n            constants.COLORTYPE_COLOR,\r\n            constants.COLORTYPE_COLOR_ALPHA,\r\n            constants.COLORTYPE_ALPHA\r\n        ].indexOf(options.colorType) === -1) {\r\n            throw new Error('option color type:' + options.colorType + ' is not supported at present');\r\n        }\r\n        if ([\r\n            constants.COLORTYPE_GRAYSCALE,\r\n            constants.COLORTYPE_COLOR,\r\n            constants.COLORTYPE_COLOR_ALPHA,\r\n            constants.COLORTYPE_ALPHA\r\n        ].indexOf(options.inputColorType) === -1) {\r\n            throw new Error('option input color type:' + options.inputColorType + ' is not supported at present');\r\n        }\r\n        if (options.bitDepth !== 8 && options.bitDepth !== 16) {\r\n            throw new Error('option bit depth:' + options.bitDepth + ' is not supported at present');\r\n        }\r\n    };\r\n    Packer.prototype.getDeflateOptions = function () {\r\n        return {\r\n            chunkSize: this._options.deflateChunkSize,\r\n            level: this._options.deflateLevel,\r\n            strategy: this._options.deflateStrategy\r\n        };\r\n    };\r\n    Packer.prototype.createDeflate = function () {\r\n        return this._options.deflateFactory(this.getDeflateOptions());\r\n    };\r\n    Packer.prototype.filterData = function (data, width, height) {\r\n        // convert to correct format for filtering (e.g. right bpp and bit depth)\r\n        var packedData = bitpacker(data, width, height, this._options);\r\n        // filter pixel data\r\n        var bpp = constants.COLORTYPE_TO_BPP_MAP[this._options.colorType];\r\n        var filteredData = filterPack(packedData, width, height, this._options, bpp);\r\n        return filteredData;\r\n    };\r\n    Packer.prototype._packChunk = function (type, data) {\r\n        var len = (data ? data.length : 0);\r\n        var buf = new Buffer(len + 12);\r\n        buf.writeUInt32BE(len, 0);\r\n        buf.writeUInt32BE(type, 4);\r\n        if (data) {\r\n            data.copy(buf, 8);\r\n        }\r\n        buf.writeInt32BE(crc$1.crc32(buf.slice(4, buf.length - 4)), buf.length - 4);\r\n        return buf;\r\n    };\r\n    Packer.prototype.packGAMA = function (gamma) {\r\n        var buf = new Buffer(4);\r\n        buf.writeUInt32BE(Math.floor(gamma * constants.GAMMA_DIVISION), 0);\r\n        return this._packChunk(constants.TYPE_gAMA, buf);\r\n    };\r\n    Packer.prototype.packIHDR = function (width, height) {\r\n        var buf = new Buffer(13);\r\n        buf.writeUInt32BE(width, 0);\r\n        buf.writeUInt32BE(height, 4);\r\n        buf[8] = this._options.bitDepth; // Bit depth\r\n        buf[9] = this._options.colorType; // colorType\r\n        buf[10] = 0; // compression\r\n        buf[11] = 0; // filter\r\n        buf[12] = 0; // interlace\r\n        return this._packChunk(constants.TYPE_IHDR, buf);\r\n    };\r\n    Packer.prototype.packIDAT = function (data) {\r\n        return this._packChunk(constants.TYPE_IDAT, data);\r\n    };\r\n    Packer.prototype.packIEND = function () {\r\n        return this._packChunk(constants.TYPE_IEND, null);\r\n    };\r\n});\r\nvar packerAsync = createCommonjsModule(function (module) {\r\n    var PackerAsync = module.exports = function (opt) {\r\n        stream.call(this);\r\n        var options = opt || {};\r\n        this._packer = new packer$1(options);\r\n        this._deflate = this._packer.createDeflate();\r\n        this.readable = true;\r\n    };\r\n    util.inherits(PackerAsync, stream);\r\n    PackerAsync.prototype.pack = function (data, width, height, gamma) {\r\n        // Signature\r\n        this.emit('data', new Buffer(constants.PNG_SIGNATURE));\r\n        this.emit('data', this._packer.packIHDR(width, height));\r\n        if (gamma) {\r\n            this.emit('data', this._packer.packGAMA(gamma));\r\n        }\r\n        var filteredData = this._packer.filterData(data, width, height);\r\n        // compress it\r\n        this._deflate.on('error', this.emit.bind(this, 'error'));\r\n        this._deflate.on('data', function (compressedData) {\r\n            this.emit('data', this._packer.packIDAT(compressedData));\r\n        }.bind(this));\r\n        this._deflate.on('end', function () {\r\n            this.emit('data', this._packer.packIEND());\r\n            this.emit('end');\r\n        }.bind(this));\r\n        this._deflate.end(filteredData);\r\n    };\r\n});\r\nvar syncInflate = createCommonjsModule(function (module, exports) {\r\n    var assert$1 = assert.ok;\r\n    var kMaxLength = buffer$1.kMaxLength;\r\n    function Inflate(opts) {\r\n        if (!(this instanceof Inflate)) {\r\n            return new Inflate(opts);\r\n        }\r\n        if (opts && opts.chunkSize < zlib.Z_MIN_CHUNK) {\r\n            opts.chunkSize = zlib.Z_MIN_CHUNK;\r\n        }\r\n        zlib.Inflate.call(this, opts);\r\n        // Node 8 --> 9 compatibility check\r\n        this._offset = this._offset === undefined ? this._outOffset : this._offset;\r\n        this._buffer = this._buffer || this._outBuffer;\r\n        if (opts && opts.maxLength != null) {\r\n            this._maxLength = opts.maxLength;\r\n        }\r\n    }\r\n    function createInflate(opts) {\r\n        return new Inflate(opts);\r\n    }\r\n    function _close(engine, callback) {\r\n        if (callback) {\r\n            process.nextTick(callback);\r\n        }\r\n        // Caller may invoke .close after a zlib error (which will null _handle).\r\n        if (!engine._handle) {\r\n            return;\r\n        }\r\n        engine._handle.close();\r\n        engine._handle = null;\r\n    }\r\n    Inflate.prototype._processChunk = function (chunk, flushFlag, asyncCb) {\r\n        if (typeof asyncCb === 'function') {\r\n            return zlib.Inflate._processChunk.call(this, chunk, flushFlag, asyncCb);\r\n        }\r\n        var self = this;\r\n        var availInBefore = chunk && chunk.length;\r\n        var availOutBefore = this._chunkSize - this._offset;\r\n        var leftToInflate = this._maxLength;\r\n        var inOff = 0;\r\n        var buffers = [];\r\n        var nread = 0;\r\n        var error;\r\n        this.on('error', function (err) {\r\n            error = err;\r\n        });\r\n        function handleChunk(availInAfter, availOutAfter) {\r\n            if (self._hadError) {\r\n                return;\r\n            }\r\n            var have = availOutBefore - availOutAfter;\r\n            assert$1(have >= 0, 'have should not go down');\r\n            if (have > 0) {\r\n                var out = self._buffer.slice(self._offset, self._offset + have);\r\n                self._offset += have;\r\n                if (out.length > leftToInflate) {\r\n                    out = out.slice(0, leftToInflate);\r\n                }\r\n                buffers.push(out);\r\n                nread += out.length;\r\n                leftToInflate -= out.length;\r\n                if (leftToInflate === 0) {\r\n                    return false;\r\n                }\r\n            }\r\n            if (availOutAfter === 0 || self._offset >= self._chunkSize) {\r\n                availOutBefore = self._chunkSize;\r\n                self._offset = 0;\r\n                self._buffer = Buffer.allocUnsafe(self._chunkSize);\r\n            }\r\n            if (availOutAfter === 0) {\r\n                inOff += (availInBefore - availInAfter);\r\n                availInBefore = availInAfter;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        assert$1(this._handle, 'zlib binding closed');\r\n        do {\r\n            var res = this._handle.writeSync(flushFlag, chunk, // in\r\n            inOff, // in_off\r\n            availInBefore, // in_len\r\n            this._buffer, // out\r\n            this._offset, //out_off\r\n            availOutBefore); // out_len\r\n            // Node 8 --> 9 compatibility check\r\n            res = res || this._writeState;\r\n        } while (!this._hadError && handleChunk(res[0], res[1]));\r\n        if (this._hadError) {\r\n            throw error;\r\n        }\r\n        if (nread >= kMaxLength) {\r\n            _close(this);\r\n            throw new RangeError('Cannot create final Buffer. It would be larger than 0x' + kMaxLength.toString(16) + ' bytes');\r\n        }\r\n        var buf = Buffer.concat(buffers, nread);\r\n        _close(this);\r\n        return buf;\r\n    };\r\n    util.inherits(Inflate, zlib.Inflate);\r\n    function zlibBufferSync(engine, buffer) {\r\n        if (typeof buffer === 'string') {\r\n            buffer = Buffer.from(buffer);\r\n        }\r\n        if (!(buffer instanceof Buffer)) {\r\n            throw new TypeError('Not a string or buffer');\r\n        }\r\n        var flushFlag = engine._finishFlushFlag;\r\n        if (flushFlag == null) {\r\n            flushFlag = zlib.Z_FINISH;\r\n        }\r\n        return engine._processChunk(buffer, flushFlag);\r\n    }\r\n    function inflateSync(buffer, opts) {\r\n        return zlibBufferSync(new Inflate(opts), buffer);\r\n    }\r\n    module.exports = exports = inflateSync;\r\n    exports.Inflate = Inflate;\r\n    exports.createInflate = createInflate;\r\n    exports.inflateSync = inflateSync;\r\n});\r\nvar syncReader = createCommonjsModule(function (module) {\r\n    var SyncReader = module.exports = function (buffer) {\r\n        this._buffer = buffer;\r\n        this._reads = [];\r\n    };\r\n    SyncReader.prototype.read = function (length, callback) {\r\n        this._reads.push({\r\n            length: Math.abs(length),\r\n            allowLess: length < 0,\r\n            func: callback\r\n        });\r\n    };\r\n    SyncReader.prototype.process = function () {\r\n        // as long as there is any data and read requests\r\n        while (this._reads.length > 0 && this._buffer.length) {\r\n            var read = this._reads[0];\r\n            if (this._buffer.length && (this._buffer.length >= read.length || read.allowLess)) {\r\n                // ok there is any data so that we can satisfy this request\r\n                this._reads.shift(); // == read\r\n                var buf = this._buffer;\r\n                this._buffer = buf.slice(read.length);\r\n                read.func.call(this, buf.slice(0, read.length));\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        if (this._reads.length > 0) {\r\n            return new Error('There are some read requests waitng on finished stream');\r\n        }\r\n        if (this._buffer.length > 0) {\r\n            return new Error('unrecognised content at end of stream');\r\n        }\r\n    };\r\n});\r\nvar syncReader$1 = createCommonjsModule(function (module) {\r\n    var SyncReader = module.exports = function (buffer) {\r\n        this._buffer = buffer;\r\n        this._reads = [];\r\n    };\r\n    SyncReader.prototype.read = function (length, callback) {\r\n        this._reads.push({\r\n            length: Math.abs(length),\r\n            allowLess: length < 0,\r\n            func: callback\r\n        });\r\n    };\r\n    SyncReader.prototype.process = function () {\r\n        // as long as there is any data and read requests\r\n        while (this._reads.length > 0 && this._buffer.length) {\r\n            var read = this._reads[0];\r\n            if (this._buffer.length && (this._buffer.length >= read.length || read.allowLess)) {\r\n                // ok there is any data so that we can satisfy this request\r\n                this._reads.shift(); // == read\r\n                var buf = this._buffer;\r\n                this._buffer = buf.slice(read.length);\r\n                read.func.call(this, buf.slice(0, read.length));\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        if (this._reads.length > 0) {\r\n            return new Error('There are some read requests waitng on finished stream');\r\n        }\r\n        if (this._buffer.length > 0) {\r\n            return new Error('unrecognised content at end of stream');\r\n        }\r\n    };\r\n});\r\nvar syncInflate$1 = createCommonjsModule(function (module, exports) {\r\n    var assert$1 = assert.ok;\r\n    var kMaxLength = buffer$1.kMaxLength;\r\n    function Inflate(opts) {\r\n        if (!(this instanceof Inflate)) {\r\n            return new Inflate(opts);\r\n        }\r\n        if (opts && opts.chunkSize < zlib.Z_MIN_CHUNK) {\r\n            opts.chunkSize = zlib.Z_MIN_CHUNK;\r\n        }\r\n        zlib.Inflate.call(this, opts);\r\n        // Node 8 --> 9 compatibility check\r\n        this._offset = this._offset === undefined ? this._outOffset : this._offset;\r\n        this._buffer = this._buffer || this._outBuffer;\r\n        if (opts && opts.maxLength != null) {\r\n            this._maxLength = opts.maxLength;\r\n        }\r\n    }\r\n    function createInflate(opts) {\r\n        return new Inflate(opts);\r\n    }\r\n    function _close(engine, callback) {\r\n        if (callback) {\r\n            process.nextTick(callback);\r\n        }\r\n        // Caller may invoke .close after a zlib error (which will null _handle).\r\n        if (!engine._handle) {\r\n            return;\r\n        }\r\n        engine._handle.close();\r\n        engine._handle = null;\r\n    }\r\n    Inflate.prototype._processChunk = function (chunk, flushFlag, asyncCb) {\r\n        if (typeof asyncCb === 'function') {\r\n            return zlib.Inflate._processChunk.call(this, chunk, flushFlag, asyncCb);\r\n        }\r\n        var self = this;\r\n        var availInBefore = chunk && chunk.length;\r\n        var availOutBefore = this._chunkSize - this._offset;\r\n        var leftToInflate = this._maxLength;\r\n        var inOff = 0;\r\n        var buffers = [];\r\n        var nread = 0;\r\n        var error;\r\n        this.on('error', function (err) {\r\n            error = err;\r\n        });\r\n        function handleChunk(availInAfter, availOutAfter) {\r\n            if (self._hadError) {\r\n                return;\r\n            }\r\n            var have = availOutBefore - availOutAfter;\r\n            assert$1(have >= 0, 'have should not go down');\r\n            if (have > 0) {\r\n                var out = self._buffer.slice(self._offset, self._offset + have);\r\n                self._offset += have;\r\n                if (out.length > leftToInflate) {\r\n                    out = out.slice(0, leftToInflate);\r\n                }\r\n                buffers.push(out);\r\n                nread += out.length;\r\n                leftToInflate -= out.length;\r\n                if (leftToInflate === 0) {\r\n                    return false;\r\n                }\r\n            }\r\n            if (availOutAfter === 0 || self._offset >= self._chunkSize) {\r\n                availOutBefore = self._chunkSize;\r\n                self._offset = 0;\r\n                self._buffer = Buffer.allocUnsafe(self._chunkSize);\r\n            }\r\n            if (availOutAfter === 0) {\r\n                inOff += (availInBefore - availInAfter);\r\n                availInBefore = availInAfter;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        assert$1(this._handle, 'zlib binding closed');\r\n        do {\r\n            var res = this._handle.writeSync(flushFlag, chunk, // in\r\n            inOff, // in_off\r\n            availInBefore, // in_len\r\n            this._buffer, // out\r\n            this._offset, //out_off\r\n            availOutBefore); // out_len\r\n            // Node 8 --> 9 compatibility check\r\n            res = res || this._writeState;\r\n        } while (!this._hadError && handleChunk(res[0], res[1]));\r\n        if (this._hadError) {\r\n            throw error;\r\n        }\r\n        if (nread >= kMaxLength) {\r\n            _close(this);\r\n            throw new RangeError('Cannot create final Buffer. It would be larger than 0x' + kMaxLength.toString(16) + ' bytes');\r\n        }\r\n        var buf = Buffer.concat(buffers, nread);\r\n        _close(this);\r\n        return buf;\r\n    };\r\n    util.inherits(Inflate, zlib.Inflate);\r\n    function zlibBufferSync(engine, buffer) {\r\n        if (typeof buffer === 'string') {\r\n            buffer = Buffer.from(buffer);\r\n        }\r\n        if (!(buffer instanceof Buffer)) {\r\n            throw new TypeError('Not a string or buffer');\r\n        }\r\n        var flushFlag = engine._finishFlushFlag;\r\n        if (flushFlag == null) {\r\n            flushFlag = zlib.Z_FINISH;\r\n        }\r\n        return engine._processChunk(buffer, flushFlag);\r\n    }\r\n    function inflateSync(buffer, opts) {\r\n        return zlibBufferSync(new Inflate(opts), buffer);\r\n    }\r\n    module.exports = exports = inflateSync;\r\n    exports.Inflate = Inflate;\r\n    exports.createInflate = createInflate;\r\n    exports.inflateSync = inflateSync;\r\n});\r\nvar process_1 = function (inBuffer, bitmapInfo) {\r\n    var outBuffers = [];\r\n    var reader = new syncReader$1(inBuffer);\r\n    var filter = new filterParse$1(bitmapInfo, {\r\n        read: reader.read.bind(reader),\r\n        write: function (bufferPart) {\r\n            outBuffers.push(bufferPart);\r\n        },\r\n        complete: function () {\r\n        }\r\n    });\r\n    filter.start();\r\n    reader.process();\r\n    return Buffer.concat(outBuffers);\r\n};\r\nvar filterParseSync = {\r\n    process: process_1\r\n};\r\nvar hasSyncZlib = true;\r\nif (!zlib.deflateSync) {\r\n    hasSyncZlib = false;\r\n}\r\nvar parserSync = function (buffer, options) {\r\n    if (!hasSyncZlib) {\r\n        throw new Error('To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0');\r\n    }\r\n    var err;\r\n    function handleError(_err_) {\r\n        err = _err_;\r\n    }\r\n    var metaData;\r\n    function handleMetaData(_metaData_) {\r\n        metaData = _metaData_;\r\n    }\r\n    function handleTransColor(transColor) {\r\n        metaData.transColor = transColor;\r\n    }\r\n    function handlePalette(palette) {\r\n        metaData.palette = palette;\r\n    }\r\n    function handleSimpleTransparency() {\r\n        metaData.alpha = true;\r\n    }\r\n    var gamma;\r\n    function handleGamma(_gamma_) {\r\n        gamma = _gamma_;\r\n    }\r\n    var inflateDataList = [];\r\n    function handleInflateData(inflatedData) {\r\n        inflateDataList.push(inflatedData);\r\n    }\r\n    var reader = new syncReader$1(buffer);\r\n    var parser = new parser$1(options, {\r\n        read: reader.read.bind(reader),\r\n        error: handleError,\r\n        metadata: handleMetaData,\r\n        gamma: handleGamma,\r\n        palette: handlePalette,\r\n        transColor: handleTransColor,\r\n        inflateData: handleInflateData,\r\n        simpleTransparency: handleSimpleTransparency\r\n    });\r\n    parser.start();\r\n    reader.process();\r\n    if (err) {\r\n        throw err;\r\n    }\r\n    //join together the inflate datas\r\n    var inflateData = Buffer.concat(inflateDataList);\r\n    inflateDataList.length = 0;\r\n    var inflatedData;\r\n    if (metaData.interlace) {\r\n        inflatedData = zlib.inflateSync(inflateData);\r\n    }\r\n    else {\r\n        var rowSize = ((metaData.width * metaData.bpp * metaData.depth + 7) >> 3) + 1;\r\n        var imageSize = rowSize * metaData.height;\r\n        inflatedData = syncInflate$1(inflateData, { chunkSize: imageSize, maxLength: imageSize });\r\n    }\r\n    inflateData = null;\r\n    if (!inflatedData || !inflatedData.length) {\r\n        throw new Error('bad png - invalid inflate data response');\r\n    }\r\n    var unfilteredData = filterParseSync.process(inflatedData, metaData);\r\n    inflateData = null;\r\n    var bitmapData = bitmapper.dataToBitMap(unfilteredData, metaData);\r\n    unfilteredData = null;\r\n    var normalisedBitmapData = formatNormaliser(bitmapData, metaData);\r\n    metaData.data = normalisedBitmapData;\r\n    metaData.gamma = gamma || 0;\r\n    return metaData;\r\n};\r\nvar hasSyncZlib$1 = true;\r\nif (!zlib.deflateSync) {\r\n    hasSyncZlib$1 = false;\r\n}\r\nvar packerSync = function (metaData, opt) {\r\n    if (!hasSyncZlib$1) {\r\n        throw new Error('To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0');\r\n    }\r\n    var options = opt || {};\r\n    var packer = new packer$1(options);\r\n    var chunks = [];\r\n    // Signature\r\n    chunks.push(new Buffer(constants.PNG_SIGNATURE));\r\n    // Header\r\n    chunks.push(packer.packIHDR(metaData.width, metaData.height));\r\n    if (metaData.gamma) {\r\n        chunks.push(packer.packGAMA(metaData.gamma));\r\n    }\r\n    var filteredData = packer.filterData(metaData.data, metaData.width, metaData.height);\r\n    // compress it\r\n    var compressedData = zlib.deflateSync(filteredData, packer.getDeflateOptions());\r\n    filteredData = null;\r\n    if (!compressedData || !compressedData.length) {\r\n        throw new Error('bad png - invalid compressed data response');\r\n    }\r\n    chunks.push(packer.packIDAT(compressedData));\r\n    // End\r\n    chunks.push(packer.packIEND());\r\n    return Buffer.concat(chunks);\r\n};\r\nvar parserAsync$1 = createCommonjsModule(function (module) {\r\n    var ParserAsync = module.exports = function (options) {\r\n        chunkstream$1.call(this);\r\n        this._parser = new parser$1(options, {\r\n            read: this.read.bind(this),\r\n            error: this._handleError.bind(this),\r\n            metadata: this._handleMetaData.bind(this),\r\n            gamma: this.emit.bind(this, 'gamma'),\r\n            palette: this._handlePalette.bind(this),\r\n            transColor: this._handleTransColor.bind(this),\r\n            finished: this._finished.bind(this),\r\n            inflateData: this._inflateData.bind(this),\r\n            simpleTransparency: this._simpleTransparency.bind(this),\r\n            headersFinished: this._headersFinished.bind(this)\r\n        });\r\n        this._options = options;\r\n        this.writable = true;\r\n        this._parser.start();\r\n    };\r\n    util.inherits(ParserAsync, chunkstream$1);\r\n    ParserAsync.prototype._handleError = function (err) {\r\n        this.emit('error', err);\r\n        this.writable = false;\r\n        this.destroy();\r\n        if (this._inflate && this._inflate.destroy) {\r\n            this._inflate.destroy();\r\n        }\r\n        if (this._filter) {\r\n            this._filter.destroy();\r\n            // For backward compatibility with Node 7 and below.\r\n            // Suppress errors due to _inflate calling write() even after\r\n            // it's destroy()'ed.\r\n            this._filter.on('error', function () { });\r\n        }\r\n        this.errord = true;\r\n    };\r\n    ParserAsync.prototype._inflateData = function (data) {\r\n        if (!this._inflate) {\r\n            if (this._bitmapInfo.interlace) {\r\n                this._inflate = zlib.createInflate();\r\n                this._inflate.on('error', this.emit.bind(this, 'error'));\r\n                this._filter.on('complete', this._complete.bind(this));\r\n                this._inflate.pipe(this._filter);\r\n            }\r\n            else {\r\n                var rowSize = ((this._bitmapInfo.width * this._bitmapInfo.bpp * this._bitmapInfo.depth + 7) >> 3) + 1;\r\n                var imageSize = rowSize * this._bitmapInfo.height;\r\n                var chunkSize = Math.max(imageSize, zlib.Z_MIN_CHUNK);\r\n                this._inflate = zlib.createInflate({ chunkSize: chunkSize });\r\n                var leftToInflate = imageSize;\r\n                var emitError = this.emit.bind(this, 'error');\r\n                this._inflate.on('error', function (err) {\r\n                    if (!leftToInflate) {\r\n                        return;\r\n                    }\r\n                    emitError(err);\r\n                });\r\n                this._filter.on('complete', this._complete.bind(this));\r\n                var filterWrite = this._filter.write.bind(this._filter);\r\n                this._inflate.on('data', function (chunk) {\r\n                    if (!leftToInflate) {\r\n                        return;\r\n                    }\r\n                    if (chunk.length > leftToInflate) {\r\n                        chunk = chunk.slice(0, leftToInflate);\r\n                    }\r\n                    leftToInflate -= chunk.length;\r\n                    filterWrite(chunk);\r\n                });\r\n                this._inflate.on('end', this._filter.end.bind(this._filter));\r\n            }\r\n        }\r\n        this._inflate.write(data);\r\n    };\r\n    ParserAsync.prototype._handleMetaData = function (metaData) {\r\n        this._metaData = metaData;\r\n        this._bitmapInfo = Object.create(metaData);\r\n        this._filter = new filterParseAsync$1(this._bitmapInfo);\r\n    };\r\n    ParserAsync.prototype._handleTransColor = function (transColor) {\r\n        this._bitmapInfo.transColor = transColor;\r\n    };\r\n    ParserAsync.prototype._handlePalette = function (palette) {\r\n        this._bitmapInfo.palette = palette;\r\n    };\r\n    ParserAsync.prototype._simpleTransparency = function () {\r\n        this._metaData.alpha = true;\r\n    };\r\n    ParserAsync.prototype._headersFinished = function () {\r\n        // Up until this point, we don't know if we have a tRNS chunk (alpha)\r\n        // so we can't emit metadata any earlier\r\n        this.emit('metadata', this._metaData);\r\n    };\r\n    ParserAsync.prototype._finished = function () {\r\n        if (this.errord) {\r\n            return;\r\n        }\r\n        if (!this._inflate) {\r\n            this.emit('error', 'No Inflate block');\r\n        }\r\n        else {\r\n            // no more data to inflate\r\n            this._inflate.end();\r\n        }\r\n        this.destroySoon();\r\n    };\r\n    ParserAsync.prototype._complete = function (filteredData) {\r\n        if (this.errord) {\r\n            return;\r\n        }\r\n        try {\r\n            var bitmapData = bitmapper.dataToBitMap(filteredData, this._bitmapInfo);\r\n            var normalisedBitmapData = formatNormaliser(bitmapData, this._bitmapInfo);\r\n            bitmapData = null;\r\n        }\r\n        catch (ex) {\r\n            this._handleError(ex);\r\n            return;\r\n        }\r\n        this.emit('parsed', normalisedBitmapData);\r\n    };\r\n});\r\nvar packerAsync$1 = createCommonjsModule(function (module) {\r\n    var PackerAsync = module.exports = function (opt) {\r\n        stream.call(this);\r\n        var options = opt || {};\r\n        this._packer = new packer$1(options);\r\n        this._deflate = this._packer.createDeflate();\r\n        this.readable = true;\r\n    };\r\n    util.inherits(PackerAsync, stream);\r\n    PackerAsync.prototype.pack = function (data, width, height, gamma) {\r\n        // Signature\r\n        this.emit('data', new Buffer(constants.PNG_SIGNATURE));\r\n        this.emit('data', this._packer.packIHDR(width, height));\r\n        if (gamma) {\r\n            this.emit('data', this._packer.packGAMA(gamma));\r\n        }\r\n        var filteredData = this._packer.filterData(data, width, height);\r\n        // compress it\r\n        this._deflate.on('error', this.emit.bind(this, 'error'));\r\n        this._deflate.on('data', function (compressedData) {\r\n            this.emit('data', this._packer.packIDAT(compressedData));\r\n        }.bind(this));\r\n        this._deflate.on('end', function () {\r\n            this.emit('data', this._packer.packIEND());\r\n            this.emit('end');\r\n        }.bind(this));\r\n        this._deflate.end(filteredData);\r\n    };\r\n});\r\nvar read = function (buffer, options) {\r\n    return parserSync(buffer, options || {});\r\n};\r\nvar write = function (png, options) {\r\n    return packerSync(png, options);\r\n};\r\nvar pngSync = {\r\n    read: read,\r\n    write: write\r\n};\r\nvar png = createCommonjsModule(function (module, exports) {\r\n    var PNG = exports.PNG = function (options) {\r\n        stream.call(this);\r\n        options = options || {}; // eslint-disable-line no-param-reassign\r\n        // coerce pixel dimensions to integers (also coerces undefined -> 0):\r\n        this.width = options.width | 0;\r\n        this.height = options.height | 0;\r\n        this.data = this.width > 0 && this.height > 0 ?\r\n            new Buffer(4 * this.width * this.height) : null;\r\n        if (options.fill && this.data) {\r\n            this.data.fill(0);\r\n        }\r\n        this.gamma = 0;\r\n        this.readable = this.writable = true;\r\n        this._parser = new parserAsync$1(options);\r\n        this._parser.on('error', this.emit.bind(this, 'error'));\r\n        this._parser.on('close', this._handleClose.bind(this));\r\n        this._parser.on('metadata', this._metadata.bind(this));\r\n        this._parser.on('gamma', this._gamma.bind(this));\r\n        this._parser.on('parsed', function (data) {\r\n            this.data = data;\r\n            this.emit('parsed', data);\r\n        }.bind(this));\r\n        this._packer = new packerAsync$1(options);\r\n        this._packer.on('data', this.emit.bind(this, 'data'));\r\n        this._packer.on('end', this.emit.bind(this, 'end'));\r\n        this._parser.on('close', this._handleClose.bind(this));\r\n        this._packer.on('error', this.emit.bind(this, 'error'));\r\n    };\r\n    util.inherits(PNG, stream);\r\n    PNG.sync = pngSync;\r\n    PNG.prototype.pack = function () {\r\n        if (!this.data || !this.data.length) {\r\n            this.emit('error', 'No data provided');\r\n            return this;\r\n        }\r\n        process.nextTick(function () {\r\n            this._packer.pack(this.data, this.width, this.height, this.gamma);\r\n        }.bind(this));\r\n        return this;\r\n    };\r\n    PNG.prototype.parse = function (data, callback) {\r\n        if (callback) {\r\n            var onParsed, onError;\r\n            onParsed = function (parsedData) {\r\n                this.removeListener('error', onError);\r\n                this.data = parsedData;\r\n                callback(null, this);\r\n            }.bind(this);\r\n            onError = function (err) {\r\n                this.removeListener('parsed', onParsed);\r\n                callback(err, null);\r\n            }.bind(this);\r\n            this.once('parsed', onParsed);\r\n            this.once('error', onError);\r\n        }\r\n        this.end(data);\r\n        return this;\r\n    };\r\n    PNG.prototype.write = function (data) {\r\n        this._parser.write(data);\r\n        return true;\r\n    };\r\n    PNG.prototype.end = function (data) {\r\n        this._parser.end(data);\r\n    };\r\n    PNG.prototype._metadata = function (metadata) {\r\n        this.width = metadata.width;\r\n        this.height = metadata.height;\r\n        this.emit('metadata', metadata);\r\n    };\r\n    PNG.prototype._gamma = function (gamma) {\r\n        this.gamma = gamma;\r\n    };\r\n    PNG.prototype._handleClose = function () {\r\n        if (!this._parser.writable && !this._packer.readable) {\r\n            this.emit('close');\r\n        }\r\n    };\r\n    PNG.bitblt = function (src, dst, srcX, srcY, width, height, deltaX, deltaY) {\r\n        // coerce pixel dimensions to integers (also coerces undefined -> 0):\r\n        /* eslint-disable no-param-reassign */\r\n        srcX |= 0;\r\n        srcY |= 0;\r\n        width |= 0;\r\n        height |= 0;\r\n        deltaX |= 0;\r\n        deltaY |= 0;\r\n        /* eslint-enable no-param-reassign */\r\n        if (srcX > src.width || srcY > src.height || srcX + width > src.width || srcY + height > src.height) {\r\n            throw new Error('bitblt reading outside image');\r\n        }\r\n        if (deltaX > dst.width || deltaY > dst.height || deltaX + width > dst.width || deltaY + height > dst.height) {\r\n            throw new Error('bitblt writing outside image');\r\n        }\r\n        for (var y = 0; y < height; y++) {\r\n            src.data.copy(dst.data, ((deltaY + y) * dst.width + deltaX) << 2, ((srcY + y) * src.width + srcX) << 2, ((srcY + y) * src.width + srcX + width) << 2);\r\n        }\r\n    };\r\n    PNG.prototype.bitblt = function (dst, srcX, srcY, width, height, deltaX, deltaY) {\r\n        PNG.bitblt(this, dst, srcX, srcY, width, height, deltaX, deltaY);\r\n        return this;\r\n    };\r\n    PNG.adjustGamma = function (src) {\r\n        if (src.gamma) {\r\n            for (var y = 0; y < src.height; y++) {\r\n                for (var x = 0; x < src.width; x++) {\r\n                    var idx = (src.width * y + x) << 2;\r\n                    for (var i = 0; i < 3; i++) {\r\n                        var sample = src.data[idx + i] / 255;\r\n                        sample = Math.pow(sample, 1 / 2.2 / src.gamma);\r\n                        src.data[idx + i] = Math.round(sample * 255);\r\n                    }\r\n                }\r\n            }\r\n            src.gamma = 0;\r\n        }\r\n    };\r\n    PNG.prototype.adjustGamma = function () {\r\n        PNG.adjustGamma(this);\r\n    };\r\n});\r\nvar utils$1 = createCommonjsModule(function (module, exports) {\r\n    function hex2rgba(hex) {\r\n        if (typeof hex === 'number') {\r\n            hex = hex.toString();\r\n        }\r\n        if (typeof hex !== 'string') {\r\n            throw new Error('Color should be defined as hex string');\r\n        }\r\n        var hexCode = hex.slice().replace('#', '').split('');\r\n        if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\r\n            throw new Error('Invalid hex color: ' + hex);\r\n        }\r\n        // Convert from short to long form (fff -> ffffff)\r\n        if (hexCode.length === 3 || hexCode.length === 4) {\r\n            hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\r\n                return [c, c];\r\n            }));\r\n        }\r\n        // Add default alpha value\r\n        if (hexCode.length === 6)\r\n            hexCode.push('F', 'F');\r\n        var hexValue = parseInt(hexCode.join(''), 16);\r\n        return {\r\n            r: (hexValue >> 24) & 255,\r\n            g: (hexValue >> 16) & 255,\r\n            b: (hexValue >> 8) & 255,\r\n            a: hexValue & 255,\r\n            hex: '#' + hexCode.slice(0, 6).join('')\r\n        };\r\n    }\r\n    exports.getOptions = function getOptions(options) {\r\n        if (!options)\r\n            options = {};\r\n        if (!options.color)\r\n            options.color = {};\r\n        var margin = typeof options.margin === 'undefined' ||\r\n            options.margin === null ||\r\n            options.margin < 0 ? 4 : options.margin;\r\n        var width = options.width && options.width >= 21 ? options.width : undefined;\r\n        var scale = options.scale || 4;\r\n        return {\r\n            width: width,\r\n            scale: width ? 4 : scale,\r\n            margin: margin,\r\n            color: {\r\n                dark: hex2rgba(options.color.dark || '#000000ff'),\r\n                light: hex2rgba(options.color.light || '#ffffffff')\r\n            },\r\n            type: options.type,\r\n            rendererOpts: options.rendererOpts || {}\r\n        };\r\n    };\r\n    exports.getScale = function getScale(qrSize, opts) {\r\n        return opts.width && opts.width >= qrSize + opts.margin * 2\r\n            ? opts.width / (qrSize + opts.margin * 2)\r\n            : opts.scale;\r\n    };\r\n    exports.getImageWidth = function getImageWidth(qrSize, opts) {\r\n        var scale = exports.getScale(qrSize, opts);\r\n        return Math.floor((qrSize + opts.margin * 2) * scale);\r\n    };\r\n    exports.qrToImageData = function qrToImageData(imgData, qr, opts) {\r\n        var size = qr.modules.size;\r\n        var data = qr.modules.data;\r\n        var scale = exports.getScale(size, opts);\r\n        var symbolSize = Math.floor((size + opts.margin * 2) * scale);\r\n        var scaledMargin = opts.margin * scale;\r\n        var palette = [opts.color.light, opts.color.dark];\r\n        for (var i = 0; i < symbolSize; i++) {\r\n            for (var j = 0; j < symbolSize; j++) {\r\n                var posDst = (i * symbolSize + j) * 4;\r\n                var pxColor = opts.color.light;\r\n                if (i >= scaledMargin && j >= scaledMargin &&\r\n                    i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\r\n                    var iSrc = Math.floor((i - scaledMargin) / scale);\r\n                    var jSrc = Math.floor((j - scaledMargin) / scale);\r\n                    pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0];\r\n                }\r\n                imgData[posDst++] = pxColor.r;\r\n                imgData[posDst++] = pxColor.g;\r\n                imgData[posDst++] = pxColor.b;\r\n                imgData[posDst] = pxColor.a;\r\n            }\r\n        }\r\n    };\r\n});\r\nvar png$1 = createCommonjsModule(function (module, exports) {\r\n    var PNG = exports.PNG = function (options) {\r\n        stream.call(this);\r\n        options = options || {}; // eslint-disable-line no-param-reassign\r\n        // coerce pixel dimensions to integers (also coerces undefined -> 0):\r\n        this.width = options.width | 0;\r\n        this.height = options.height | 0;\r\n        this.data = this.width > 0 && this.height > 0 ?\r\n            new Buffer(4 * this.width * this.height) : null;\r\n        if (options.fill && this.data) {\r\n            this.data.fill(0);\r\n        }\r\n        this.gamma = 0;\r\n        this.readable = this.writable = true;\r\n        this._parser = new parserAsync$1(options);\r\n        this._parser.on('error', this.emit.bind(this, 'error'));\r\n        this._parser.on('close', this._handleClose.bind(this));\r\n        this._parser.on('metadata', this._metadata.bind(this));\r\n        this._parser.on('gamma', this._gamma.bind(this));\r\n        this._parser.on('parsed', function (data) {\r\n            this.data = data;\r\n            this.emit('parsed', data);\r\n        }.bind(this));\r\n        this._packer = new packerAsync$1(options);\r\n        this._packer.on('data', this.emit.bind(this, 'data'));\r\n        this._packer.on('end', this.emit.bind(this, 'end'));\r\n        this._parser.on('close', this._handleClose.bind(this));\r\n        this._packer.on('error', this.emit.bind(this, 'error'));\r\n    };\r\n    util.inherits(PNG, stream);\r\n    PNG.sync = pngSync;\r\n    PNG.prototype.pack = function () {\r\n        if (!this.data || !this.data.length) {\r\n            this.emit('error', 'No data provided');\r\n            return this;\r\n        }\r\n        process.nextTick(function () {\r\n            this._packer.pack(this.data, this.width, this.height, this.gamma);\r\n        }.bind(this));\r\n        return this;\r\n    };\r\n    PNG.prototype.parse = function (data, callback) {\r\n        if (callback) {\r\n            var onParsed, onError;\r\n            onParsed = function (parsedData) {\r\n                this.removeListener('error', onError);\r\n                this.data = parsedData;\r\n                callback(null, this);\r\n            }.bind(this);\r\n            onError = function (err) {\r\n                this.removeListener('parsed', onParsed);\r\n                callback(err, null);\r\n            }.bind(this);\r\n            this.once('parsed', onParsed);\r\n            this.once('error', onError);\r\n        }\r\n        this.end(data);\r\n        return this;\r\n    };\r\n    PNG.prototype.write = function (data) {\r\n        this._parser.write(data);\r\n        return true;\r\n    };\r\n    PNG.prototype.end = function (data) {\r\n        this._parser.end(data);\r\n    };\r\n    PNG.prototype._metadata = function (metadata) {\r\n        this.width = metadata.width;\r\n        this.height = metadata.height;\r\n        this.emit('metadata', metadata);\r\n    };\r\n    PNG.prototype._gamma = function (gamma) {\r\n        this.gamma = gamma;\r\n    };\r\n    PNG.prototype._handleClose = function () {\r\n        if (!this._parser.writable && !this._packer.readable) {\r\n            this.emit('close');\r\n        }\r\n    };\r\n    PNG.bitblt = function (src, dst, srcX, srcY, width, height, deltaX, deltaY) {\r\n        // coerce pixel dimensions to integers (also coerces undefined -> 0):\r\n        /* eslint-disable no-param-reassign */\r\n        srcX |= 0;\r\n        srcY |= 0;\r\n        width |= 0;\r\n        height |= 0;\r\n        deltaX |= 0;\r\n        deltaY |= 0;\r\n        /* eslint-enable no-param-reassign */\r\n        if (srcX > src.width || srcY > src.height || srcX + width > src.width || srcY + height > src.height) {\r\n            throw new Error('bitblt reading outside image');\r\n        }\r\n        if (deltaX > dst.width || deltaY > dst.height || deltaX + width > dst.width || deltaY + height > dst.height) {\r\n            throw new Error('bitblt writing outside image');\r\n        }\r\n        for (var y = 0; y < height; y++) {\r\n            src.data.copy(dst.data, ((deltaY + y) * dst.width + deltaX) << 2, ((srcY + y) * src.width + srcX) << 2, ((srcY + y) * src.width + srcX + width) << 2);\r\n        }\r\n    };\r\n    PNG.prototype.bitblt = function (dst, srcX, srcY, width, height, deltaX, deltaY) {\r\n        PNG.bitblt(this, dst, srcX, srcY, width, height, deltaX, deltaY);\r\n        return this;\r\n    };\r\n    PNG.adjustGamma = function (src) {\r\n        if (src.gamma) {\r\n            for (var y = 0; y < src.height; y++) {\r\n                for (var x = 0; x < src.width; x++) {\r\n                    var idx = (src.width * y + x) << 2;\r\n                    for (var i = 0; i < 3; i++) {\r\n                        var sample = src.data[idx + i] / 255;\r\n                        sample = Math.pow(sample, 1 / 2.2 / src.gamma);\r\n                        src.data[idx + i] = Math.round(sample * 255);\r\n                    }\r\n                }\r\n            }\r\n            src.gamma = 0;\r\n        }\r\n    };\r\n    PNG.prototype.adjustGamma = function () {\r\n        PNG.adjustGamma(this);\r\n    };\r\n});\r\nvar utils$2 = createCommonjsModule(function (module, exports) {\r\n    function hex2rgba(hex) {\r\n        if (typeof hex === 'number') {\r\n            hex = hex.toString();\r\n        }\r\n        if (typeof hex !== 'string') {\r\n            throw new Error('Color should be defined as hex string');\r\n        }\r\n        var hexCode = hex.slice().replace('#', '').split('');\r\n        if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\r\n            throw new Error('Invalid hex color: ' + hex);\r\n        }\r\n        // Convert from short to long form (fff -> ffffff)\r\n        if (hexCode.length === 3 || hexCode.length === 4) {\r\n            hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\r\n                return [c, c];\r\n            }));\r\n        }\r\n        // Add default alpha value\r\n        if (hexCode.length === 6)\r\n            hexCode.push('F', 'F');\r\n        var hexValue = parseInt(hexCode.join(''), 16);\r\n        return {\r\n            r: (hexValue >> 24) & 255,\r\n            g: (hexValue >> 16) & 255,\r\n            b: (hexValue >> 8) & 255,\r\n            a: hexValue & 255,\r\n            hex: '#' + hexCode.slice(0, 6).join('')\r\n        };\r\n    }\r\n    exports.getOptions = function getOptions(options) {\r\n        if (!options)\r\n            options = {};\r\n        if (!options.color)\r\n            options.color = {};\r\n        var margin = typeof options.margin === 'undefined' ||\r\n            options.margin === null ||\r\n            options.margin < 0 ? 4 : options.margin;\r\n        var width = options.width && options.width >= 21 ? options.width : undefined;\r\n        var scale = options.scale || 4;\r\n        return {\r\n            width: width,\r\n            scale: width ? 4 : scale,\r\n            margin: margin,\r\n            color: {\r\n                dark: hex2rgba(options.color.dark || '#000000ff'),\r\n                light: hex2rgba(options.color.light || '#ffffffff')\r\n            },\r\n            type: options.type,\r\n            rendererOpts: options.rendererOpts || {}\r\n        };\r\n    };\r\n    exports.getScale = function getScale(qrSize, opts) {\r\n        return opts.width && opts.width >= qrSize + opts.margin * 2\r\n            ? opts.width / (qrSize + opts.margin * 2)\r\n            : opts.scale;\r\n    };\r\n    exports.getImageWidth = function getImageWidth(qrSize, opts) {\r\n        var scale = exports.getScale(qrSize, opts);\r\n        return Math.floor((qrSize + opts.margin * 2) * scale);\r\n    };\r\n    exports.qrToImageData = function qrToImageData(imgData, qr, opts) {\r\n        var size = qr.modules.size;\r\n        var data = qr.modules.data;\r\n        var scale = exports.getScale(size, opts);\r\n        var symbolSize = Math.floor((size + opts.margin * 2) * scale);\r\n        var scaledMargin = opts.margin * scale;\r\n        var palette = [opts.color.light, opts.color.dark];\r\n        for (var i = 0; i < symbolSize; i++) {\r\n            for (var j = 0; j < symbolSize; j++) {\r\n                var posDst = (i * symbolSize + j) * 4;\r\n                var pxColor = opts.color.light;\r\n                if (i >= scaledMargin && j >= scaledMargin &&\r\n                    i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\r\n                    var iSrc = Math.floor((i - scaledMargin) / scale);\r\n                    var jSrc = Math.floor((j - scaledMargin) / scale);\r\n                    pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0];\r\n                }\r\n                imgData[posDst++] = pxColor.r;\r\n                imgData[posDst++] = pxColor.g;\r\n                imgData[posDst++] = pxColor.b;\r\n                imgData[posDst] = pxColor.a;\r\n            }\r\n        }\r\n    };\r\n});\r\nvar png$2 = createCommonjsModule(function (module, exports) {\r\n    var PNG = png$1.PNG;\r\n    exports.render = function render(qrData, options) {\r\n        var opts = utils$2.getOptions(options);\r\n        var pngOpts = opts.rendererOpts;\r\n        var size = utils$2.getImageWidth(qrData.modules.size, opts);\r\n        pngOpts.width = size;\r\n        pngOpts.height = size;\r\n        var pngImage = new PNG(pngOpts);\r\n        utils$2.qrToImageData(pngImage.data, qrData, opts);\r\n        return pngImage;\r\n    };\r\n    exports.renderToDataURL = function renderToDataURL(qrData, options, cb) {\r\n        if (typeof cb === 'undefined') {\r\n            cb = options;\r\n            options = undefined;\r\n        }\r\n        exports.renderToBuffer(qrData, options, function (err, output) {\r\n            if (err)\r\n                cb(err);\r\n            var url = 'data:image/png;base64,';\r\n            url += output.toString('base64');\r\n            cb(null, url);\r\n        });\r\n    };\r\n    exports.renderToBuffer = function renderToBuffer(qrData, options, cb) {\r\n        if (typeof cb === 'undefined') {\r\n            cb = options;\r\n            options = undefined;\r\n        }\r\n        var png = exports.render(qrData, options);\r\n        var buffer = [];\r\n        png.on('error', cb);\r\n        png.on('data', function (data) {\r\n            buffer.push(data);\r\n        });\r\n        png.on('end', function () {\r\n            cb(null, Buffer.concat(buffer));\r\n        });\r\n        png.pack();\r\n    };\r\n    exports.renderToFile = function renderToFile(path, qrData, options, cb) {\r\n        if (typeof cb === 'undefined') {\r\n            cb = options;\r\n            options = undefined;\r\n        }\r\n        var stream = fs.createWriteStream(path);\r\n        stream.on('error', cb);\r\n        stream.on('close', cb);\r\n        exports.renderToFileStream(stream, qrData, options);\r\n    };\r\n    exports.renderToFileStream = function renderToFileStream(stream, qrData, options) {\r\n        var png = exports.render(qrData, options);\r\n        png.pack().pipe(stream);\r\n    };\r\n});\r\nvar utf8 = createCommonjsModule(function (module, exports) {\r\n    var BLOCK_CHAR = {\r\n        WW: ' ',\r\n        WB: '▄',\r\n        BB: '█',\r\n        BW: '▀'\r\n    };\r\n    var INVERTED_BLOCK_CHAR = {\r\n        BB: ' ',\r\n        BW: '▄',\r\n        WW: '█',\r\n        WB: '▀'\r\n    };\r\n    function getBlockChar(top, bottom, blocks) {\r\n        if (top && bottom)\r\n            return blocks.BB;\r\n        if (top && !bottom)\r\n            return blocks.BW;\r\n        if (!top && bottom)\r\n            return blocks.WB;\r\n        return blocks.WW;\r\n    }\r\n    exports.render = function (qrData, options, cb) {\r\n        var opts = utils$2.getOptions(options);\r\n        var blocks = BLOCK_CHAR;\r\n        if (opts.color.dark.hex === '#ffffff' || opts.color.light.hex === '#000000') {\r\n            blocks = INVERTED_BLOCK_CHAR;\r\n        }\r\n        var size = qrData.modules.size;\r\n        var data = qrData.modules.data;\r\n        var output = '';\r\n        var hMargin = Array(size + (opts.margin * 2) + 1).join(blocks.WW);\r\n        hMargin = Array((opts.margin / 2) + 1).join(hMargin + '\\n');\r\n        var vMargin = Array(opts.margin + 1).join(blocks.WW);\r\n        output += hMargin;\r\n        for (var i = 0; i < size; i += 2) {\r\n            output += vMargin;\r\n            for (var j = 0; j < size; j++) {\r\n                var topModule = data[i * size + j];\r\n                var bottomModule = data[(i + 1) * size + j];\r\n                output += getBlockChar(topModule, bottomModule, blocks);\r\n            }\r\n            output += vMargin + '\\n';\r\n        }\r\n        output += hMargin.slice(0, -1);\r\n        if (typeof cb === 'function') {\r\n            cb(null, output);\r\n        }\r\n        return output;\r\n    };\r\n    exports.renderToFile = function renderToFile(path, qrData, options, cb) {\r\n        if (typeof cb === 'undefined') {\r\n            cb = options;\r\n            options = undefined;\r\n        }\r\n        var fs$1 = fs;\r\n        var utf8 = exports.render(qrData, options);\r\n        fs$1.writeFile(path, utf8, cb);\r\n    };\r\n});\r\nfunction getColorAttrib(color, attrib) {\r\n    var alpha = color.a / 255;\r\n    var str = attrib + '=\"' + color.hex + '\"';\r\n    return alpha < 1\r\n        ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\r\n        : str;\r\n}\r\nfunction svgCmd(cmd, x, y) {\r\n    var str = cmd + x;\r\n    if (typeof y !== 'undefined')\r\n        str += ' ' + y;\r\n    return str;\r\n}\r\nfunction qrToPath(data, size, margin) {\r\n    var path = '';\r\n    var moveBy = 0;\r\n    var newRow = false;\r\n    var lineLength = 0;\r\n    for (var i = 0; i < data.length; i++) {\r\n        var col = Math.floor(i % size);\r\n        var row = Math.floor(i / size);\r\n        if (!col && !newRow)\r\n            newRow = true;\r\n        if (data[i]) {\r\n            lineLength++;\r\n            if (!(i > 0 && col > 0 && data[i - 1])) {\r\n                path += newRow\r\n                    ? svgCmd('M', col + margin, 0.5 + row + margin)\r\n                    : svgCmd('m', moveBy, 0);\r\n                moveBy = 0;\r\n                newRow = false;\r\n            }\r\n            if (!(col + 1 < size && data[i + 1])) {\r\n                path += svgCmd('h', lineLength);\r\n                lineLength = 0;\r\n            }\r\n        }\r\n        else {\r\n            moveBy++;\r\n        }\r\n    }\r\n    return path;\r\n}\r\nvar render = function render(qrData, options, cb) {\r\n    var opts = utils$2.getOptions(options);\r\n    var size = qrData.modules.size;\r\n    var data = qrData.modules.data;\r\n    var qrcodesize = size + opts.margin * 2;\r\n    var bg = !opts.color.light.a\r\n        ? ''\r\n        : '<path ' + getColorAttrib(opts.color.light, 'fill') +\r\n            ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>';\r\n    var path = '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\r\n        ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>';\r\n    var viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"';\r\n    var width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" ';\r\n    var svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n';\r\n    if (typeof cb === 'function') {\r\n        cb(null, svgTag);\r\n    }\r\n    return svgTag;\r\n};\r\nvar svgTag = {\r\n    render: render\r\n};\r\nvar svg = createCommonjsModule(function (module, exports) {\r\n    exports.render = svgTag.render;\r\n    exports.renderToFile = function renderToFile(path, qrData, options, cb) {\r\n        if (typeof cb === 'undefined') {\r\n            cb = options;\r\n            options = undefined;\r\n        }\r\n        var fs$1 = fs;\r\n        var svgTag = exports.render(qrData, options);\r\n        var xmlStr = '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\r\n            '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">' +\r\n            svgTag;\r\n        fs$1.writeFile(path, xmlStr, cb);\r\n    };\r\n});\r\nvar canvas = createCommonjsModule(function (module, exports) {\r\n    function clearCanvas(ctx, canvas, size) {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        if (!canvas.style)\r\n            canvas.style = {};\r\n        canvas.height = size;\r\n        canvas.width = size;\r\n        canvas.style.height = size + 'px';\r\n        canvas.style.width = size + 'px';\r\n    }\r\n    function getCanvasElement() {\r\n        try {\r\n            return document.createElement('canvas');\r\n        }\r\n        catch (e) {\r\n            throw new Error('You need to specify a canvas element');\r\n        }\r\n    }\r\n    exports.render = function render(qrData, canvas, options) {\r\n        var opts = options;\r\n        var canvasEl = canvas;\r\n        if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\r\n            opts = canvas;\r\n            canvas = undefined;\r\n        }\r\n        if (!canvas) {\r\n            canvasEl = getCanvasElement();\r\n        }\r\n        opts = utils$2.getOptions(opts);\r\n        var size = utils$2.getImageWidth(qrData.modules.size, opts);\r\n        var ctx = canvasEl.getContext('2d');\r\n        var image = ctx.createImageData(size, size);\r\n        utils$2.qrToImageData(image.data, qrData, opts);\r\n        clearCanvas(ctx, canvasEl, size);\r\n        ctx.putImageData(image, 0, 0);\r\n        return canvasEl;\r\n    };\r\n    exports.renderToDataURL = function renderToDataURL(qrData, canvas, options) {\r\n        var opts = options;\r\n        if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\r\n            opts = canvas;\r\n            canvas = undefined;\r\n        }\r\n        if (!opts)\r\n            opts = {};\r\n        var canvasEl = exports.render(qrData, canvas, opts);\r\n        var type = opts.type || 'image/png';\r\n        var rendererOpts = opts.rendererOpts || {};\r\n        return canvasEl.toDataURL(type, rendererOpts.quality);\r\n    };\r\n});\r\n// can-promise has a crash in some versions of react native that dont have\r\n// standard global objects\r\n// https://github.com/soldair/node-qrcode/issues/157\r\nvar canPromise = function () {\r\n    return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then;\r\n};\r\n/**\r\n * QRCode for JavaScript\r\n *\r\n * modified by Ryan Day for nodejs support\r\n * Copyright (c) 2011 Ryan Day\r\n *\r\n * Licensed under the MIT license:\r\n *   http://www.opensource.org/licenses/mit-license.php\r\n *\r\n//---------------------------------------------------------------------\r\n// QRCode for JavaScript\r\n//\r\n// Copyright (c) 2009 Kazuhiko Arase\r\n//\r\n// URL: http://www.d-project.com/\r\n//\r\n// Licensed under the MIT license:\r\n//   http://www.opensource.org/licenses/mit-license.php\r\n//\r\n// The word \"QR Code\" is registered trademark of\r\n// DENSO WAVE INCORPORATED\r\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\r\n//\r\n//---------------------------------------------------------------------\r\n*/\r\n/**\r\n * Add finder patterns bits to matrix\r\n *\r\n * @param  {BitMatrix} matrix  Modules matrix\r\n * @param  {Number}    version QR Code version\r\n */\r\nfunction setupFinderPattern(matrix, version) {\r\n    var size = matrix.size;\r\n    var pos = finderPattern.getPositions(version);\r\n    for (var i = 0; i < pos.length; i++) {\r\n        var row = pos[i][0];\r\n        var col = pos[i][1];\r\n        for (var r = -1; r <= 7; r++) {\r\n            if (row + r <= -1 || size <= row + r)\r\n                continue;\r\n            for (var c = -1; c <= 7; c++) {\r\n                if (col + c <= -1 || size <= col + c)\r\n                    continue;\r\n                if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\r\n                    (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\r\n                    (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\r\n                    matrix.set(row + r, col + c, true, true);\r\n                }\r\n                else {\r\n                    matrix.set(row + r, col + c, false, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Add timing pattern bits to matrix\r\n *\r\n * Note: this function must be called before {@link setupAlignmentPattern}\r\n *\r\n * @param  {BitMatrix} matrix Modules matrix\r\n */\r\nfunction setupTimingPattern(matrix) {\r\n    var size = matrix.size;\r\n    for (var r = 8; r < size - 8; r++) {\r\n        var value = r % 2 === 0;\r\n        matrix.set(r, 6, value, true);\r\n        matrix.set(6, r, value, true);\r\n    }\r\n}\r\n/**\r\n * Add alignment patterns bits to matrix\r\n *\r\n * Note: this function must be called after {@link setupTimingPattern}\r\n *\r\n * @param  {BitMatrix} matrix  Modules matrix\r\n * @param  {Number}    version QR Code version\r\n */\r\nfunction setupAlignmentPattern(matrix, version) {\r\n    var pos = alignmentPattern$1.getPositions(version);\r\n    for (var i = 0; i < pos.length; i++) {\r\n        var row = pos[i][0];\r\n        var col = pos[i][1];\r\n        for (var r = -2; r <= 2; r++) {\r\n            for (var c = -2; c <= 2; c++) {\r\n                if (r === -2 || r === 2 || c === -2 || c === 2 ||\r\n                    (r === 0 && c === 0)) {\r\n                    matrix.set(row + r, col + c, true, true);\r\n                }\r\n                else {\r\n                    matrix.set(row + r, col + c, false, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Add version info bits to matrix\r\n *\r\n * @param  {BitMatrix} matrix  Modules matrix\r\n * @param  {Number}    version QR Code version\r\n */\r\nfunction setupVersionInfo(matrix, version) {\r\n    var size = matrix.size;\r\n    var bits = version$1.getEncodedBits(version);\r\n    var row, col, mod;\r\n    for (var i = 0; i < 18; i++) {\r\n        row = Math.floor(i / 3);\r\n        col = i % 3 + size - 8 - 3;\r\n        mod = ((bits >> i) & 1) === 1;\r\n        matrix.set(row, col, mod, true);\r\n        matrix.set(col, row, mod, true);\r\n    }\r\n}\r\n/**\r\n * Add format info bits to matrix\r\n *\r\n * @param  {BitMatrix} matrix               Modules matrix\r\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\r\n * @param  {Number}    maskPattern          Mask pattern reference value\r\n */\r\nfunction setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {\r\n    var size = matrix.size;\r\n    var bits = formatInfo.getEncodedBits(errorCorrectionLevel, maskPattern);\r\n    var i, mod;\r\n    for (i = 0; i < 15; i++) {\r\n        mod = ((bits >> i) & 1) === 1;\r\n        // vertical\r\n        if (i < 6) {\r\n            matrix.set(i, 8, mod, true);\r\n        }\r\n        else if (i < 8) {\r\n            matrix.set(i + 1, 8, mod, true);\r\n        }\r\n        else {\r\n            matrix.set(size - 15 + i, 8, mod, true);\r\n        }\r\n        // horizontal\r\n        if (i < 8) {\r\n            matrix.set(8, size - i - 1, mod, true);\r\n        }\r\n        else if (i < 9) {\r\n            matrix.set(8, 15 - i - 1 + 1, mod, true);\r\n        }\r\n        else {\r\n            matrix.set(8, 15 - i - 1, mod, true);\r\n        }\r\n    }\r\n    // fixed module\r\n    matrix.set(size - 8, 8, 1, true);\r\n}\r\n/**\r\n * Add encoded data bits to matrix\r\n *\r\n * @param  {BitMatrix} matrix Modules matrix\r\n * @param  {Buffer}    data   Data codewords\r\n */\r\nfunction setupData(matrix, data) {\r\n    var size = matrix.size;\r\n    var inc = -1;\r\n    var row = size - 1;\r\n    var bitIndex = 7;\r\n    var byteIndex = 0;\r\n    for (var col = size - 1; col > 0; col -= 2) {\r\n        if (col === 6)\r\n            col--;\r\n        while (true) {\r\n            for (var c = 0; c < 2; c++) {\r\n                if (!matrix.isReserved(row, col - c)) {\r\n                    var dark = false;\r\n                    if (byteIndex < data.length) {\r\n                        dark = (((data[byteIndex] >>> bitIndex) & 1) === 1);\r\n                    }\r\n                    matrix.set(row, col - c, dark);\r\n                    bitIndex--;\r\n                    if (bitIndex === -1) {\r\n                        byteIndex++;\r\n                        bitIndex = 7;\r\n                    }\r\n                }\r\n            }\r\n            row += inc;\r\n            if (row < 0 || size <= row) {\r\n                row -= inc;\r\n                inc = -inc;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Create encoded codewords from data input\r\n *\r\n * @param  {Number}   version              QR Code version\r\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\r\n * @param  {ByteData} data                 Data input\r\n * @return {Buffer}                        Buffer containing encoded codewords\r\n */\r\nfunction createData(version, errorCorrectionLevel, segments) {\r\n    // Prepare data buffer\r\n    var buffer = new bitBuffer();\r\n    segments.forEach(function (data) {\r\n        // prefix data with mode indicator (4 bits)\r\n        buffer.put(data.mode.bit, 4);\r\n        // Prefix data with character count indicator.\r\n        // The character count indicator is a string of bits that represents the\r\n        // number of characters that are being encoded.\r\n        // The character count indicator must be placed after the mode indicator\r\n        // and must be a certain number of bits long, depending on the QR version\r\n        // and data mode\r\n        // @see {@link Mode.getCharCountIndicator}.\r\n        buffer.put(data.getLength(), mode$1.getCharCountIndicator(data.mode, version));\r\n        // add binary data sequence to buffer\r\n        data.write(buffer);\r\n    });\r\n    // Calculate required number of bits\r\n    var totalCodewords = utils.getSymbolTotalCodewords(version);\r\n    var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\r\n    var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\r\n    // Add a terminator.\r\n    // If the bit string is shorter than the total number of required bits,\r\n    // a terminator of up to four 0s must be added to the right side of the string.\r\n    // If the bit string is more than four bits shorter than the required number of bits,\r\n    // add four 0s to the end.\r\n    if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\r\n        buffer.put(0, 4);\r\n    }\r\n    // If the bit string is fewer than four bits shorter, add only the number of 0s that\r\n    // are needed to reach the required number of bits.\r\n    // After adding the terminator, if the number of bits in the string is not a multiple of 8,\r\n    // pad the string on the right with 0s to make the string's length a multiple of 8.\r\n    while (buffer.getLengthInBits() % 8 !== 0) {\r\n        buffer.putBit(0);\r\n    }\r\n    // Add pad bytes if the string is still shorter than the total number of required bits.\r\n    // Extend the buffer to fill the data capacity of the symbol corresponding to\r\n    // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\r\n    // and 00010001 (0x11) alternately.\r\n    var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;\r\n    for (var i = 0; i < remainingByte; i++) {\r\n        buffer.put(i % 2 ? 0x11 : 0xEC, 8);\r\n    }\r\n    return createCodewords(buffer, version, errorCorrectionLevel);\r\n}\r\n/**\r\n * Encode input data with Reed-Solomon and return codewords with\r\n * relative error correction bits\r\n *\r\n * @param  {BitBuffer} bitBuffer            Data to encode\r\n * @param  {Number}    version              QR Code version\r\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\r\n * @return {Buffer}                         Buffer containing encoded codewords\r\n */\r\nfunction createCodewords(bitBuffer, version, errorCorrectionLevel) {\r\n    // Total codewords for this QR code version (Data + Error correction)\r\n    var totalCodewords = utils.getSymbolTotalCodewords(version);\r\n    // Total number of error correction codewords\r\n    var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\r\n    // Total number of data codewords\r\n    var dataTotalCodewords = totalCodewords - ecTotalCodewords;\r\n    // Total number of blocks\r\n    var ecTotalBlocks = errorCorrectionCode.getBlocksCount(version, errorCorrectionLevel);\r\n    // Calculate how many blocks each group should contain\r\n    var blocksInGroup2 = totalCodewords % ecTotalBlocks;\r\n    var blocksInGroup1 = ecTotalBlocks - blocksInGroup2;\r\n    var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);\r\n    var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);\r\n    var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1;\r\n    // Number of EC codewords is the same for both groups\r\n    var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1;\r\n    // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\r\n    var rs = new reedSolomonEncoder(ecCount);\r\n    var offset = 0;\r\n    var dcData = new Array(ecTotalBlocks);\r\n    var ecData = new Array(ecTotalBlocks);\r\n    var maxDataSize = 0;\r\n    var buffer$1 = buffer.from(bitBuffer.buffer);\r\n    // Divide the buffer into the required number of blocks\r\n    for (var b = 0; b < ecTotalBlocks; b++) {\r\n        var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2;\r\n        // extract a block of data from buffer\r\n        dcData[b] = buffer$1.slice(offset, offset + dataSize);\r\n        // Calculate EC codewords for this data block\r\n        ecData[b] = rs.encode(dcData[b]);\r\n        offset += dataSize;\r\n        maxDataSize = Math.max(maxDataSize, dataSize);\r\n    }\r\n    // Create final data\r\n    // Interleave the data and error correction codewords from each block\r\n    var data = buffer.alloc(totalCodewords);\r\n    var index = 0;\r\n    var i, r;\r\n    // Add data codewords\r\n    for (i = 0; i < maxDataSize; i++) {\r\n        for (r = 0; r < ecTotalBlocks; r++) {\r\n            if (i < dcData[r].length) {\r\n                data[index++] = dcData[r][i];\r\n            }\r\n        }\r\n    }\r\n    // Apped EC codewords\r\n    for (i = 0; i < ecCount; i++) {\r\n        for (r = 0; r < ecTotalBlocks; r++) {\r\n            data[index++] = ecData[r][i];\r\n        }\r\n    }\r\n    return data;\r\n}\r\n/**\r\n * Build QR Code symbol\r\n *\r\n * @param  {String} data                 Input string\r\n * @param  {Number} version              QR Code version\r\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\r\n * @param  {MaskPattern} maskPattern     Mask pattern\r\n * @return {Object}                      Object containing symbol data\r\n */\r\nfunction createSymbol(data, version, errorCorrectionLevel, maskPattern) {\r\n    var segments;\r\n    if (C__Users_bbdnet2350_Documents_TheHive_GradProjects_amplifyJs_node_modules_qrcode_node_modules_isarray(data)) {\r\n        segments = segments$1.fromArray(data);\r\n    }\r\n    else if (typeof data === 'string') {\r\n        var estimatedVersion = version;\r\n        if (!estimatedVersion) {\r\n            var rawSegments = segments$1.rawSplit(data);\r\n            // Estimate best version that can contain raw splitted segments\r\n            estimatedVersion = version$1.getBestVersionForData(rawSegments, errorCorrectionLevel);\r\n        }\r\n        // Build optimized segments\r\n        // If estimated version is undefined, try with the highest version\r\n        segments = segments$1.fromString(data, estimatedVersion || 40);\r\n    }\r\n    else {\r\n        throw new Error('Invalid data');\r\n    }\r\n    // Get the min version that can contain data\r\n    var bestVersion = version$1.getBestVersionForData(segments, errorCorrectionLevel);\r\n    // If no version is found, data cannot be stored\r\n    if (!bestVersion) {\r\n        throw new Error('The amount of data is too big to be stored in a QR Code');\r\n    }\r\n    // If not specified, use min version as default\r\n    if (!version) {\r\n        version = bestVersion;\r\n        // Check if the specified version can contain the data\r\n    }\r\n    else if (version < bestVersion) {\r\n        throw new Error('\\n' +\r\n            'The chosen QR Code version cannot contain this amount of data.\\n' +\r\n            'Minimum version required to store current data is: ' + bestVersion + '.\\n');\r\n    }\r\n    var dataBits = createData(version, errorCorrectionLevel, segments);\r\n    // Allocate matrix buffer\r\n    var moduleCount = utils.getSymbolSize(version);\r\n    var modules = new bitMatrix(moduleCount);\r\n    // Add function modules\r\n    setupFinderPattern(modules, version);\r\n    setupTimingPattern(modules);\r\n    setupAlignmentPattern(modules, version);\r\n    // Add temporary dummy bits for format info just to set them as reserved.\r\n    // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\r\n    // since the masking operation must be performed only on the encoding region.\r\n    // These blocks will be replaced with correct values later in code.\r\n    setupFormatInfo(modules, errorCorrectionLevel, 0);\r\n    if (version >= 7) {\r\n        setupVersionInfo(modules, version);\r\n    }\r\n    // Add data codewords\r\n    setupData(modules, dataBits);\r\n    if (isNaN(maskPattern)) {\r\n        // Find best mask pattern\r\n        maskPattern = maskPattern$1.getBestMask(modules, setupFormatInfo.bind(null, modules, errorCorrectionLevel));\r\n    }\r\n    // Apply mask pattern\r\n    maskPattern$1.applyMask(maskPattern, modules);\r\n    // Replace format info bits with correct values\r\n    setupFormatInfo(modules, errorCorrectionLevel, maskPattern);\r\n    return {\r\n        modules: modules,\r\n        version: version,\r\n        errorCorrectionLevel: errorCorrectionLevel,\r\n        maskPattern: maskPattern,\r\n        segments: segments\r\n    };\r\n}\r\n/**\r\n * QR Code\r\n *\r\n * @param {String | Array} data                 Input data\r\n * @param {Object} options                      Optional configurations\r\n * @param {Number} options.version              QR Code version\r\n * @param {String} options.errorCorrectionLevel Error correction level\r\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\r\n */\r\nvar create = function create(data, options) {\r\n    if (typeof data === 'undefined' || data === '') {\r\n        throw new Error('No input text');\r\n    }\r\n    var errorCorrectionLevel = errorCorrectionLevel$1.M;\r\n    var version;\r\n    var mask;\r\n    if (typeof options !== 'undefined') {\r\n        // Use higher error correction level as default\r\n        errorCorrectionLevel = errorCorrectionLevel$1.from(options.errorCorrectionLevel, errorCorrectionLevel$1.M);\r\n        version = version$1.from(options.version);\r\n        mask = maskPattern$1.from(options.maskPattern);\r\n        if (options.toSJISFunc) {\r\n            utils.setToSJISFunction(options.toSJISFunc);\r\n        }\r\n    }\r\n    return createSymbol(data, version, errorCorrectionLevel, mask);\r\n};\r\nvar qrcode = {\r\n    create: create\r\n};\r\nvar canvas$1 = createCommonjsModule(function (module, exports) {\r\n    function clearCanvas(ctx, canvas, size) {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        if (!canvas.style)\r\n            canvas.style = {};\r\n        canvas.height = size;\r\n        canvas.width = size;\r\n        canvas.style.height = size + 'px';\r\n        canvas.style.width = size + 'px';\r\n    }\r\n    function getCanvasElement() {\r\n        try {\r\n            return document.createElement('canvas');\r\n        }\r\n        catch (e) {\r\n            throw new Error('You need to specify a canvas element');\r\n        }\r\n    }\r\n    exports.render = function render(qrData, canvas, options) {\r\n        var opts = options;\r\n        var canvasEl = canvas;\r\n        if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\r\n            opts = canvas;\r\n            canvas = undefined;\r\n        }\r\n        if (!canvas) {\r\n            canvasEl = getCanvasElement();\r\n        }\r\n        opts = utils$2.getOptions(opts);\r\n        var size = utils$2.getImageWidth(qrData.modules.size, opts);\r\n        var ctx = canvasEl.getContext('2d');\r\n        var image = ctx.createImageData(size, size);\r\n        utils$2.qrToImageData(image.data, qrData, opts);\r\n        clearCanvas(ctx, canvasEl, size);\r\n        ctx.putImageData(image, 0, 0);\r\n        return canvasEl;\r\n    };\r\n    exports.renderToDataURL = function renderToDataURL(qrData, canvas, options) {\r\n        var opts = options;\r\n        if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\r\n            opts = canvas;\r\n            canvas = undefined;\r\n        }\r\n        if (!opts)\r\n            opts = {};\r\n        var canvasEl = exports.render(qrData, canvas, opts);\r\n        var type = opts.type || 'image/png';\r\n        var rendererOpts = opts.rendererOpts || {};\r\n        return canvasEl.toDataURL(type, rendererOpts.quality);\r\n    };\r\n});\r\nfunction renderCanvas(renderFunc, canvas, text, opts, cb) {\r\n    var args = [].slice.call(arguments, 1);\r\n    var argsNum = args.length;\r\n    var isLastArgCb = typeof args[argsNum - 1] === 'function';\r\n    if (!isLastArgCb && !canPromise()) {\r\n        throw new Error('Callback required as last argument');\r\n    }\r\n    if (isLastArgCb) {\r\n        if (argsNum < 2) {\r\n            throw new Error('Too few arguments provided');\r\n        }\r\n        if (argsNum === 2) {\r\n            cb = text;\r\n            text = canvas;\r\n            canvas = opts = undefined;\r\n        }\r\n        else if (argsNum === 3) {\r\n            if (canvas.getContext && typeof cb === 'undefined') {\r\n                cb = opts;\r\n                opts = undefined;\r\n            }\r\n            else {\r\n                cb = opts;\r\n                opts = text;\r\n                text = canvas;\r\n                canvas = undefined;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (argsNum < 1) {\r\n            throw new Error('Too few arguments provided');\r\n        }\r\n        if (argsNum === 1) {\r\n            text = canvas;\r\n            canvas = opts = undefined;\r\n        }\r\n        else if (argsNum === 2 && !canvas.getContext) {\r\n            opts = text;\r\n            text = canvas;\r\n            canvas = undefined;\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                var data = qrcode.create(text, opts);\r\n                resolve(renderFunc(data, canvas, opts));\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n    try {\r\n        var data = qrcode.create(text, opts);\r\n        cb(null, renderFunc(data, canvas, opts));\r\n    }\r\n    catch (e) {\r\n        cb(e);\r\n    }\r\n}\r\nvar toCanvas = renderCanvas.bind(null, canvas$1.render);\r\nvar toDataURL = renderCanvas.bind(null, canvas$1.renderToDataURL);\r\n// only svg for now.\r\nvar toString_1 = renderCanvas.bind(null, function (data, _, opts) {\r\n    return svgTag.render(data, opts);\r\n});\r\nvar png$3 = createCommonjsModule(function (module, exports) {\r\n    var PNG = png$1.PNG;\r\n    exports.render = function render(qrData, options) {\r\n        var opts = utils$2.getOptions(options);\r\n        var pngOpts = opts.rendererOpts;\r\n        var size = utils$2.getImageWidth(qrData.modules.size, opts);\r\n        pngOpts.width = size;\r\n        pngOpts.height = size;\r\n        var pngImage = new PNG(pngOpts);\r\n        utils$2.qrToImageData(pngImage.data, qrData, opts);\r\n        return pngImage;\r\n    };\r\n    exports.renderToDataURL = function renderToDataURL(qrData, options, cb) {\r\n        if (typeof cb === 'undefined') {\r\n            cb = options;\r\n            options = undefined;\r\n        }\r\n        exports.renderToBuffer(qrData, options, function (err, output) {\r\n            if (err)\r\n                cb(err);\r\n            var url = 'data:image/png;base64,';\r\n            url += output.toString('base64');\r\n            cb(null, url);\r\n        });\r\n    };\r\n    exports.renderToBuffer = function renderToBuffer(qrData, options, cb) {\r\n        if (typeof cb === 'undefined') {\r\n            cb = options;\r\n            options = undefined;\r\n        }\r\n        var png = exports.render(qrData, options);\r\n        var buffer = [];\r\n        png.on('error', cb);\r\n        png.on('data', function (data) {\r\n            buffer.push(data);\r\n        });\r\n        png.on('end', function () {\r\n            cb(null, Buffer.concat(buffer));\r\n        });\r\n        png.pack();\r\n    };\r\n    exports.renderToFile = function renderToFile(path, qrData, options, cb) {\r\n        if (typeof cb === 'undefined') {\r\n            cb = options;\r\n            options = undefined;\r\n        }\r\n        var stream = fs.createWriteStream(path);\r\n        stream.on('error', cb);\r\n        stream.on('close', cb);\r\n        exports.renderToFileStream(stream, qrData, options);\r\n    };\r\n    exports.renderToFileStream = function renderToFileStream(stream, qrData, options) {\r\n        var png = exports.render(qrData, options);\r\n        png.pack().pipe(stream);\r\n    };\r\n});\r\nvar utf8$1 = createCommonjsModule(function (module, exports) {\r\n    var BLOCK_CHAR = {\r\n        WW: ' ',\r\n        WB: '▄',\r\n        BB: '█',\r\n        BW: '▀'\r\n    };\r\n    var INVERTED_BLOCK_CHAR = {\r\n        BB: ' ',\r\n        BW: '▄',\r\n        WW: '█',\r\n        WB: '▀'\r\n    };\r\n    function getBlockChar(top, bottom, blocks) {\r\n        if (top && bottom)\r\n            return blocks.BB;\r\n        if (top && !bottom)\r\n            return blocks.BW;\r\n        if (!top && bottom)\r\n            return blocks.WB;\r\n        return blocks.WW;\r\n    }\r\n    exports.render = function (qrData, options, cb) {\r\n        var opts = utils$2.getOptions(options);\r\n        var blocks = BLOCK_CHAR;\r\n        if (opts.color.dark.hex === '#ffffff' || opts.color.light.hex === '#000000') {\r\n            blocks = INVERTED_BLOCK_CHAR;\r\n        }\r\n        var size = qrData.modules.size;\r\n        var data = qrData.modules.data;\r\n        var output = '';\r\n        var hMargin = Array(size + (opts.margin * 2) + 1).join(blocks.WW);\r\n        hMargin = Array((opts.margin / 2) + 1).join(hMargin + '\\n');\r\n        var vMargin = Array(opts.margin + 1).join(blocks.WW);\r\n        output += hMargin;\r\n        for (var i = 0; i < size; i += 2) {\r\n            output += vMargin;\r\n            for (var j = 0; j < size; j++) {\r\n                var topModule = data[i * size + j];\r\n                var bottomModule = data[(i + 1) * size + j];\r\n                output += getBlockChar(topModule, bottomModule, blocks);\r\n            }\r\n            output += vMargin + '\\n';\r\n        }\r\n        output += hMargin.slice(0, -1);\r\n        if (typeof cb === 'function') {\r\n            cb(null, output);\r\n        }\r\n        return output;\r\n    };\r\n    exports.renderToFile = function renderToFile(path, qrData, options, cb) {\r\n        if (typeof cb === 'undefined') {\r\n            cb = options;\r\n            options = undefined;\r\n        }\r\n        var fs$1 = fs;\r\n        var utf8 = exports.render(qrData, options);\r\n        fs$1.writeFile(path, utf8, cb);\r\n    };\r\n});\r\n// var Utils = require('./utils')\r\nvar render$1 = function (qrData, options, cb) {\r\n    var size = qrData.modules.size;\r\n    var data = qrData.modules.data;\r\n    // var opts = Utils.getOptions(options)\r\n    // use same scheme as https://github.com/gtanner/qrcode-terminal because it actually works! =)\r\n    var black = '\\x1b[40m  \\x1b[0m';\r\n    var white = '\\x1b[47m  \\x1b[0m';\r\n    var output = '';\r\n    var hMargin = Array(size + 3).join(white);\r\n    var vMargin = Array(2).join(white);\r\n    output += hMargin + '\\n';\r\n    for (var i = 0; i < size; ++i) {\r\n        output += white;\r\n        for (var j = 0; j < size; j++) {\r\n            // var topModule = data[i * size + j]\r\n            // var bottomModule = data[(i + 1) * size + j]\r\n            output += data[i * size + j] ? black : white; // getBlockChar(topModule, bottomModule)\r\n        }\r\n        // output += white+'\\n'\r\n        output += vMargin + '\\n';\r\n    }\r\n    output += hMargin + '\\n';\r\n    if (typeof cb === 'function') {\r\n        cb(null, output);\r\n    }\r\n    return output;\r\n};\r\n/*\r\nexports.renderToFile = function renderToFile (path, qrData, options, cb) {\r\n  if (typeof cb === 'undefined') {\r\n    cb = options\r\n    options = undefined\r\n  }\r\n\r\n  var fs = require('fs')\r\n  var utf8 = exports.render(qrData, options)\r\n  fs.writeFile(path, utf8, cb)\r\n}\r\n*/\r\nvar terminal = {\r\n    render: render$1\r\n};\r\nvar svg$1 = createCommonjsModule(function (module, exports) {\r\n    exports.render = svgTag.render;\r\n    exports.renderToFile = function renderToFile(path, qrData, options, cb) {\r\n        if (typeof cb === 'undefined') {\r\n            cb = options;\r\n            options = undefined;\r\n        }\r\n        var fs$1 = fs;\r\n        var svgTag = exports.render(qrData, options);\r\n        var xmlStr = '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\r\n            '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">' +\r\n            svgTag;\r\n        fs$1.writeFile(path, xmlStr, cb);\r\n    };\r\n});\r\nfunction renderCanvas$1(renderFunc, canvas, text, opts, cb) {\r\n    var args = [].slice.call(arguments, 1);\r\n    var argsNum = args.length;\r\n    var isLastArgCb = typeof args[argsNum - 1] === 'function';\r\n    if (!isLastArgCb && !canPromise()) {\r\n        throw new Error('Callback required as last argument');\r\n    }\r\n    if (isLastArgCb) {\r\n        if (argsNum < 2) {\r\n            throw new Error('Too few arguments provided');\r\n        }\r\n        if (argsNum === 2) {\r\n            cb = text;\r\n            text = canvas;\r\n            canvas = opts = undefined;\r\n        }\r\n        else if (argsNum === 3) {\r\n            if (canvas.getContext && typeof cb === 'undefined') {\r\n                cb = opts;\r\n                opts = undefined;\r\n            }\r\n            else {\r\n                cb = opts;\r\n                opts = text;\r\n                text = canvas;\r\n                canvas = undefined;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (argsNum < 1) {\r\n            throw new Error('Too few arguments provided');\r\n        }\r\n        if (argsNum === 1) {\r\n            text = canvas;\r\n            canvas = opts = undefined;\r\n        }\r\n        else if (argsNum === 2 && !canvas.getContext) {\r\n            opts = text;\r\n            text = canvas;\r\n            canvas = undefined;\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                var data = qrcode.create(text, opts);\r\n                resolve(renderFunc(data, canvas, opts));\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n    try {\r\n        var data = qrcode.create(text, opts);\r\n        cb(null, renderFunc(data, canvas, opts));\r\n    }\r\n    catch (e) {\r\n        cb(e);\r\n    }\r\n}\r\nvar create$1 = qrcode.create;\r\nvar toCanvas$1 = renderCanvas$1.bind(null, canvas$1.render);\r\nvar toDataURL$1 = renderCanvas$1.bind(null, canvas$1.renderToDataURL);\r\n// only svg for now.\r\nvar toString_1$1 = renderCanvas$1.bind(null, function (data, _, opts) {\r\n    return svgTag.render(data, opts);\r\n});\r\nvar browser = {\r\n    create: create$1,\r\n    toCanvas: toCanvas$1,\r\n    toDataURL: toDataURL$1,\r\n    toString: toString_1$1\r\n};\r\nfunction checkParams(text, opts, cb) {\r\n    if (typeof text === 'undefined') {\r\n        throw new Error('String required as first argument');\r\n    }\r\n    if (typeof cb === 'undefined') {\r\n        cb = opts;\r\n        opts = {};\r\n    }\r\n    if (typeof cb !== 'function') {\r\n        if (!canPromise()) {\r\n            throw new Error('Callback required as last argument');\r\n        }\r\n        else {\r\n            opts = cb || {};\r\n            cb = null;\r\n        }\r\n    }\r\n    return {\r\n        opts: opts,\r\n        cb: cb\r\n    };\r\n}\r\nfunction getTypeFromFilename(path) {\r\n    return path.slice((path.lastIndexOf('.') - 1 >>> 0) + 2).toLowerCase();\r\n}\r\nfunction getRendererFromType(type) {\r\n    switch (type) {\r\n        case 'svg':\r\n            return svg$1;\r\n        case 'txt':\r\n        case 'utf8':\r\n            return utf8$1;\r\n        case 'png':\r\n        case 'image/png':\r\n        default:\r\n            return png$3;\r\n    }\r\n}\r\nfunction getStringRendererFromType(type) {\r\n    switch (type) {\r\n        case 'svg':\r\n            return svg$1;\r\n        case 'terminal':\r\n            return terminal;\r\n        case 'utf8':\r\n        default:\r\n            return utf8$1;\r\n    }\r\n}\r\nfunction render$2(renderFunc, text, params) {\r\n    if (!params.cb) {\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                var data = qrcode.create(text, params.opts);\r\n                return renderFunc(data, params.opts, function (err, data) {\r\n                    return err ? reject(err) : resolve(data);\r\n                });\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n    try {\r\n        var data = qrcode.create(text, params.opts);\r\n        return renderFunc(data, params.opts, params.cb);\r\n    }\r\n    catch (e) {\r\n        params.cb(e);\r\n    }\r\n}\r\nvar create$2 = qrcode.create;\r\nvar toCanvas$2 = browser.toCanvas;\r\nvar toString_1$2 = function toString(text, opts, cb) {\r\n    var params = checkParams(text, opts, cb);\r\n    var renderer = getStringRendererFromType(params.opts.type);\r\n    return render$2(renderer.render, text, params);\r\n};\r\nvar toDataURL$2 = function toDataURL(text, opts, cb) {\r\n    var params = checkParams(text, opts, cb);\r\n    var renderer = getRendererFromType(params.opts.type);\r\n    return render$2(renderer.renderToDataURL, text, params);\r\n};\r\nvar toBuffer = function toBuffer(text, opts, cb) {\r\n    var params = checkParams(text, opts, cb);\r\n    var renderer = getRendererFromType(params.opts.type);\r\n    return render$2(renderer.renderToBuffer, text, params);\r\n};\r\nvar toFile = function toFile(path, text, opts, cb) {\r\n    if (typeof path !== 'string' || !(typeof text === 'string' || typeof text === 'object')) {\r\n        throw new Error('Invalid argument');\r\n    }\r\n    if ((arguments.length < 3) && !canPromise()) {\r\n        throw new Error('Too few arguments provided');\r\n    }\r\n    var params = checkParams(text, opts, cb);\r\n    var type = params.opts.type || getTypeFromFilename(path);\r\n    var renderer = getRendererFromType(type);\r\n    var renderToFile = renderer.renderToFile.bind(null, path);\r\n    return render$2(renderToFile, text, params);\r\n};\r\nvar toFileStream = function toFileStream(stream, text, opts) {\r\n    if (arguments.length < 2) {\r\n        throw new Error('Too few arguments provided');\r\n    }\r\n    var params = checkParams(text, opts, stream.emit.bind(stream, 'error'));\r\n    var renderer = getRendererFromType('png'); // Only png support for now\r\n    var renderToFileStream = renderer.renderToFileStream.bind(null, stream);\r\n    render$2(renderToFileStream, text, params);\r\n};\r\nvar server = {\r\n    create: create$2,\r\n    toCanvas: toCanvas$2,\r\n    toString: toString_1$2,\r\n    toDataURL: toDataURL$2,\r\n    toBuffer: toBuffer,\r\n    toFile: toFile,\r\n    toFileStream: toFileStream\r\n};\r\n/*\r\n*copyright Ryan Day 2012\r\n*\r\n* Licensed under the MIT license:\r\n*   http://www.opensource.org/licenses/mit-license.php\r\n*\r\n* this is the main server side application file for node-qrcode.\r\n* these exports use serverside canvas api methods for file IO and buffers\r\n*\r\n*/\r\nvar lib = server;\r\nvar amplifyTotpSetupCss = \".totp-setup{text-align:center;margin-bottom:30px}.totp-setup img{height:128px;width:128px}\";\r\nvar logger = new Logger('TOTP');\r\nvar AmplifyTOTPSetup = /** @class */ (function () {\r\n    function class_1(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.inputProps = {\r\n            autoFocus: true,\r\n        };\r\n        /** Auth state change handler for this component */\r\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\r\n        /** Used for header text in totp setup component */\r\n        this.headerText = Translations.TOTP_HEADER_TEXT;\r\n        /** Used for customizing the issuer string in the qr code image */\r\n        this.issuer = Translations.TOTP_ISSUER;\r\n        this.code = null;\r\n        this.setupMessage = null;\r\n        this.qrCodeInput = null;\r\n        this.loading = false;\r\n    }\r\n    class_1.prototype.componentWillLoad = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        /**\r\n                         * We didn't use `@Watch` here because it doesn't fire when we go from require-new-password to totp-setup.\r\n                         * That is because `Auth.completeNewPassword` only changes `user` in place and Watch doesn't detect changes\r\n                         * unless we make a clone.\r\n                         */\r\n                        this.removeHubListener = onAuthUIStateChange(function (authState) {\r\n                            if (authState === AuthState.TOTPSetup)\r\n                                _this.setup();\r\n                        });\r\n                        return [4 /*yield*/, this.setup()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    class_1.prototype.disconnectedCallback = function () {\r\n        this.removeHubListener && this.removeHubListener(); // stop listening to `onAuthUIStateChange`\r\n    };\r\n    class_1.prototype.buildOtpAuthPath = function (user, issuer, secretKey) {\r\n        return \"otpauth://totp/\" + issuer + \":\" + user.username + \"?secret=\" + secretKey + \"&issuer=\" + issuer;\r\n    };\r\n    class_1.prototype.onTOTPEvent = function (event, data, user) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        logger.debug('on totp event', event, data);\r\n                        if (!(event === SETUP_TOTP && data === SUCCESS)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, checkContact(user, this.handleAuthStateChange)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    class_1.prototype.handleTotpInputChange = function (event) {\r\n        this.setupMessage = null;\r\n        this.qrCodeInput = event.target.value;\r\n    };\r\n    class_1.prototype.generateQRCode = function (codeFromTotp) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, error_1;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 2, , 3]);\r\n                        _a = this;\r\n                        return [4 /*yield*/, lib.toDataURL(codeFromTotp)];\r\n                    case 1:\r\n                        _a.qrCodeImageSource = _b.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        error_1 = _b.sent();\r\n                        dispatchToastHubEvent(error_1);\r\n                        return [3 /*break*/, 3];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    class_1.prototype.setup = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var encodedIssuer, secretKey, error_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // ensure setup is only run once after totp setup is available\r\n                        if (!this.user || this.user.challengeName !== 'MFA_SETUP' || this.loading)\r\n                            return [2 /*return*/];\r\n                        this.setupMessage = null;\r\n                        encodedIssuer = encodeURI(I18n.get(this.issuer));\r\n                        if (!Auth || typeof Auth.setupTOTP !== 'function') {\r\n                            throw new Error(NO_AUTH_MODULE_FOUND);\r\n                        }\r\n                        this.loading = true;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, 4, 5]);\r\n                        return [4 /*yield*/, Auth.setupTOTP(this.user)];\r\n                    case 2:\r\n                        secretKey = _a.sent();\r\n                        logger.debug('secret key', secretKey);\r\n                        this.code = this.buildOtpAuthPath(this.user, encodedIssuer, secretKey);\r\n                        this.generateQRCode(this.code);\r\n                        return [3 /*break*/, 5];\r\n                    case 3:\r\n                        error_2 = _a.sent();\r\n                        dispatchToastHubEvent(error_2);\r\n                        logger.debug(I18n.get(Translations.TOTP_SETUP_FAILURE), error_2);\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        this.loading = false;\r\n                        return [7 /*endfinally*/];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    class_1.prototype.verifyTotpToken = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var user, error_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (event) {\r\n                            event.preventDefault();\r\n                        }\r\n                        if (!this.qrCodeInput) {\r\n                            logger.debug('No TOTP Code provided');\r\n                            return [2 /*return*/];\r\n                        }\r\n                        user = this.user;\r\n                        if (!Auth ||\r\n                            typeof Auth.verifyTotpToken !== 'function' ||\r\n                            typeof Auth.setPreferredMFA !== 'function') {\r\n                            throw new Error(NO_AUTH_MODULE_FOUND);\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 5, , 6]);\r\n                        return [4 /*yield*/, Auth.verifyTotpToken(user, this.qrCodeInput)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, Auth.setPreferredMFA(user, MfaOption.TOTP)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        this.setupMessage = I18n.get(Translations.TOTP_SUCCESS_MESSAGE);\r\n                        logger.debug(I18n.get(Translations.TOTP_SUCCESS_MESSAGE));\r\n                        return [4 /*yield*/, this.onTOTPEvent(SETUP_TOTP, SUCCESS, user)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        error_3 = _a.sent();\r\n                        this.setupMessage = I18n.get(Translations.TOTP_SETUP_FAILURE);\r\n                        logger.error(error_3);\r\n                        return [3 /*break*/, 6];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    class_1.prototype.render = function () {\r\n        var _this = this;\r\n        return (h(Host, null, h(\"amplify-form-section\", { headerText: I18n.get(this.headerText), submitButtonText: I18n.get(Translations.TOTP_SUBMIT_BUTTON_TEXT), handleSubmit: function (event) { return _this.verifyTotpToken(event); }, loading: this.loading }, h(\"div\", { class: \"totp-setup\" }, this.qrCodeImageSource && (h(\"img\", { src: this.qrCodeImageSource, alt: I18n.get(Translations.QR_CODE_ALT) })), h(\"amplify-form-field\", { label: I18n.get(Translations.TOTP_LABEL), inputProps: this.inputProps, fieldId: \"totpCode\", name: \"totpCode\", handleInputChange: function (event) { return _this.handleTotpInputChange(event); } })))));\r\n    };\r\n    return class_1;\r\n}());\r\nAmplifyTOTPSetup.style = amplifyTotpSetupCss;\r\nexport { AmplifyRadioButton as amplify_radio_button, AmplifyTOTPSetup as amplify_totp_setup };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { Logger, isEmpty } from '@aws-amplify/core';\r\nimport { A as AuthState, C as ChallengeName } from './auth-types-caf635db.js';\r\nimport { Auth, CognitoUser } from '@aws-amplify/auth';\r\nimport { T as Translations } from './Translations-97eed81d.js';\r\nimport { N as NO_AUTH_MODULE_FOUND } from './constants-727dee2c.js';\r\nimport { a as dispatchToastHubEvent } from './helpers-ff1bbc26.js';\r\nvar logger = new Logger('auth-helpers');\r\nfunction checkContact(user, handleAuthStateChange) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var data, newUser, error_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!Auth || typeof Auth.verifiedContact !== 'function') {\r\n                        throw new Error(NO_AUTH_MODULE_FOUND);\r\n                    }\r\n                    // If `user` is a federated user, we shouldn't call `verifiedContact`\r\n                    // since `user` isn't `CognitoUser`\r\n                    if (!isCognitoUser(user)) {\r\n                        handleAuthStateChange(AuthState.SignedIn, user);\r\n                        return [2 /*return*/];\r\n                    }\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, Auth.verifiedContact(user)];\r\n                case 2:\r\n                    data = _a.sent();\r\n                    if (!isEmpty(data.verified) || isEmpty(data.unverified)) {\r\n                        handleAuthStateChange(AuthState.SignedIn, user);\r\n                    }\r\n                    else {\r\n                        newUser = Object.assign(user, data);\r\n                        handleAuthStateChange(AuthState.VerifyContact, newUser);\r\n                    }\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    error_1 = _a.sent();\r\n                    dispatchToastHubEvent(error_1);\r\n                    return [3 /*break*/, 4];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nvar handleSignIn = function (username, password, handleAuthStateChange) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var user, error_2;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (!Auth || typeof Auth.signIn !== 'function') {\r\n                    throw new Error(NO_AUTH_MODULE_FOUND);\r\n                }\r\n                _a.label = 1;\r\n            case 1:\r\n                _a.trys.push([1, 9, , 10]);\r\n                return [4 /*yield*/, Auth.signIn(username, password)];\r\n            case 2:\r\n                user = _a.sent();\r\n                logger.debug(user);\r\n                if (!(user.challengeName === ChallengeName.SMSMFA ||\r\n                    user.challengeName === ChallengeName.SoftwareTokenMFA)) return [3 /*break*/, 3];\r\n                logger.debug('confirm user with ' + user.challengeName);\r\n                handleAuthStateChange(AuthState.ConfirmSignIn, user);\r\n                return [3 /*break*/, 8];\r\n            case 3:\r\n                if (!(user.challengeName === ChallengeName.NewPasswordRequired)) return [3 /*break*/, 4];\r\n                logger.debug('require new password', user.challengeParam);\r\n                handleAuthStateChange(AuthState.ResetPassword, user);\r\n                return [3 /*break*/, 8];\r\n            case 4:\r\n                if (!(user.challengeName === ChallengeName.MFASetup)) return [3 /*break*/, 5];\r\n                logger.debug('TOTP setup', user.challengeParam);\r\n                handleAuthStateChange(AuthState.TOTPSetup, user);\r\n                return [3 /*break*/, 8];\r\n            case 5:\r\n                if (!(user.challengeName === ChallengeName.CustomChallenge &&\r\n                    user.challengeParam &&\r\n                    user.challengeParam.trigger === 'true')) return [3 /*break*/, 6];\r\n                logger.debug('custom challenge', user.challengeParam);\r\n                handleAuthStateChange(AuthState.CustomConfirmSignIn, user);\r\n                return [3 /*break*/, 8];\r\n            case 6: return [4 /*yield*/, checkContact(user, handleAuthStateChange)];\r\n            case 7:\r\n                _a.sent();\r\n                _a.label = 8;\r\n            case 8: return [3 /*break*/, 10];\r\n            case 9:\r\n                error_2 = _a.sent();\r\n                if (error_2.code === 'UserNotConfirmedException') {\r\n                    logger.debug('the user is not confirmed');\r\n                    handleAuthStateChange(AuthState.ConfirmSignUp, { username: username });\r\n                }\r\n                else if (error_2.code === 'PasswordResetRequiredException') {\r\n                    logger.debug('the user requires a new password');\r\n                    handleAuthStateChange(AuthState.ForgotPassword, { username: username });\r\n                }\r\n                else if (error_2.code === 'InvalidParameterException' && password === '') {\r\n                    logger.debug('Password cannot be empty');\r\n                    error_2.message = Translations.EMPTY_PASSWORD;\r\n                }\r\n                dispatchToastHubEvent(error_2);\r\n                return [3 /*break*/, 10];\r\n            case 10: return [2 /*return*/];\r\n        }\r\n    });\r\n}); };\r\nvar isCognitoUser = function (user) {\r\n    return user instanceof CognitoUser;\r\n};\r\nexport { checkContact as c, handleSignIn as h };\r\n","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}