{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external \"@aws-amplify/core\"","webpack:///../../src/Providers/XRProvider.ts","webpack:///../src/Errors.ts","webpack:///../../src/Providers/SumerianProvider.ts","webpack:///../src/XR.ts","webpack:///../src/index.ts"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s"],"mappings":"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","file":"aws-amplify-xr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@aws-amplify/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"aws_amplify_xr\", [\"@aws-amplify/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"aws_amplify_xr\"] = factory(require(\"@aws-amplify/core\"));\n\telse\n\t\troot[\"aws_amplify_xr\"] = factory(root[\"@aws-amplify/core\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\r\nvar logger = new Logger('AbstractXRProvider');\r\nvar AbstractXRProvider = /** @class */ (function () {\r\n    function AbstractXRProvider(options) {\r\n        if (options === void 0) { options = {}; }\r\n        this._config = options;\r\n    }\r\n    AbstractXRProvider.prototype.configure = function (config) {\r\n        if (config === void 0) { config = {}; }\r\n        this._config = __assign(__assign({}, config), this._config);\r\n        logger.debug(\"configure \" + this.getProviderName(), this._config);\r\n        return this.options;\r\n    };\r\n    AbstractXRProvider.prototype.getCategory = function () {\r\n        return 'XR';\r\n    };\r\n    Object.defineProperty(AbstractXRProvider.prototype, \"options\", {\r\n        get: function () {\r\n            return __assign({}, this._config);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AbstractXRProvider;\r\n}());\r\nexport { AbstractXRProvider };\r\n//# sourceMappingURL=XRProvider.js.map","/*\r\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar XRError = /** @class */ (function (_super) {\r\n    __extends(XRError, _super);\r\n    function XRError() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return XRError;\r\n}(Error));\r\nexport { XRError };\r\nvar XRNoSceneConfiguredError = /** @class */ (function (_super) {\r\n    __extends(XRNoSceneConfiguredError, _super);\r\n    function XRNoSceneConfiguredError() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return XRNoSceneConfiguredError;\r\n}(XRError));\r\nexport { XRNoSceneConfiguredError };\r\nvar XRSceneNotFoundError = /** @class */ (function (_super) {\r\n    __extends(XRSceneNotFoundError, _super);\r\n    function XRSceneNotFoundError() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return XRSceneNotFoundError;\r\n}(XRError));\r\nexport { XRSceneNotFoundError };\r\nvar XRSceneNotLoadedError = /** @class */ (function (_super) {\r\n    __extends(XRSceneNotLoadedError, _super);\r\n    function XRSceneNotLoadedError() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return XRSceneNotLoadedError;\r\n}(XRError));\r\nexport { XRSceneNotLoadedError };\r\nvar XRNoDomElement = /** @class */ (function (_super) {\r\n    __extends(XRNoDomElement, _super);\r\n    function XRNoDomElement() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return XRNoDomElement;\r\n}(XRError));\r\nexport { XRNoDomElement };\r\nvar XRSceneLoadFailure = /** @class */ (function (_super) {\r\n    __extends(XRSceneLoadFailure, _super);\r\n    function XRSceneLoadFailure() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return XRSceneLoadFailure;\r\n}(XRError));\r\nexport { XRSceneLoadFailure };\r\nvar XRProviderNotConfigured = /** @class */ (function (_super) {\r\n    __extends(XRProviderNotConfigured, _super);\r\n    function XRProviderNotConfigured() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return XRProviderNotConfigured;\r\n}(XRError));\r\nexport { XRProviderNotConfigured };\r\n//# sourceMappingURL=Errors.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\n/*\r\n * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nimport { ConsoleLogger as Logger, Signer, Credentials, Constants, } from '@aws-amplify/core';\r\nimport { AbstractXRProvider } from './XRProvider';\r\nimport { XRNoSceneConfiguredError, XRSceneNotFoundError, XRSceneNotLoadedError, XRNoDomElement, XRSceneLoadFailure, } from '../Errors';\r\nvar SUMERIAN_SERVICE_NAME = 'sumerian';\r\nvar logger = new Logger('SumerianProvider');\r\nvar SumerianProvider = /** @class */ (function (_super) {\r\n    __extends(SumerianProvider, _super);\r\n    function SumerianProvider(options) {\r\n        if (options === void 0) { options = {}; }\r\n        return _super.call(this, options) || this;\r\n    }\r\n    SumerianProvider.prototype.getProviderName = function () {\r\n        return 'SumerianProvider';\r\n    };\r\n    SumerianProvider.prototype.loadScript = function (url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var scriptElement = document.createElement('script');\r\n                        scriptElement.src = url;\r\n                        scriptElement.addEventListener('load', function (event) {\r\n                            resolve();\r\n                        });\r\n                        scriptElement.addEventListener('error', function (event) {\r\n                            reject(new Error(\"Failed to load script: \" + url));\r\n                        });\r\n                        document.head.appendChild(scriptElement);\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    SumerianProvider.prototype.loadScene = function (sceneName, domElementId, sceneOptions) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var errorMsg, errorMsg, element, errorMsg, scene, errorMsg, sceneUrl, sceneId, sceneRegion, errorMsg, awsSDKConfigOverride, fetchOptions, url, credentials, accessInfo, serviceInfo, request, e_1, apiResponse, apiResponseJson, sceneBundleData, sceneBundle, sceneBundleJson, error_1, progressCallback, publishParamOverrides, sceneLoadParams, sceneController, _a, _b, warning;\r\n            var e_2, _c;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        if (!sceneName) {\r\n                            errorMsg = 'No scene name passed into loadScene';\r\n                            logger.error(errorMsg);\r\n                            throw new XRSceneLoadFailure(errorMsg);\r\n                        }\r\n                        if (!domElementId) {\r\n                            errorMsg = 'No dom element id passed into loadScene';\r\n                            logger.error(errorMsg);\r\n                            throw new XRNoDomElement(errorMsg);\r\n                        }\r\n                        element = document.getElementById(domElementId);\r\n                        if (!element) {\r\n                            errorMsg = \"DOM element id, \" + domElementId + \" not found\";\r\n                            logger.error(errorMsg);\r\n                            throw new XRNoDomElement(errorMsg);\r\n                        }\r\n                        scene = this.getScene(sceneName);\r\n                        if (!scene.sceneConfig) {\r\n                            errorMsg = \"No scene config configured for scene: \" + sceneName;\r\n                            logger.error(errorMsg);\r\n                            throw new XRSceneLoadFailure(errorMsg);\r\n                        }\r\n                        sceneUrl = scene.sceneConfig.url;\r\n                        sceneId = scene.sceneConfig.sceneId;\r\n                        if (scene.sceneConfig.hasOwnProperty('region')) {\r\n                            // Use the scene region on the Sumerian scene configuration\r\n                            sceneRegion = scene.sceneConfig.region;\r\n                        }\r\n                        else if (this.options.hasOwnProperty('region')) {\r\n                            // Use the scene region on the XR category configuration\r\n                            sceneRegion = this.options.region;\r\n                        }\r\n                        else {\r\n                            errorMsg = \"No region configured for scene: \" + sceneName;\r\n                            logger.error(errorMsg);\r\n                            throw new XRSceneLoadFailure(errorMsg);\r\n                        }\r\n                        awsSDKConfigOverride = {\r\n                            region: sceneRegion,\r\n                            // This is passed to the AWS clients created in\r\n                            // Sumerian's AwsSystem\r\n                            // This helps other services(like Lex and Polly) to track\r\n                            // traffic coming from Sumerian scenes embedded with Amplify\r\n                            customUserAgent: Constants.userAgent + \"-SumerianScene\",\r\n                        };\r\n                        fetchOptions = {\r\n                            headers: {\r\n                                // This sets the AWS user agent string\r\n                                // So the Sumerian service knows this request is\r\n                                // from Amplify\r\n                                'X-Amz-User-Agent': Constants.userAgent,\r\n                            },\r\n                        };\r\n                        url = sceneUrl;\r\n                        _d.label = 1;\r\n                    case 1:\r\n                        _d.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, Credentials.get()];\r\n                    case 2:\r\n                        credentials = _d.sent();\r\n                        awsSDKConfigOverride['credentials'] = credentials;\r\n                        accessInfo = {\r\n                            secret_key: credentials.secretAccessKey,\r\n                            access_key: credentials.accessKeyId,\r\n                            session_token: credentials.sessionToken,\r\n                        };\r\n                        serviceInfo = {\r\n                            region: sceneRegion,\r\n                            service: SUMERIAN_SERVICE_NAME,\r\n                        };\r\n                        request = Signer.sign({ method: 'GET', url: sceneUrl }, accessInfo, serviceInfo);\r\n                        fetchOptions.headers = __assign(__assign({}, fetchOptions.headers), request.headers);\r\n                        url = request.url;\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _d.sent();\r\n                        logger.debug('No credentials available, the request will be unsigned');\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [4 /*yield*/, fetch(url, fetchOptions)];\r\n                    case 5:\r\n                        apiResponse = _d.sent();\r\n                        return [4 /*yield*/, apiResponse.json()];\r\n                    case 6:\r\n                        apiResponseJson = _d.sent();\r\n                        if (apiResponse.status === 403) {\r\n                            if (apiResponseJson.message) {\r\n                                logger.error(\"Failure to authenticate user: \" + apiResponseJson.message);\r\n                                throw new XRSceneLoadFailure(\"Failure to authenticate user: \" + apiResponseJson.message);\r\n                            }\r\n                            else {\r\n                                logger.error(\"Failure to authenticate user\");\r\n                                throw new XRSceneLoadFailure(\"Failure to authenticate user\");\r\n                            }\r\n                        }\r\n                        sceneBundleData = apiResponseJson.bundleData[sceneId];\r\n                        return [4 /*yield*/, fetch(sceneBundleData.url, {\r\n                                headers: sceneBundleData.headers,\r\n                            })];\r\n                    case 7:\r\n                        sceneBundle = _d.sent();\r\n                        return [4 /*yield*/, sceneBundle.json()];\r\n                    case 8:\r\n                        sceneBundleJson = _d.sent();\r\n                        _d.label = 9;\r\n                    case 9:\r\n                        _d.trys.push([9, 11, , 12]);\r\n                        // Load the Sumerian bootstrapper script into the DOM\r\n                        return [4 /*yield*/, this.loadScript(sceneBundleJson[sceneId].bootstrapperUrl)];\r\n                    case 10:\r\n                        // Load the Sumerian bootstrapper script into the DOM\r\n                        _d.sent();\r\n                        return [3 /*break*/, 12];\r\n                    case 11:\r\n                        error_1 = _d.sent();\r\n                        logger.error(error_1);\r\n                        throw new XRSceneLoadFailure(error_1);\r\n                    case 12:\r\n                        progressCallback = sceneOptions.progressCallback\r\n                            ? sceneOptions.progressCallback\r\n                            : undefined;\r\n                        publishParamOverrides = scene.publishParamOverrides\r\n                            ? scene.publishParamOverrides\r\n                            : undefined;\r\n                        sceneLoadParams = {\r\n                            element: element,\r\n                            sceneId: sceneId,\r\n                            sceneBundle: sceneBundleJson,\r\n                            apiResponse: apiResponseJson,\r\n                            progressCallback: progressCallback,\r\n                            publishParamOverrides: publishParamOverrides,\r\n                            awsSDKConfigOverride: awsSDKConfigOverride,\r\n                        };\r\n                        return [4 /*yield*/, window.SumerianBootstrapper.loadScene(sceneLoadParams)];\r\n                    case 13:\r\n                        sceneController = _d.sent();\r\n                        scene.sceneController = sceneController;\r\n                        scene.isLoaded = true;\r\n                        try {\r\n                            // Log scene warnings\r\n                            for (_a = __values(sceneController.sceneLoadWarnings), _b = _a.next(); !_b.done; _b = _a.next()) {\r\n                                warning = _b.value;\r\n                                logger.warn(\"loadScene warning: \" + warning);\r\n                            }\r\n                        }\r\n                        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                        finally {\r\n                            try {\r\n                                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\r\n                            }\r\n                            finally { if (e_2) throw e_2.error; }\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SumerianProvider.prototype.isSceneLoaded = function (sceneName) {\r\n        var scene = this.getScene(sceneName);\r\n        return scene.isLoaded || false;\r\n    };\r\n    SumerianProvider.prototype.getScene = function (sceneName) {\r\n        if (!this.options.scenes) {\r\n            var errorMsg = 'No scenes were defined in the configuration';\r\n            logger.error(errorMsg);\r\n            throw new XRNoSceneConfiguredError(errorMsg);\r\n        }\r\n        if (!sceneName) {\r\n            var errorMsg = 'No scene name was passed';\r\n            logger.error(errorMsg);\r\n            throw new XRSceneNotFoundError(errorMsg);\r\n        }\r\n        if (!this.options.scenes[sceneName]) {\r\n            var errorMsg = \"Scene '\" + sceneName + \"' is not configured\";\r\n            logger.error(errorMsg);\r\n            throw new XRSceneNotFoundError(errorMsg);\r\n        }\r\n        return this.options.scenes[sceneName];\r\n    };\r\n    SumerianProvider.prototype.getSceneController = function (sceneName) {\r\n        if (!this.options.scenes) {\r\n            var errorMsg = 'No scenes were defined in the configuration';\r\n            logger.error(errorMsg);\r\n            throw new XRNoSceneConfiguredError(errorMsg);\r\n        }\r\n        var scene = this.options.scenes[sceneName];\r\n        if (!scene) {\r\n            var errorMsg = \"Scene '\" + sceneName + \"' is not configured\";\r\n            logger.error(errorMsg);\r\n            throw new XRSceneNotFoundError(errorMsg);\r\n        }\r\n        var sceneController = scene.sceneController;\r\n        if (!sceneController) {\r\n            var errorMsg = \"Scene controller for '\" + sceneName + \"' has not been loaded\";\r\n            logger.error(errorMsg);\r\n            throw new XRSceneNotLoadedError(errorMsg);\r\n        }\r\n        return sceneController;\r\n    };\r\n    SumerianProvider.prototype.isVRCapable = function (sceneName) {\r\n        var sceneController = this.getSceneController(sceneName);\r\n        return sceneController.vrCapable;\r\n    };\r\n    SumerianProvider.prototype.isVRPresentationActive = function (sceneName) {\r\n        var sceneController = this.getSceneController(sceneName);\r\n        return sceneController.vrPresentationActive;\r\n    };\r\n    SumerianProvider.prototype.start = function (sceneName) {\r\n        var sceneController = this.getSceneController(sceneName);\r\n        sceneController.start();\r\n    };\r\n    SumerianProvider.prototype.enterVR = function (sceneName) {\r\n        var sceneController = this.getSceneController(sceneName);\r\n        sceneController.enterVR();\r\n    };\r\n    SumerianProvider.prototype.exitVR = function (sceneName) {\r\n        var sceneController = this.getSceneController(sceneName);\r\n        sceneController.exitVR();\r\n    };\r\n    SumerianProvider.prototype.isMuted = function (sceneName) {\r\n        var sceneController = this.getSceneController(sceneName);\r\n        return sceneController.muted;\r\n    };\r\n    SumerianProvider.prototype.setMuted = function (sceneName, muted) {\r\n        var sceneController = this.getSceneController(sceneName);\r\n        sceneController.muted = muted;\r\n    };\r\n    SumerianProvider.prototype.onSceneEvent = function (sceneName, eventName, eventHandler) {\r\n        var sceneController = this.getSceneController(sceneName);\r\n        sceneController.on(eventName, eventHandler);\r\n    };\r\n    SumerianProvider.prototype.enableAudio = function (sceneName) {\r\n        var sceneController = this.getSceneController(sceneName);\r\n        sceneController.enableAudio();\r\n    };\r\n    return SumerianProvider;\r\n}(AbstractXRProvider));\r\nexport { SumerianProvider };\r\n//# sourceMappingURL=SumerianProvider.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\n/*\r\n * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nimport { Amplify, ConsoleLogger as Logger } from '@aws-amplify/core';\r\nimport { SumerianProvider } from './Providers/SumerianProvider';\r\nimport { XRProviderNotConfigured } from './Errors';\r\nvar logger = new Logger('XR');\r\nvar DEFAULT_PROVIDER_NAME = 'SumerianProvider';\r\nvar XRClass = /** @class */ (function () {\r\n    /**\r\n     * Initialize XR with AWS configurations\r\n     *\r\n     * @param {XROptions} options - Configuration object for XR\r\n     */\r\n    function XRClass(options) {\r\n        this._options = options;\r\n        logger.debug('XR Options', this._options);\r\n        this._defaultProvider = DEFAULT_PROVIDER_NAME;\r\n        this._pluggables = {};\r\n        // Add default provider\r\n        this.addPluggable(new SumerianProvider());\r\n    }\r\n    /**\r\n     * Configure XR part with configurations\r\n     *\r\n     * @param {XROptions} config - Configuration for XR\r\n     * @return {Object} - The current configuration\r\n     */\r\n    XRClass.prototype.configure = function (options) {\r\n        var _this = this;\r\n        var opt = options ? options.XR || options : {};\r\n        logger.debug('configure XR', { opt: opt });\r\n        this._options = Object.assign({}, this._options, opt);\r\n        Object.entries(this._pluggables).map(function (_a) {\r\n            var _b = __read(_a, 2), name = _b[0], provider = _b[1];\r\n            if (name === _this._defaultProvider && !opt[_this._defaultProvider]) {\r\n                provider.configure(_this._options);\r\n            }\r\n            else {\r\n                provider.configure(_this._options[name]);\r\n            }\r\n        });\r\n        return this._options;\r\n    };\r\n    /**\r\n     * add plugin into XR category\r\n     * @param {Object} pluggable - an instance of the plugin\r\n     */\r\n    XRClass.prototype.addPluggable = function (pluggable) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var config;\r\n            return __generator(this, function (_a) {\r\n                if (pluggable && pluggable.getCategory() === 'XR') {\r\n                    this._pluggables[pluggable.getProviderName()] = pluggable;\r\n                    config = pluggable.configure(this._options);\r\n                    return [2 /*return*/, config];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    XRClass.prototype.loadScene = function (sceneName, domElementId, sceneOptions, provider) {\r\n        if (sceneOptions === void 0) { sceneOptions = {}; }\r\n        if (provider === void 0) { provider = this._defaultProvider; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this._pluggables[provider])\r\n                            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\r\n                        return [4 /*yield*/, this._pluggables[provider].loadScene(sceneName, domElementId, sceneOptions)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    XRClass.prototype.isSceneLoaded = function (sceneName, provider) {\r\n        if (provider === void 0) { provider = this._defaultProvider; }\r\n        if (!this._pluggables[provider])\r\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\r\n        return this._pluggables[provider].isSceneLoaded(sceneName);\r\n    };\r\n    XRClass.prototype.getSceneController = function (sceneName, provider) {\r\n        if (provider === void 0) { provider = this._defaultProvider; }\r\n        if (!this._pluggables[provider])\r\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\r\n        return this._pluggables[provider].getSceneController(sceneName);\r\n    };\r\n    XRClass.prototype.isVRCapable = function (sceneName, provider) {\r\n        if (provider === void 0) { provider = this._defaultProvider; }\r\n        if (!this._pluggables[provider])\r\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\r\n        return this._pluggables[provider].isVRCapable(sceneName);\r\n    };\r\n    XRClass.prototype.isVRPresentationActive = function (sceneName, provider) {\r\n        if (provider === void 0) { provider = this._defaultProvider; }\r\n        if (!this._pluggables[provider])\r\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\r\n        return this._pluggables[provider].isVRPresentationActive(sceneName);\r\n    };\r\n    XRClass.prototype.start = function (sceneName, provider) {\r\n        if (provider === void 0) { provider = this._defaultProvider; }\r\n        if (!this._pluggables[provider])\r\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\r\n        return this._pluggables[provider].start(sceneName);\r\n    };\r\n    XRClass.prototype.enterVR = function (sceneName, provider) {\r\n        if (provider === void 0) { provider = this._defaultProvider; }\r\n        if (!this._pluggables[provider])\r\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\r\n        return this._pluggables[provider].enterVR(sceneName);\r\n    };\r\n    XRClass.prototype.exitVR = function (sceneName, provider) {\r\n        if (provider === void 0) { provider = this._defaultProvider; }\r\n        if (!this._pluggables[provider])\r\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\r\n        return this._pluggables[provider].exitVR(sceneName);\r\n    };\r\n    XRClass.prototype.isMuted = function (sceneName, provider) {\r\n        if (provider === void 0) { provider = this._defaultProvider; }\r\n        if (!this._pluggables[provider])\r\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\r\n        return this._pluggables[provider].isMuted(sceneName);\r\n    };\r\n    XRClass.prototype.setMuted = function (sceneName, muted, provider) {\r\n        if (provider === void 0) { provider = this._defaultProvider; }\r\n        if (!this._pluggables[provider])\r\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\r\n        return this._pluggables[provider].setMuted(sceneName, muted);\r\n    };\r\n    XRClass.prototype.onSceneEvent = function (sceneName, eventName, eventHandler, provider) {\r\n        if (provider === void 0) { provider = this._defaultProvider; }\r\n        if (!this._pluggables[provider])\r\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\r\n        return this._pluggables[provider].onSceneEvent(sceneName, eventName, eventHandler);\r\n    };\r\n    XRClass.prototype.enableAudio = function (sceneName, provider) {\r\n        if (provider === void 0) { provider = this._defaultProvider; }\r\n        if (!this._pluggables[provider])\r\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\r\n        return this._pluggables[provider].enableAudio(sceneName);\r\n    };\r\n    return XRClass;\r\n}());\r\nexport { XRClass };\r\nexport var XR = new XRClass(null);\r\nAmplify.register(XR);\r\n//# sourceMappingURL=XR.js.map","/*\r\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nimport { XR } from './XR';\r\nexport { XR };\r\n/**\r\n * @deprecated use named import\r\n */\r\nexport default XR;\r\nexport * from './Providers/SumerianProvider';\r\nexport * from './Errors';\r\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}