{"version":3,"file":"s3-album.component.core.js","sourceRoot":"","sources":["../../../../../src/components/storage/s3-album-component/s3-album.component.core.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAU,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AAEpE,IAAM,QAAQ,GAAG,iVAYhB,CAAC;;IAeD,8BAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;wBANjC,EAAE;wBAIe,IAAI,YAAY,EAAU;QAG1D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;KAC7D;IAED,uCAAQ,GAAR;QACC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE;YACnC,MAAM,IAAI,KAAK,CACd,0DAA0D,CAC1D,CAAC;SACF;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KACxC;IAED,8CAAe,GAAf,UAAgB,KAAK;QACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC1B;0BAEY,sCAAI;uBAAC,IAAS;YAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACf,OAAO;aACP;YACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;;;;;0BAGjB,sCAAI;uBAAC,IAAY;YAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;;;;0BAGN,yCAAO;uBAAC,OAAY;YAChC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;;;;;IAGzB,sCAAO,GAAP,UAAQ,IAAI,EAAE,OAAO;QAArB,iBAaC;QAZA,IAAI,CAAC,IAAI,EAAE;YACV,OAAO;SACP;QACD,IAAI,CAAC,cAAc;aACjB,OAAO,EAAE;aACT,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;aACnB,IAAI,CAAC,UAAA,IAAI;YACT,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAA,IAAI;gBACxB,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;aAC1B,CAAC,CAAC;SACH,CAAC;aACD,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAhB,CAAgB,CAAC,CAAC;KAC/B;;gBA3DD,SAAS,SAAC;oBACV,QAAQ,EAAE,uBAAuB;oBACjC,QAAQ,UAAA;iBACR;;;;gBAnBQ,cAAc;;;6BA0BrB,MAAM;yBAoBN,KAAK;yBAQL,KAAK;4BAIL,KAAK;;+BA1EP;;SAoCa,oBAAoB","sourcesContent":["// tslint:disable\r\n/*\r\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n// tslint:enable\r\n\r\nimport { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { AmplifyService } from '../../../providers/amplify.service';\r\n\r\nconst template = `\r\n<div class=\"amplify-album\">\r\n  <div class=\"amplify-album-container\">\r\n    <amplify-s3-image-core\r\n      class=\"amplify-image-container\"\r\n      *ngFor=\"let item of list\"\r\n      path=\"{{item.path}}\"\r\n      [options]=\"_options\"\r\n      (selected)=\"onImageSelected($event)\"\r\n    ></amplify-s3-image-core>\r\n  </div>\r\n</div>\r\n`;\r\n\r\n@Component({\r\n\tselector: 'amplify-s3-album-core',\r\n\ttemplate,\r\n})\r\nexport class S3AlbumComponentCore implements OnInit {\r\n\tlist: Array<Object>;\r\n\t_path: string;\r\n\t_options: any = {};\r\n\tprotected logger: any;\r\n\r\n\t@Output()\r\n\tselected: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n\tconstructor(public amplifyService: AmplifyService) {\r\n\t\tthis.logger = this.amplifyService.logger('S3AlbumComponent');\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tif (!this.amplifyService.storage()) {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t'Storage module not registered on AmplifyService provider'\r\n\t\t\t);\r\n\t\t}\r\n\t\tthis.getList(this._path, this._options);\r\n\t}\r\n\r\n\tonImageSelected(event) {\r\n\t\tthis.selected.emit(event);\r\n\t}\r\n\r\n\t@Input() set data(data: any) {\r\n\t\tif (!data.path) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._path = data.path;\r\n\t\tthis._options = data.options;\r\n\t}\r\n\r\n\t@Input() set path(path: string) {\r\n\t\tthis._path = path;\r\n\t}\r\n\r\n\t@Input() set options(options: any) {\r\n\t\tthis._options = options;\r\n\t}\r\n\r\n\tgetList(path, options) {\r\n\t\tif (!path) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.amplifyService\r\n\t\t\t.storage()\r\n\t\t\t.list(path, options)\r\n\t\t\t.then(data => {\r\n\t\t\t\tthis.list = data.map(item => {\r\n\t\t\t\t\treturn { path: item.key };\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(e => console.error(e));\r\n\t}\r\n}\r\n"]}